// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type TemplateFindTemplatesTemplatesResponseIssues struct {
	Message string `json:"message"`
}

func (o *TemplateFindTemplatesTemplatesResponseIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// TemplateFindTemplatesTemplatesResponseResponseBody - Internal server error
type TemplateFindTemplatesTemplatesResponseResponseBody struct {
	Message  string                                         `json:"message"`
	Code     string                                         `json:"code"`
	Issues   []TemplateFindTemplatesTemplatesResponseIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                        `json:"-"`
}

var _ error = &TemplateFindTemplatesTemplatesResponseResponseBody{}

func (e *TemplateFindTemplatesTemplatesResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type TemplateFindTemplatesTemplatesIssues struct {
	Message string `json:"message"`
}

func (o *TemplateFindTemplatesTemplatesIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// TemplateFindTemplatesTemplatesResponseBody - Not found
type TemplateFindTemplatesTemplatesResponseBody struct {
	Message  string                                 `json:"message"`
	Code     string                                 `json:"code"`
	Issues   []TemplateFindTemplatesTemplatesIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &TemplateFindTemplatesTemplatesResponseBody{}

func (e *TemplateFindTemplatesTemplatesResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type TemplateFindTemplatesIssues struct {
	Message string `json:"message"`
}

func (o *TemplateFindTemplatesIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// TemplateFindTemplatesResponseBody - Invalid input data
type TemplateFindTemplatesResponseBody struct {
	Message  string                        `json:"message"`
	Code     string                        `json:"code"`
	Issues   []TemplateFindTemplatesIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata       `json:"-"`
}

var _ error = &TemplateFindTemplatesResponseBody{}

func (e *TemplateFindTemplatesResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
