// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientUpdateTemplateRecipientsRoleRequest string

const (
	RecipientUpdateTemplateRecipientsRoleRequestCc        RecipientUpdateTemplateRecipientsRoleRequest = "CC"
	RecipientUpdateTemplateRecipientsRoleRequestSigner    RecipientUpdateTemplateRecipientsRoleRequest = "SIGNER"
	RecipientUpdateTemplateRecipientsRoleRequestViewer    RecipientUpdateTemplateRecipientsRoleRequest = "VIEWER"
	RecipientUpdateTemplateRecipientsRoleRequestApprover  RecipientUpdateTemplateRecipientsRoleRequest = "APPROVER"
	RecipientUpdateTemplateRecipientsRoleRequestAssistant RecipientUpdateTemplateRecipientsRoleRequest = "ASSISTANT"
)

func (e RecipientUpdateTemplateRecipientsRoleRequest) ToPointer() *RecipientUpdateTemplateRecipientsRoleRequest {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsRoleRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientUpdateTemplateRecipientsRoleRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsRoleRequest: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsAccessAuthRequest - The type of authentication required for the recipient to access the document.
type RecipientUpdateTemplateRecipientsAccessAuthRequest string

const (
	RecipientUpdateTemplateRecipientsAccessAuthRequestAccount       RecipientUpdateTemplateRecipientsAccessAuthRequest = "ACCOUNT"
	RecipientUpdateTemplateRecipientsAccessAuthRequestTwoFactorAuth RecipientUpdateTemplateRecipientsAccessAuthRequest = "TWO_FACTOR_AUTH"
)

func (e RecipientUpdateTemplateRecipientsAccessAuthRequest) ToPointer() *RecipientUpdateTemplateRecipientsAccessAuthRequest {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsAccessAuthRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "TWO_FACTOR_AUTH":
		*e = RecipientUpdateTemplateRecipientsAccessAuthRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsAccessAuthRequest: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsActionAuthRequest - The type of authentication required for the recipient to sign the document.
type RecipientUpdateTemplateRecipientsActionAuthRequest string

const (
	RecipientUpdateTemplateRecipientsActionAuthRequestAccount       RecipientUpdateTemplateRecipientsActionAuthRequest = "ACCOUNT"
	RecipientUpdateTemplateRecipientsActionAuthRequestPasskey       RecipientUpdateTemplateRecipientsActionAuthRequest = "PASSKEY"
	RecipientUpdateTemplateRecipientsActionAuthRequestTwoFactorAuth RecipientUpdateTemplateRecipientsActionAuthRequest = "TWO_FACTOR_AUTH"
	RecipientUpdateTemplateRecipientsActionAuthRequestPassword      RecipientUpdateTemplateRecipientsActionAuthRequest = "PASSWORD"
	RecipientUpdateTemplateRecipientsActionAuthRequestExplicitNone  RecipientUpdateTemplateRecipientsActionAuthRequest = "EXPLICIT_NONE"
)

func (e RecipientUpdateTemplateRecipientsActionAuthRequest) ToPointer() *RecipientUpdateTemplateRecipientsActionAuthRequest {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsActionAuthRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateTemplateRecipientsActionAuthRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsActionAuthRequest: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsRecipientRequest struct {
	// The ID of the recipient to update.
	ID           float64                                              `json:"id"`
	Email        *string                                              `json:"email,omitempty"`
	Name         *string                                              `json:"name,omitempty"`
	Role         *RecipientUpdateTemplateRecipientsRoleRequest        `json:"role,omitempty"`
	SigningOrder *float64                                             `json:"signingOrder,omitempty"`
	AccessAuth   []RecipientUpdateTemplateRecipientsAccessAuthRequest `json:"accessAuth,omitempty"`
	ActionAuth   []RecipientUpdateTemplateRecipientsActionAuthRequest `json:"actionAuth,omitempty"`
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetEmail() *string {
	if r == nil {
		return nil
	}
	return r.Email
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetName() *string {
	if r == nil {
		return nil
	}
	return r.Name
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetRole() *RecipientUpdateTemplateRecipientsRoleRequest {
	if r == nil {
		return nil
	}
	return r.Role
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetSigningOrder() *float64 {
	if r == nil {
		return nil
	}
	return r.SigningOrder
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetAccessAuth() []RecipientUpdateTemplateRecipientsAccessAuthRequest {
	if r == nil {
		return nil
	}
	return r.AccessAuth
}

func (r *RecipientUpdateTemplateRecipientsRecipientRequest) GetActionAuth() []RecipientUpdateTemplateRecipientsActionAuthRequest {
	if r == nil {
		return nil
	}
	return r.ActionAuth
}

type RecipientUpdateTemplateRecipientsRequest struct {
	TemplateID float64                                             `json:"templateId"`
	Recipients []RecipientUpdateTemplateRecipientsRecipientRequest `json:"recipients"`
}

func (r *RecipientUpdateTemplateRecipientsRequest) GetTemplateID() float64 {
	if r == nil {
		return 0.0
	}
	return r.TemplateID
}

func (r *RecipientUpdateTemplateRecipientsRequest) GetRecipients() []RecipientUpdateTemplateRecipientsRecipientRequest {
	if r == nil {
		return []RecipientUpdateTemplateRecipientsRecipientRequest{}
	}
	return r.Recipients
}

type RecipientUpdateTemplateRecipientsRoleResponse string

const (
	RecipientUpdateTemplateRecipientsRoleResponseCc        RecipientUpdateTemplateRecipientsRoleResponse = "CC"
	RecipientUpdateTemplateRecipientsRoleResponseSigner    RecipientUpdateTemplateRecipientsRoleResponse = "SIGNER"
	RecipientUpdateTemplateRecipientsRoleResponseViewer    RecipientUpdateTemplateRecipientsRoleResponse = "VIEWER"
	RecipientUpdateTemplateRecipientsRoleResponseApprover  RecipientUpdateTemplateRecipientsRoleResponse = "APPROVER"
	RecipientUpdateTemplateRecipientsRoleResponseAssistant RecipientUpdateTemplateRecipientsRoleResponse = "ASSISTANT"
)

func (e RecipientUpdateTemplateRecipientsRoleResponse) ToPointer() *RecipientUpdateTemplateRecipientsRoleResponse {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsRoleResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientUpdateTemplateRecipientsRoleResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsRoleResponse: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsReadStatus string

const (
	RecipientUpdateTemplateRecipientsReadStatusNotOpened RecipientUpdateTemplateRecipientsReadStatus = "NOT_OPENED"
	RecipientUpdateTemplateRecipientsReadStatusOpened    RecipientUpdateTemplateRecipientsReadStatus = "OPENED"
)

func (e RecipientUpdateTemplateRecipientsReadStatus) ToPointer() *RecipientUpdateTemplateRecipientsReadStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientUpdateTemplateRecipientsReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsReadStatus: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsSigningStatus string

const (
	RecipientUpdateTemplateRecipientsSigningStatusNotSigned RecipientUpdateTemplateRecipientsSigningStatus = "NOT_SIGNED"
	RecipientUpdateTemplateRecipientsSigningStatusSigned    RecipientUpdateTemplateRecipientsSigningStatus = "SIGNED"
	RecipientUpdateTemplateRecipientsSigningStatusRejected  RecipientUpdateTemplateRecipientsSigningStatus = "REJECTED"
)

func (e RecipientUpdateTemplateRecipientsSigningStatus) ToPointer() *RecipientUpdateTemplateRecipientsSigningStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientUpdateTemplateRecipientsSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsSigningStatus: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsSendStatus string

const (
	RecipientUpdateTemplateRecipientsSendStatusNotSent RecipientUpdateTemplateRecipientsSendStatus = "NOT_SENT"
	RecipientUpdateTemplateRecipientsSendStatusSent    RecipientUpdateTemplateRecipientsSendStatus = "SENT"
)

func (e RecipientUpdateTemplateRecipientsSendStatus) ToPointer() *RecipientUpdateTemplateRecipientsSendStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientUpdateTemplateRecipientsSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsSendStatus: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsAccessAuthResponse - The type of authentication required for the recipient to access the document.
type RecipientUpdateTemplateRecipientsAccessAuthResponse string

const (
	RecipientUpdateTemplateRecipientsAccessAuthResponseAccount       RecipientUpdateTemplateRecipientsAccessAuthResponse = "ACCOUNT"
	RecipientUpdateTemplateRecipientsAccessAuthResponseTwoFactorAuth RecipientUpdateTemplateRecipientsAccessAuthResponse = "TWO_FACTOR_AUTH"
)

func (e RecipientUpdateTemplateRecipientsAccessAuthResponse) ToPointer() *RecipientUpdateTemplateRecipientsAccessAuthResponse {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsAccessAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "TWO_FACTOR_AUTH":
		*e = RecipientUpdateTemplateRecipientsAccessAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsAccessAuthResponse: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsActionAuthResponse - The type of authentication required for the recipient to sign the document.
type RecipientUpdateTemplateRecipientsActionAuthResponse string

const (
	RecipientUpdateTemplateRecipientsActionAuthResponseAccount       RecipientUpdateTemplateRecipientsActionAuthResponse = "ACCOUNT"
	RecipientUpdateTemplateRecipientsActionAuthResponsePasskey       RecipientUpdateTemplateRecipientsActionAuthResponse = "PASSKEY"
	RecipientUpdateTemplateRecipientsActionAuthResponseTwoFactorAuth RecipientUpdateTemplateRecipientsActionAuthResponse = "TWO_FACTOR_AUTH"
	RecipientUpdateTemplateRecipientsActionAuthResponsePassword      RecipientUpdateTemplateRecipientsActionAuthResponse = "PASSWORD"
	RecipientUpdateTemplateRecipientsActionAuthResponseExplicitNone  RecipientUpdateTemplateRecipientsActionAuthResponse = "EXPLICIT_NONE"
)

func (e RecipientUpdateTemplateRecipientsActionAuthResponse) ToPointer() *RecipientUpdateTemplateRecipientsActionAuthResponse {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsActionAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateTemplateRecipientsActionAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsActionAuthResponse: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsAuthOptions struct {
	AccessAuth []RecipientUpdateTemplateRecipientsAccessAuthResponse `json:"accessAuth"`
	ActionAuth []RecipientUpdateTemplateRecipientsActionAuthResponse `json:"actionAuth"`
}

func (r *RecipientUpdateTemplateRecipientsAuthOptions) GetAccessAuth() []RecipientUpdateTemplateRecipientsAccessAuthResponse {
	if r == nil {
		return []RecipientUpdateTemplateRecipientsAccessAuthResponse{}
	}
	return r.AccessAuth
}

func (r *RecipientUpdateTemplateRecipientsAuthOptions) GetActionAuth() []RecipientUpdateTemplateRecipientsActionAuthResponse {
	if r == nil {
		return []RecipientUpdateTemplateRecipientsActionAuthResponse{}
	}
	return r.ActionAuth
}

type RecipientUpdateTemplateRecipientsType string

const (
	RecipientUpdateTemplateRecipientsTypeSignature     RecipientUpdateTemplateRecipientsType = "SIGNATURE"
	RecipientUpdateTemplateRecipientsTypeFreeSignature RecipientUpdateTemplateRecipientsType = "FREE_SIGNATURE"
	RecipientUpdateTemplateRecipientsTypeInitials      RecipientUpdateTemplateRecipientsType = "INITIALS"
	RecipientUpdateTemplateRecipientsTypeName          RecipientUpdateTemplateRecipientsType = "NAME"
	RecipientUpdateTemplateRecipientsTypeEmail         RecipientUpdateTemplateRecipientsType = "EMAIL"
	RecipientUpdateTemplateRecipientsTypeDate          RecipientUpdateTemplateRecipientsType = "DATE"
	RecipientUpdateTemplateRecipientsTypeText          RecipientUpdateTemplateRecipientsType = "TEXT"
	RecipientUpdateTemplateRecipientsTypeNumber        RecipientUpdateTemplateRecipientsType = "NUMBER"
	RecipientUpdateTemplateRecipientsTypeRadio         RecipientUpdateTemplateRecipientsType = "RADIO"
	RecipientUpdateTemplateRecipientsTypeCheckbox      RecipientUpdateTemplateRecipientsType = "CHECKBOX"
	RecipientUpdateTemplateRecipientsTypeDropdown      RecipientUpdateTemplateRecipientsType = "DROPDOWN"
)

func (e RecipientUpdateTemplateRecipientsType) ToPointer() *RecipientUpdateTemplateRecipientsType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientUpdateTemplateRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeDropdownDropdown RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown = "dropdown"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsValue3 struct {
	Value string `json:"value"`
}

func (r RecipientUpdateTemplateRecipientsValue3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsValue3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"value"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsValue3) GetValue() string {
	if r == nil {
		return ""
	}
	return r.Value
}

type RecipientUpdateTemplateRecipientsFieldMetaDropdown struct {
	Label        *string                                                `json:"label,omitempty"`
	Placeholder  *string                                                `json:"placeholder,omitempty"`
	Required     *bool                                                  `json:"required,omitempty"`
	ReadOnly     *bool                                                  `json:"readOnly,omitempty"`
	Type         RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown `json:"type"`
	Values       []RecipientUpdateTemplateRecipientsValue3              `json:"values,omitempty"`
	DefaultValue *string                                                `json:"defaultValue,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaDropdown) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeDropdown("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetValues() []RecipientUpdateTemplateRecipientsValue3 {
	if r == nil {
		return nil
	}
	return r.Values
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDropdown) GetDefaultValue() *string {
	if r == nil {
		return nil
	}
	return r.DefaultValue
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeCheckboxCheckbox RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox = "checkbox"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsValue2 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (r RecipientUpdateTemplateRecipientsValue2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsValue2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"id", "checked", "value"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsValue2) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateTemplateRecipientsValue2) GetChecked() bool {
	if r == nil {
		return false
	}
	return r.Checked
}

func (r *RecipientUpdateTemplateRecipientsValue2) GetValue() string {
	if r == nil {
		return ""
	}
	return r.Value
}

type RecipientUpdateTemplateRecipientsDirection string

const (
	RecipientUpdateTemplateRecipientsDirectionVertical   RecipientUpdateTemplateRecipientsDirection = "vertical"
	RecipientUpdateTemplateRecipientsDirectionHorizontal RecipientUpdateTemplateRecipientsDirection = "horizontal"
)

func (e RecipientUpdateTemplateRecipientsDirection) ToPointer() *RecipientUpdateTemplateRecipientsDirection {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vertical":
		fallthrough
	case "horizontal":
		*e = RecipientUpdateTemplateRecipientsDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsDirection: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaCheckbox struct {
	Label            *string                                                `json:"label,omitempty"`
	Placeholder      *string                                                `json:"placeholder,omitempty"`
	Required         *bool                                                  `json:"required,omitempty"`
	ReadOnly         *bool                                                  `json:"readOnly,omitempty"`
	Type             RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox `json:"type"`
	Values           []RecipientUpdateTemplateRecipientsValue2              `json:"values,omitempty"`
	ValidationRule   *string                                                `json:"validationRule,omitempty"`
	ValidationLength *float64                                               `json:"validationLength,omitempty"`
	Direction        *RecipientUpdateTemplateRecipientsDirection            `default:"vertical" json:"direction"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaCheckbox) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeCheckbox("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetValues() []RecipientUpdateTemplateRecipientsValue2 {
	if r == nil {
		return nil
	}
	return r.Values
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetValidationRule() *string {
	if r == nil {
		return nil
	}
	return r.ValidationRule
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetValidationLength() *float64 {
	if r == nil {
		return nil
	}
	return r.ValidationLength
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaCheckbox) GetDirection() *RecipientUpdateTemplateRecipientsDirection {
	if r == nil {
		return nil
	}
	return r.Direction
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeRadio string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeRadioRadio RecipientUpdateTemplateRecipientsFieldMetaTypeRadio = "radio"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeRadio) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeRadio {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeRadio) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeRadio(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeRadio: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsValue1 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (r RecipientUpdateTemplateRecipientsValue1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsValue1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"id", "checked", "value"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsValue1) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateTemplateRecipientsValue1) GetChecked() bool {
	if r == nil {
		return false
	}
	return r.Checked
}

func (r *RecipientUpdateTemplateRecipientsValue1) GetValue() string {
	if r == nil {
		return ""
	}
	return r.Value
}

type RecipientUpdateTemplateRecipientsFieldMetaRadio struct {
	Label       *string                                             `json:"label,omitempty"`
	Placeholder *string                                             `json:"placeholder,omitempty"`
	Required    *bool                                               `json:"required,omitempty"`
	ReadOnly    *bool                                               `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTypeRadio `json:"type"`
	Values      []RecipientUpdateTemplateRecipientsValue1           `json:"values,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaRadio) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeRadio {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeRadio("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaRadio) GetValues() []RecipientUpdateTemplateRecipientsValue1 {
	if r == nil {
		return nil
	}
	return r.Values
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeNumber string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeNumberNumber RecipientUpdateTemplateRecipientsFieldMetaTypeNumber = "number"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeNumber) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeNumber {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeNumber) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeNumber(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeNumber: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsTextAlign6 string

const (
	RecipientUpdateTemplateRecipientsTextAlign6Left   RecipientUpdateTemplateRecipientsTextAlign6 = "left"
	RecipientUpdateTemplateRecipientsTextAlign6Center RecipientUpdateTemplateRecipientsTextAlign6 = "center"
	RecipientUpdateTemplateRecipientsTextAlign6Right  RecipientUpdateTemplateRecipientsTextAlign6 = "right"
)

func (e RecipientUpdateTemplateRecipientsTextAlign6) ToPointer() *RecipientUpdateTemplateRecipientsTextAlign6 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTextAlign6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientsTextAlign6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTextAlign6: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaNumber struct {
	Label        *string                                              `json:"label,omitempty"`
	Placeholder  *string                                              `json:"placeholder,omitempty"`
	Required     *bool                                                `json:"required,omitempty"`
	ReadOnly     *bool                                                `json:"readOnly,omitempty"`
	Type         RecipientUpdateTemplateRecipientsFieldMetaTypeNumber `json:"type"`
	NumberFormat *string                                              `json:"numberFormat,omitempty"`
	Value        *string                                              `json:"value,omitempty"`
	MinValue     *float64                                             `json:"minValue,omitempty"`
	MaxValue     *float64                                             `json:"maxValue,omitempty"`
	FontSize     *float64                                             `json:"fontSize,omitempty"`
	TextAlign    *RecipientUpdateTemplateRecipientsTextAlign6         `json:"textAlign,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaNumber) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeNumber {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeNumber("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetNumberFormat() *string {
	if r == nil {
		return nil
	}
	return r.NumberFormat
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetValue() *string {
	if r == nil {
		return nil
	}
	return r.Value
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetMinValue() *float64 {
	if r == nil {
		return nil
	}
	return r.MinValue
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetMaxValue() *float64 {
	if r == nil {
		return nil
	}
	return r.MaxValue
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaNumber) GetTextAlign() *RecipientUpdateTemplateRecipientsTextAlign6 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeText string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeTextText RecipientUpdateTemplateRecipientsFieldMetaTypeText = "text"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeText) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeText {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeText) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeText(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeText: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsTextAlign5 string

const (
	RecipientUpdateTemplateRecipientsTextAlign5Left   RecipientUpdateTemplateRecipientsTextAlign5 = "left"
	RecipientUpdateTemplateRecipientsTextAlign5Center RecipientUpdateTemplateRecipientsTextAlign5 = "center"
	RecipientUpdateTemplateRecipientsTextAlign5Right  RecipientUpdateTemplateRecipientsTextAlign5 = "right"
)

func (e RecipientUpdateTemplateRecipientsTextAlign5) ToPointer() *RecipientUpdateTemplateRecipientsTextAlign5 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTextAlign5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientsTextAlign5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTextAlign5: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaText struct {
	Label          *string                                            `json:"label,omitempty"`
	Placeholder    *string                                            `json:"placeholder,omitempty"`
	Required       *bool                                              `json:"required,omitempty"`
	ReadOnly       *bool                                              `json:"readOnly,omitempty"`
	Type           RecipientUpdateTemplateRecipientsFieldMetaTypeText `json:"type"`
	Text           *string                                            `json:"text,omitempty"`
	CharacterLimit *float64                                           `json:"characterLimit,omitempty"`
	FontSize       *float64                                           `json:"fontSize,omitempty"`
	TextAlign      *RecipientUpdateTemplateRecipientsTextAlign5       `json:"textAlign,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaText) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeText {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeText("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetText() *string {
	if r == nil {
		return nil
	}
	return r.Text
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetCharacterLimit() *float64 {
	if r == nil {
		return nil
	}
	return r.CharacterLimit
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaText) GetTextAlign() *RecipientUpdateTemplateRecipientsTextAlign5 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeDate string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeDateDate RecipientUpdateTemplateRecipientsFieldMetaTypeDate = "date"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeDate) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeDate {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeDate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeDate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeDate: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsTextAlign4 string

const (
	RecipientUpdateTemplateRecipientsTextAlign4Left   RecipientUpdateTemplateRecipientsTextAlign4 = "left"
	RecipientUpdateTemplateRecipientsTextAlign4Center RecipientUpdateTemplateRecipientsTextAlign4 = "center"
	RecipientUpdateTemplateRecipientsTextAlign4Right  RecipientUpdateTemplateRecipientsTextAlign4 = "right"
)

func (e RecipientUpdateTemplateRecipientsTextAlign4) ToPointer() *RecipientUpdateTemplateRecipientsTextAlign4 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTextAlign4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientsTextAlign4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTextAlign4: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaDate struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTypeDate `json:"type"`
	FontSize    *float64                                           `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientsTextAlign4       `json:"textAlign,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaDate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeDate {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeDate("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaDate) GetTextAlign() *RecipientUpdateTemplateRecipientsTextAlign4 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeEmail string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeEmailEmail RecipientUpdateTemplateRecipientsFieldMetaTypeEmail = "email"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeEmail) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeEmail {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeEmail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeEmail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeEmail: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsTextAlign3 string

const (
	RecipientUpdateTemplateRecipientsTextAlign3Left   RecipientUpdateTemplateRecipientsTextAlign3 = "left"
	RecipientUpdateTemplateRecipientsTextAlign3Center RecipientUpdateTemplateRecipientsTextAlign3 = "center"
	RecipientUpdateTemplateRecipientsTextAlign3Right  RecipientUpdateTemplateRecipientsTextAlign3 = "right"
)

func (e RecipientUpdateTemplateRecipientsTextAlign3) ToPointer() *RecipientUpdateTemplateRecipientsTextAlign3 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTextAlign3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientsTextAlign3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTextAlign3: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaEmail struct {
	Label       *string                                             `json:"label,omitempty"`
	Placeholder *string                                             `json:"placeholder,omitempty"`
	Required    *bool                                               `json:"required,omitempty"`
	ReadOnly    *bool                                               `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTypeEmail `json:"type"`
	FontSize    *float64                                            `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientsTextAlign3        `json:"textAlign,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaEmail) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeEmail {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeEmail("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaEmail) GetTextAlign() *RecipientUpdateTemplateRecipientsTextAlign3 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeName string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeNameName RecipientUpdateTemplateRecipientsFieldMetaTypeName = "name"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeName) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeName {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeName: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsTextAlign2 string

const (
	RecipientUpdateTemplateRecipientsTextAlign2Left   RecipientUpdateTemplateRecipientsTextAlign2 = "left"
	RecipientUpdateTemplateRecipientsTextAlign2Center RecipientUpdateTemplateRecipientsTextAlign2 = "center"
	RecipientUpdateTemplateRecipientsTextAlign2Right  RecipientUpdateTemplateRecipientsTextAlign2 = "right"
)

func (e RecipientUpdateTemplateRecipientsTextAlign2) ToPointer() *RecipientUpdateTemplateRecipientsTextAlign2 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTextAlign2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientsTextAlign2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTextAlign2: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaName struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTypeName `json:"type"`
	FontSize    *float64                                           `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientsTextAlign2       `json:"textAlign,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaName) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeName {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeName("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaName) GetTextAlign() *RecipientUpdateTemplateRecipientsTextAlign2 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateTemplateRecipientsFieldMetaTypeInitials string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeInitialsInitials RecipientUpdateTemplateRecipientsFieldMetaTypeInitials = "initials"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTypeInitials) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTypeInitials {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTypeInitials) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTypeInitials(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTypeInitials: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsTextAlign1 string

const (
	RecipientUpdateTemplateRecipientsTextAlign1Left   RecipientUpdateTemplateRecipientsTextAlign1 = "left"
	RecipientUpdateTemplateRecipientsTextAlign1Center RecipientUpdateTemplateRecipientsTextAlign1 = "center"
	RecipientUpdateTemplateRecipientsTextAlign1Right  RecipientUpdateTemplateRecipientsTextAlign1 = "right"
)

func (e RecipientUpdateTemplateRecipientsTextAlign1) ToPointer() *RecipientUpdateTemplateRecipientsTextAlign1 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTextAlign1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientsTextAlign1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTextAlign1: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaInitials struct {
	Label       *string                                                `json:"label,omitempty"`
	Placeholder *string                                                `json:"placeholder,omitempty"`
	Required    *bool                                                  `json:"required,omitempty"`
	ReadOnly    *bool                                                  `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTypeInitials `json:"type"`
	FontSize    *float64                                               `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientsTextAlign1           `json:"textAlign,omitempty"`
}

func (r RecipientUpdateTemplateRecipientsFieldMetaInitials) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetType() RecipientUpdateTemplateRecipientsFieldMetaTypeInitials {
	if r == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTypeInitials("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateTemplateRecipientsFieldMetaInitials) GetTextAlign() *RecipientUpdateTemplateRecipientsTextAlign1 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateTemplateRecipientsFieldMetaUnionType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaInitials RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Initials"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaName     RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Name"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaEmail    RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Email"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaDate     RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Date"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaText     RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Text"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaNumber   RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Number"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaRadio    RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Radio"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaCheckbox RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Checkbox"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaDropdown RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient_updateTemplateRecipients_fieldMeta_Dropdown"
)

type RecipientUpdateTemplateRecipientsFieldMetaUnion struct {
	RecipientUpdateTemplateRecipientsFieldMetaInitials *RecipientUpdateTemplateRecipientsFieldMetaInitials `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaName     *RecipientUpdateTemplateRecipientsFieldMetaName     `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaEmail    *RecipientUpdateTemplateRecipientsFieldMetaEmail    `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaDate     *RecipientUpdateTemplateRecipientsFieldMetaDate     `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaText     *RecipientUpdateTemplateRecipientsFieldMetaText     `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaNumber   *RecipientUpdateTemplateRecipientsFieldMetaNumber   `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaRadio    *RecipientUpdateTemplateRecipientsFieldMetaRadio    `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaCheckbox *RecipientUpdateTemplateRecipientsFieldMetaCheckbox `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateTemplateRecipientsFieldMetaDropdown *RecipientUpdateTemplateRecipientsFieldMetaDropdown `queryParam:"inline,name=fieldMeta"`

	Type RecipientUpdateTemplateRecipientsFieldMetaUnionType
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaInitials(recipientUpdateTemplateRecipientsFieldMetaInitials RecipientUpdateTemplateRecipientsFieldMetaInitials) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaInitials

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaInitials: &recipientUpdateTemplateRecipientsFieldMetaInitials,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaName(recipientUpdateTemplateRecipientsFieldMetaName RecipientUpdateTemplateRecipientsFieldMetaName) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaName

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaName: &recipientUpdateTemplateRecipientsFieldMetaName,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaEmail(recipientUpdateTemplateRecipientsFieldMetaEmail RecipientUpdateTemplateRecipientsFieldMetaEmail) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaEmail

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaEmail: &recipientUpdateTemplateRecipientsFieldMetaEmail,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaDate(recipientUpdateTemplateRecipientsFieldMetaDate RecipientUpdateTemplateRecipientsFieldMetaDate) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaDate

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaDate: &recipientUpdateTemplateRecipientsFieldMetaDate,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaText(recipientUpdateTemplateRecipientsFieldMetaText RecipientUpdateTemplateRecipientsFieldMetaText) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaText

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaText: &recipientUpdateTemplateRecipientsFieldMetaText,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaNumber(recipientUpdateTemplateRecipientsFieldMetaNumber RecipientUpdateTemplateRecipientsFieldMetaNumber) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaNumber

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaNumber: &recipientUpdateTemplateRecipientsFieldMetaNumber,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaRadio(recipientUpdateTemplateRecipientsFieldMetaRadio RecipientUpdateTemplateRecipientsFieldMetaRadio) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaRadio

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaRadio: &recipientUpdateTemplateRecipientsFieldMetaRadio,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaCheckbox(recipientUpdateTemplateRecipientsFieldMetaCheckbox RecipientUpdateTemplateRecipientsFieldMetaCheckbox) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaCheckbox

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaCheckbox: &recipientUpdateTemplateRecipientsFieldMetaCheckbox,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaUnionRecipientUpdateTemplateRecipientsFieldMetaDropdown(recipientUpdateTemplateRecipientsFieldMetaDropdown RecipientUpdateTemplateRecipientsFieldMetaDropdown) RecipientUpdateTemplateRecipientsFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaDropdown

	return RecipientUpdateTemplateRecipientsFieldMetaUnion{
		RecipientUpdateTemplateRecipientsFieldMetaDropdown: &recipientUpdateTemplateRecipientsFieldMetaDropdown,
		Type: typ,
	}
}

func (u *RecipientUpdateTemplateRecipientsFieldMetaUnion) UnmarshalJSON(data []byte) error {

	var recipientUpdateTemplateRecipientsFieldMetaInitials RecipientUpdateTemplateRecipientsFieldMetaInitials = RecipientUpdateTemplateRecipientsFieldMetaInitials{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaInitials, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaInitials = &recipientUpdateTemplateRecipientsFieldMetaInitials
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaInitials
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaName RecipientUpdateTemplateRecipientsFieldMetaName = RecipientUpdateTemplateRecipientsFieldMetaName{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaName, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaName = &recipientUpdateTemplateRecipientsFieldMetaName
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaName
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaEmail RecipientUpdateTemplateRecipientsFieldMetaEmail = RecipientUpdateTemplateRecipientsFieldMetaEmail{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaEmail, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaEmail = &recipientUpdateTemplateRecipientsFieldMetaEmail
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaEmail
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaDate RecipientUpdateTemplateRecipientsFieldMetaDate = RecipientUpdateTemplateRecipientsFieldMetaDate{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaDate, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaDate = &recipientUpdateTemplateRecipientsFieldMetaDate
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaDate
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaText RecipientUpdateTemplateRecipientsFieldMetaText = RecipientUpdateTemplateRecipientsFieldMetaText{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaText, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaText = &recipientUpdateTemplateRecipientsFieldMetaText
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaText
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaNumber RecipientUpdateTemplateRecipientsFieldMetaNumber = RecipientUpdateTemplateRecipientsFieldMetaNumber{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaNumber, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaNumber = &recipientUpdateTemplateRecipientsFieldMetaNumber
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaNumber
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaRadio RecipientUpdateTemplateRecipientsFieldMetaRadio = RecipientUpdateTemplateRecipientsFieldMetaRadio{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaRadio, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaRadio = &recipientUpdateTemplateRecipientsFieldMetaRadio
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaRadio
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaCheckbox RecipientUpdateTemplateRecipientsFieldMetaCheckbox = RecipientUpdateTemplateRecipientsFieldMetaCheckbox{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaCheckbox, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaCheckbox = &recipientUpdateTemplateRecipientsFieldMetaCheckbox
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaCheckbox
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMetaDropdown RecipientUpdateTemplateRecipientsFieldMetaDropdown = RecipientUpdateTemplateRecipientsFieldMetaDropdown{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMetaDropdown, "", true, nil); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMetaDropdown = &recipientUpdateTemplateRecipientsFieldMetaDropdown
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMetaDropdown
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientUpdateTemplateRecipientsFieldMetaUnion", string(data))
}

func (u RecipientUpdateTemplateRecipientsFieldMetaUnion) MarshalJSON() ([]byte, error) {
	if u.RecipientUpdateTemplateRecipientsFieldMetaInitials != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaInitials, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaName != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaName, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaEmail != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaEmail, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaDate != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaDate, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaText != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaText, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaNumber != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaNumber, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaRadio != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaRadio, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaCheckbox != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaCheckbox, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMetaDropdown != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMetaDropdown, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientUpdateTemplateRecipientsFieldMetaUnion: all fields are null")
}

type RecipientUpdateTemplateRecipientsField struct {
	EnvelopeID     string                                `json:"envelopeId"`
	EnvelopeItemID string                                `json:"envelopeItemId"`
	Type           RecipientUpdateTemplateRecipientsType `json:"type"`
	ID             float64                               `json:"id"`
	SecondaryID    string                                `json:"secondaryId"`
	RecipientID    float64                               `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                          `json:"page"`
	PositionX  any                                              `json:"positionX,omitempty"`
	PositionY  any                                              `json:"positionY,omitempty"`
	Width      any                                              `json:"width,omitempty"`
	Height     any                                              `json:"height,omitempty"`
	CustomText string                                           `json:"customText"`
	Inserted   bool                                             `json:"inserted"`
	FieldMeta  *RecipientUpdateTemplateRecipientsFieldMetaUnion `json:"fieldMeta"`
	DocumentID *float64                                         `json:"documentId,omitempty"`
	TemplateID *float64                                         `json:"templateId,omitempty"`
}

func (r *RecipientUpdateTemplateRecipientsField) GetEnvelopeID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeID
}

func (r *RecipientUpdateTemplateRecipientsField) GetEnvelopeItemID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeItemID
}

func (r *RecipientUpdateTemplateRecipientsField) GetType() RecipientUpdateTemplateRecipientsType {
	if r == nil {
		return RecipientUpdateTemplateRecipientsType("")
	}
	return r.Type
}

func (r *RecipientUpdateTemplateRecipientsField) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateTemplateRecipientsField) GetSecondaryID() string {
	if r == nil {
		return ""
	}
	return r.SecondaryID
}

func (r *RecipientUpdateTemplateRecipientsField) GetRecipientID() float64 {
	if r == nil {
		return 0.0
	}
	return r.RecipientID
}

func (r *RecipientUpdateTemplateRecipientsField) GetPage() float64 {
	if r == nil {
		return 0.0
	}
	return r.Page
}

func (r *RecipientUpdateTemplateRecipientsField) GetPositionX() any {
	if r == nil {
		return nil
	}
	return r.PositionX
}

func (r *RecipientUpdateTemplateRecipientsField) GetPositionY() any {
	if r == nil {
		return nil
	}
	return r.PositionY
}

func (r *RecipientUpdateTemplateRecipientsField) GetWidth() any {
	if r == nil {
		return nil
	}
	return r.Width
}

func (r *RecipientUpdateTemplateRecipientsField) GetHeight() any {
	if r == nil {
		return nil
	}
	return r.Height
}

func (r *RecipientUpdateTemplateRecipientsField) GetCustomText() string {
	if r == nil {
		return ""
	}
	return r.CustomText
}

func (r *RecipientUpdateTemplateRecipientsField) GetInserted() bool {
	if r == nil {
		return false
	}
	return r.Inserted
}

func (r *RecipientUpdateTemplateRecipientsField) GetFieldMeta() *RecipientUpdateTemplateRecipientsFieldMetaUnion {
	if r == nil {
		return nil
	}
	return r.FieldMeta
}

func (r *RecipientUpdateTemplateRecipientsField) GetDocumentID() *float64 {
	if r == nil {
		return nil
	}
	return r.DocumentID
}

func (r *RecipientUpdateTemplateRecipientsField) GetTemplateID() *float64 {
	if r == nil {
		return nil
	}
	return r.TemplateID
}

type RecipientUpdateTemplateRecipientsRecipientResponse struct {
	EnvelopeID        string                                         `json:"envelopeId"`
	Role              RecipientUpdateTemplateRecipientsRoleResponse  `json:"role"`
	ReadStatus        RecipientUpdateTemplateRecipientsReadStatus    `json:"readStatus"`
	SigningStatus     RecipientUpdateTemplateRecipientsSigningStatus `json:"signingStatus"`
	SendStatus        RecipientUpdateTemplateRecipientsSendStatus    `json:"sendStatus"`
	ID                float64                                        `json:"id"`
	Email             string                                         `json:"email"`
	Name              string                                         `json:"name"`
	Token             string                                         `json:"token"`
	DocumentDeletedAt *string                                        `json:"documentDeletedAt"`
	Expired           *string                                        `json:"expired"`
	SignedAt          *string                                        `json:"signedAt"`
	AuthOptions       *RecipientUpdateTemplateRecipientsAuthOptions  `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                                 `json:"signingOrder"`
	RejectionReason *string                                  `json:"rejectionReason"`
	Fields          []RecipientUpdateTemplateRecipientsField `json:"fields"`
	DocumentID      *float64                                 `json:"documentId,omitempty"`
	TemplateID      *float64                                 `json:"templateId,omitempty"`
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetEnvelopeID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeID
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetRole() RecipientUpdateTemplateRecipientsRoleResponse {
	if r == nil {
		return RecipientUpdateTemplateRecipientsRoleResponse("")
	}
	return r.Role
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetReadStatus() RecipientUpdateTemplateRecipientsReadStatus {
	if r == nil {
		return RecipientUpdateTemplateRecipientsReadStatus("")
	}
	return r.ReadStatus
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetSigningStatus() RecipientUpdateTemplateRecipientsSigningStatus {
	if r == nil {
		return RecipientUpdateTemplateRecipientsSigningStatus("")
	}
	return r.SigningStatus
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetSendStatus() RecipientUpdateTemplateRecipientsSendStatus {
	if r == nil {
		return RecipientUpdateTemplateRecipientsSendStatus("")
	}
	return r.SendStatus
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetEmail() string {
	if r == nil {
		return ""
	}
	return r.Email
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetName() string {
	if r == nil {
		return ""
	}
	return r.Name
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetToken() string {
	if r == nil {
		return ""
	}
	return r.Token
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetDocumentDeletedAt() *string {
	if r == nil {
		return nil
	}
	return r.DocumentDeletedAt
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetExpired() *string {
	if r == nil {
		return nil
	}
	return r.Expired
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetSignedAt() *string {
	if r == nil {
		return nil
	}
	return r.SignedAt
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetAuthOptions() *RecipientUpdateTemplateRecipientsAuthOptions {
	if r == nil {
		return nil
	}
	return r.AuthOptions
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetSigningOrder() *float64 {
	if r == nil {
		return nil
	}
	return r.SigningOrder
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetRejectionReason() *string {
	if r == nil {
		return nil
	}
	return r.RejectionReason
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetFields() []RecipientUpdateTemplateRecipientsField {
	if r == nil {
		return []RecipientUpdateTemplateRecipientsField{}
	}
	return r.Fields
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetDocumentID() *float64 {
	if r == nil {
		return nil
	}
	return r.DocumentID
}

func (r *RecipientUpdateTemplateRecipientsRecipientResponse) GetTemplateID() *float64 {
	if r == nil {
		return nil
	}
	return r.TemplateID
}

// RecipientUpdateTemplateRecipientsResponseBody - Successful response
type RecipientUpdateTemplateRecipientsResponseBody struct {
	Recipients []RecipientUpdateTemplateRecipientsRecipientResponse `json:"recipients"`
}

func (r *RecipientUpdateTemplateRecipientsResponseBody) GetRecipients() []RecipientUpdateTemplateRecipientsRecipientResponse {
	if r == nil {
		return []RecipientUpdateTemplateRecipientsRecipientResponse{}
	}
	return r.Recipients
}

type RecipientUpdateTemplateRecipientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientUpdateTemplateRecipientsResponseBody
}

func (r *RecipientUpdateTemplateRecipientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *RecipientUpdateTemplateRecipientsResponse) GetObject() *RecipientUpdateTemplateRecipientsResponseBody {
	if r == nil {
		return nil
	}
	return r.Object
}
