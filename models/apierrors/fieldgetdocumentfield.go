// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type FieldGetDocumentFieldInternalServerErrorIssue struct {
	Message string `json:"message"`
}

func (o *FieldGetDocumentFieldInternalServerErrorIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// FieldGetDocumentFieldInternalServerError - Internal server error
type FieldGetDocumentFieldInternalServerError struct {
	Message  string                                          `json:"message"`
	Code     string                                          `json:"code"`
	Issues   []FieldGetDocumentFieldInternalServerErrorIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                         `json:"-"`
}

var _ error = &FieldGetDocumentFieldInternalServerError{}

func (e *FieldGetDocumentFieldInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type FieldGetDocumentFieldNotFoundIssue struct {
	Message string `json:"message"`
}

func (o *FieldGetDocumentFieldNotFoundIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// FieldGetDocumentFieldNotFoundError - Not found
type FieldGetDocumentFieldNotFoundError struct {
	Message  string                               `json:"message"`
	Code     string                               `json:"code"`
	Issues   []FieldGetDocumentFieldNotFoundIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata              `json:"-"`
}

var _ error = &FieldGetDocumentFieldNotFoundError{}

func (e *FieldGetDocumentFieldNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type FieldGetDocumentFieldBadRequestIssue struct {
	Message string `json:"message"`
}

func (o *FieldGetDocumentFieldBadRequestIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// FieldGetDocumentFieldBadRequestError - Invalid input data
type FieldGetDocumentFieldBadRequestError struct {
	Message  string                                 `json:"message"`
	Code     string                                 `json:"code"`
	Issues   []FieldGetDocumentFieldBadRequestIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &FieldGetDocumentFieldBadRequestError{}

func (e *FieldGetDocumentFieldBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
