// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientCreateTemplateRecipientRoleRequest string

const (
	RecipientCreateTemplateRecipientRoleRequestCc        RecipientCreateTemplateRecipientRoleRequest = "CC"
	RecipientCreateTemplateRecipientRoleRequestSigner    RecipientCreateTemplateRecipientRoleRequest = "SIGNER"
	RecipientCreateTemplateRecipientRoleRequestViewer    RecipientCreateTemplateRecipientRoleRequest = "VIEWER"
	RecipientCreateTemplateRecipientRoleRequestApprover  RecipientCreateTemplateRecipientRoleRequest = "APPROVER"
	RecipientCreateTemplateRecipientRoleRequestAssistant RecipientCreateTemplateRecipientRoleRequest = "ASSISTANT"
)

func (e RecipientCreateTemplateRecipientRoleRequest) ToPointer() *RecipientCreateTemplateRecipientRoleRequest {
	return &e
}
func (e *RecipientCreateTemplateRecipientRoleRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientCreateTemplateRecipientRoleRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientRoleRequest: %v", v)
	}
}

// RecipientCreateTemplateRecipientAccessAuthRequest - The type of authentication required for the recipient to access the document.
type RecipientCreateTemplateRecipientAccessAuthRequest string

const (
	RecipientCreateTemplateRecipientAccessAuthRequestAccount       RecipientCreateTemplateRecipientAccessAuthRequest = "ACCOUNT"
	RecipientCreateTemplateRecipientAccessAuthRequestTwoFactorAuth RecipientCreateTemplateRecipientAccessAuthRequest = "TWO_FACTOR_AUTH"
)

func (e RecipientCreateTemplateRecipientAccessAuthRequest) ToPointer() *RecipientCreateTemplateRecipientAccessAuthRequest {
	return &e
}
func (e *RecipientCreateTemplateRecipientAccessAuthRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "TWO_FACTOR_AUTH":
		*e = RecipientCreateTemplateRecipientAccessAuthRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientAccessAuthRequest: %v", v)
	}
}

// RecipientCreateTemplateRecipientActionAuthRequest - The type of authentication required for the recipient to sign the document.
type RecipientCreateTemplateRecipientActionAuthRequest string

const (
	RecipientCreateTemplateRecipientActionAuthRequestAccount       RecipientCreateTemplateRecipientActionAuthRequest = "ACCOUNT"
	RecipientCreateTemplateRecipientActionAuthRequestPasskey       RecipientCreateTemplateRecipientActionAuthRequest = "PASSKEY"
	RecipientCreateTemplateRecipientActionAuthRequestTwoFactorAuth RecipientCreateTemplateRecipientActionAuthRequest = "TWO_FACTOR_AUTH"
	RecipientCreateTemplateRecipientActionAuthRequestPassword      RecipientCreateTemplateRecipientActionAuthRequest = "PASSWORD"
	RecipientCreateTemplateRecipientActionAuthRequestExplicitNone  RecipientCreateTemplateRecipientActionAuthRequest = "EXPLICIT_NONE"
)

func (e RecipientCreateTemplateRecipientActionAuthRequest) ToPointer() *RecipientCreateTemplateRecipientActionAuthRequest {
	return &e
}
func (e *RecipientCreateTemplateRecipientActionAuthRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientCreateTemplateRecipientActionAuthRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientActionAuthRequest: %v", v)
	}
}

type RecipientCreateTemplateRecipientRecipient struct {
	Email        string                                              `json:"email"`
	Name         string                                              `json:"name"`
	Role         RecipientCreateTemplateRecipientRoleRequest         `json:"role"`
	SigningOrder *float64                                            `json:"signingOrder,omitempty"`
	AccessAuth   []RecipientCreateTemplateRecipientAccessAuthRequest `json:"accessAuth,omitempty"`
	ActionAuth   []RecipientCreateTemplateRecipientActionAuthRequest `json:"actionAuth,omitempty"`
}

func (r *RecipientCreateTemplateRecipientRecipient) GetEmail() string {
	if r == nil {
		return ""
	}
	return r.Email
}

func (r *RecipientCreateTemplateRecipientRecipient) GetName() string {
	if r == nil {
		return ""
	}
	return r.Name
}

func (r *RecipientCreateTemplateRecipientRecipient) GetRole() RecipientCreateTemplateRecipientRoleRequest {
	if r == nil {
		return RecipientCreateTemplateRecipientRoleRequest("")
	}
	return r.Role
}

func (r *RecipientCreateTemplateRecipientRecipient) GetSigningOrder() *float64 {
	if r == nil {
		return nil
	}
	return r.SigningOrder
}

func (r *RecipientCreateTemplateRecipientRecipient) GetAccessAuth() []RecipientCreateTemplateRecipientAccessAuthRequest {
	if r == nil {
		return nil
	}
	return r.AccessAuth
}

func (r *RecipientCreateTemplateRecipientRecipient) GetActionAuth() []RecipientCreateTemplateRecipientActionAuthRequest {
	if r == nil {
		return nil
	}
	return r.ActionAuth
}

type RecipientCreateTemplateRecipientRequest struct {
	TemplateID float64                                   `json:"templateId"`
	Recipient  RecipientCreateTemplateRecipientRecipient `json:"recipient"`
}

func (r *RecipientCreateTemplateRecipientRequest) GetTemplateID() float64 {
	if r == nil {
		return 0.0
	}
	return r.TemplateID
}

func (r *RecipientCreateTemplateRecipientRequest) GetRecipient() RecipientCreateTemplateRecipientRecipient {
	if r == nil {
		return RecipientCreateTemplateRecipientRecipient{}
	}
	return r.Recipient
}

type RecipientCreateTemplateRecipientRoleResponse string

const (
	RecipientCreateTemplateRecipientRoleResponseCc        RecipientCreateTemplateRecipientRoleResponse = "CC"
	RecipientCreateTemplateRecipientRoleResponseSigner    RecipientCreateTemplateRecipientRoleResponse = "SIGNER"
	RecipientCreateTemplateRecipientRoleResponseViewer    RecipientCreateTemplateRecipientRoleResponse = "VIEWER"
	RecipientCreateTemplateRecipientRoleResponseApprover  RecipientCreateTemplateRecipientRoleResponse = "APPROVER"
	RecipientCreateTemplateRecipientRoleResponseAssistant RecipientCreateTemplateRecipientRoleResponse = "ASSISTANT"
)

func (e RecipientCreateTemplateRecipientRoleResponse) ToPointer() *RecipientCreateTemplateRecipientRoleResponse {
	return &e
}
func (e *RecipientCreateTemplateRecipientRoleResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientCreateTemplateRecipientRoleResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientRoleResponse: %v", v)
	}
}

type RecipientCreateTemplateRecipientReadStatus string

const (
	RecipientCreateTemplateRecipientReadStatusNotOpened RecipientCreateTemplateRecipientReadStatus = "NOT_OPENED"
	RecipientCreateTemplateRecipientReadStatusOpened    RecipientCreateTemplateRecipientReadStatus = "OPENED"
)

func (e RecipientCreateTemplateRecipientReadStatus) ToPointer() *RecipientCreateTemplateRecipientReadStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientCreateTemplateRecipientReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientReadStatus: %v", v)
	}
}

type RecipientCreateTemplateRecipientSigningStatus string

const (
	RecipientCreateTemplateRecipientSigningStatusNotSigned RecipientCreateTemplateRecipientSigningStatus = "NOT_SIGNED"
	RecipientCreateTemplateRecipientSigningStatusSigned    RecipientCreateTemplateRecipientSigningStatus = "SIGNED"
	RecipientCreateTemplateRecipientSigningStatusRejected  RecipientCreateTemplateRecipientSigningStatus = "REJECTED"
)

func (e RecipientCreateTemplateRecipientSigningStatus) ToPointer() *RecipientCreateTemplateRecipientSigningStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientCreateTemplateRecipientSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientSigningStatus: %v", v)
	}
}

type RecipientCreateTemplateRecipientSendStatus string

const (
	RecipientCreateTemplateRecipientSendStatusNotSent RecipientCreateTemplateRecipientSendStatus = "NOT_SENT"
	RecipientCreateTemplateRecipientSendStatusSent    RecipientCreateTemplateRecipientSendStatus = "SENT"
)

func (e RecipientCreateTemplateRecipientSendStatus) ToPointer() *RecipientCreateTemplateRecipientSendStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientCreateTemplateRecipientSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientSendStatus: %v", v)
	}
}

// RecipientCreateTemplateRecipientAccessAuthResponse - The type of authentication required for the recipient to access the document.
type RecipientCreateTemplateRecipientAccessAuthResponse string

const (
	RecipientCreateTemplateRecipientAccessAuthResponseAccount       RecipientCreateTemplateRecipientAccessAuthResponse = "ACCOUNT"
	RecipientCreateTemplateRecipientAccessAuthResponseTwoFactorAuth RecipientCreateTemplateRecipientAccessAuthResponse = "TWO_FACTOR_AUTH"
)

func (e RecipientCreateTemplateRecipientAccessAuthResponse) ToPointer() *RecipientCreateTemplateRecipientAccessAuthResponse {
	return &e
}
func (e *RecipientCreateTemplateRecipientAccessAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "TWO_FACTOR_AUTH":
		*e = RecipientCreateTemplateRecipientAccessAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientAccessAuthResponse: %v", v)
	}
}

// RecipientCreateTemplateRecipientActionAuthResponse - The type of authentication required for the recipient to sign the document.
type RecipientCreateTemplateRecipientActionAuthResponse string

const (
	RecipientCreateTemplateRecipientActionAuthResponseAccount       RecipientCreateTemplateRecipientActionAuthResponse = "ACCOUNT"
	RecipientCreateTemplateRecipientActionAuthResponsePasskey       RecipientCreateTemplateRecipientActionAuthResponse = "PASSKEY"
	RecipientCreateTemplateRecipientActionAuthResponseTwoFactorAuth RecipientCreateTemplateRecipientActionAuthResponse = "TWO_FACTOR_AUTH"
	RecipientCreateTemplateRecipientActionAuthResponsePassword      RecipientCreateTemplateRecipientActionAuthResponse = "PASSWORD"
	RecipientCreateTemplateRecipientActionAuthResponseExplicitNone  RecipientCreateTemplateRecipientActionAuthResponse = "EXPLICIT_NONE"
)

func (e RecipientCreateTemplateRecipientActionAuthResponse) ToPointer() *RecipientCreateTemplateRecipientActionAuthResponse {
	return &e
}
func (e *RecipientCreateTemplateRecipientActionAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientCreateTemplateRecipientActionAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientActionAuthResponse: %v", v)
	}
}

type RecipientCreateTemplateRecipientAuthOptions struct {
	AccessAuth []RecipientCreateTemplateRecipientAccessAuthResponse `json:"accessAuth"`
	ActionAuth []RecipientCreateTemplateRecipientActionAuthResponse `json:"actionAuth"`
}

func (r *RecipientCreateTemplateRecipientAuthOptions) GetAccessAuth() []RecipientCreateTemplateRecipientAccessAuthResponse {
	if r == nil {
		return []RecipientCreateTemplateRecipientAccessAuthResponse{}
	}
	return r.AccessAuth
}

func (r *RecipientCreateTemplateRecipientAuthOptions) GetActionAuth() []RecipientCreateTemplateRecipientActionAuthResponse {
	if r == nil {
		return []RecipientCreateTemplateRecipientActionAuthResponse{}
	}
	return r.ActionAuth
}

// RecipientCreateTemplateRecipientResponseBody - Successful response
type RecipientCreateTemplateRecipientResponseBody struct {
	EnvelopeID        string                                        `json:"envelopeId"`
	Role              RecipientCreateTemplateRecipientRoleResponse  `json:"role"`
	ReadStatus        RecipientCreateTemplateRecipientReadStatus    `json:"readStatus"`
	SigningStatus     RecipientCreateTemplateRecipientSigningStatus `json:"signingStatus"`
	SendStatus        RecipientCreateTemplateRecipientSendStatus    `json:"sendStatus"`
	ID                float64                                       `json:"id"`
	Email             string                                        `json:"email"`
	Name              string                                        `json:"name"`
	Token             string                                        `json:"token"`
	DocumentDeletedAt *string                                       `json:"documentDeletedAt"`
	Expired           *string                                       `json:"expired"`
	SignedAt          *string                                       `json:"signedAt"`
	AuthOptions       *RecipientCreateTemplateRecipientAuthOptions  `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64 `json:"signingOrder"`
	RejectionReason *string  `json:"rejectionReason"`
	DocumentID      *float64 `json:"documentId,omitempty"`
	TemplateID      *float64 `json:"templateId,omitempty"`
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetEnvelopeID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeID
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetRole() RecipientCreateTemplateRecipientRoleResponse {
	if r == nil {
		return RecipientCreateTemplateRecipientRoleResponse("")
	}
	return r.Role
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetReadStatus() RecipientCreateTemplateRecipientReadStatus {
	if r == nil {
		return RecipientCreateTemplateRecipientReadStatus("")
	}
	return r.ReadStatus
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetSigningStatus() RecipientCreateTemplateRecipientSigningStatus {
	if r == nil {
		return RecipientCreateTemplateRecipientSigningStatus("")
	}
	return r.SigningStatus
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetSendStatus() RecipientCreateTemplateRecipientSendStatus {
	if r == nil {
		return RecipientCreateTemplateRecipientSendStatus("")
	}
	return r.SendStatus
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetEmail() string {
	if r == nil {
		return ""
	}
	return r.Email
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetName() string {
	if r == nil {
		return ""
	}
	return r.Name
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetToken() string {
	if r == nil {
		return ""
	}
	return r.Token
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetDocumentDeletedAt() *string {
	if r == nil {
		return nil
	}
	return r.DocumentDeletedAt
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetExpired() *string {
	if r == nil {
		return nil
	}
	return r.Expired
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetSignedAt() *string {
	if r == nil {
		return nil
	}
	return r.SignedAt
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetAuthOptions() *RecipientCreateTemplateRecipientAuthOptions {
	if r == nil {
		return nil
	}
	return r.AuthOptions
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetSigningOrder() *float64 {
	if r == nil {
		return nil
	}
	return r.SigningOrder
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetRejectionReason() *string {
	if r == nil {
		return nil
	}
	return r.RejectionReason
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetDocumentID() *float64 {
	if r == nil {
		return nil
	}
	return r.DocumentID
}

func (r *RecipientCreateTemplateRecipientResponseBody) GetTemplateID() *float64 {
	if r == nil {
		return nil
	}
	return r.TemplateID
}

type RecipientCreateTemplateRecipientResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientCreateTemplateRecipientResponseBody
}

func (r *RecipientCreateTemplateRecipientResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *RecipientCreateTemplateRecipientResponse) GetObject() *RecipientCreateTemplateRecipientResponseBody {
	if r == nil {
		return nil
	}
	return r.Object
}
