// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type TemplateFindTemplatesInternalServerErrorIssue struct {
	Message string `json:"message"`
}

func (o *TemplateFindTemplatesInternalServerErrorIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// TemplateFindTemplatesInternalServerError - Internal server error
type TemplateFindTemplatesInternalServerError struct {
	Message  string                                          `json:"message"`
	Code     string                                          `json:"code"`
	Issues   []TemplateFindTemplatesInternalServerErrorIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                         `json:"-"`
}

var _ error = &TemplateFindTemplatesInternalServerError{}

func (e *TemplateFindTemplatesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type TemplateFindTemplatesNotFoundIssue struct {
	Message string `json:"message"`
}

func (o *TemplateFindTemplatesNotFoundIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// TemplateFindTemplatesNotFoundError - Not found
type TemplateFindTemplatesNotFoundError struct {
	Message  string                               `json:"message"`
	Code     string                               `json:"code"`
	Issues   []TemplateFindTemplatesNotFoundIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata              `json:"-"`
}

var _ error = &TemplateFindTemplatesNotFoundError{}

func (e *TemplateFindTemplatesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type TemplateFindTemplatesBadRequestIssue struct {
	Message string `json:"message"`
}

func (o *TemplateFindTemplatesBadRequestIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// TemplateFindTemplatesBadRequestError - Invalid input data
type TemplateFindTemplatesBadRequestError struct {
	Message  string                                 `json:"message"`
	Code     string                                 `json:"code"`
	Issues   []TemplateFindTemplatesBadRequestIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &TemplateFindTemplatesBadRequestError{}

func (e *TemplateFindTemplatesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
