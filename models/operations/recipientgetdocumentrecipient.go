// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientGetDocumentRecipientRequest struct {
	RecipientID float64 `pathParam:"style=simple,explode=false,name=recipientId"`
}

func (o *RecipientGetDocumentRecipientRequest) GetRecipientID() float64 {
	if o == nil {
		return 0.0
	}
	return o.RecipientID
}

type RecipientGetDocumentRecipientRole string

const (
	RecipientGetDocumentRecipientRoleCc        RecipientGetDocumentRecipientRole = "CC"
	RecipientGetDocumentRecipientRoleSigner    RecipientGetDocumentRecipientRole = "SIGNER"
	RecipientGetDocumentRecipientRoleViewer    RecipientGetDocumentRecipientRole = "VIEWER"
	RecipientGetDocumentRecipientRoleApprover  RecipientGetDocumentRecipientRole = "APPROVER"
	RecipientGetDocumentRecipientRoleAssistant RecipientGetDocumentRecipientRole = "ASSISTANT"
)

func (e RecipientGetDocumentRecipientRole) ToPointer() *RecipientGetDocumentRecipientRole {
	return &e
}
func (e *RecipientGetDocumentRecipientRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientGetDocumentRecipientRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientRole: %v", v)
	}
}

type RecipientGetDocumentRecipientReadStatus string

const (
	RecipientGetDocumentRecipientReadStatusNotOpened RecipientGetDocumentRecipientReadStatus = "NOT_OPENED"
	RecipientGetDocumentRecipientReadStatusOpened    RecipientGetDocumentRecipientReadStatus = "OPENED"
)

func (e RecipientGetDocumentRecipientReadStatus) ToPointer() *RecipientGetDocumentRecipientReadStatus {
	return &e
}
func (e *RecipientGetDocumentRecipientReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientGetDocumentRecipientReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientReadStatus: %v", v)
	}
}

type RecipientGetDocumentRecipientSigningStatus string

const (
	RecipientGetDocumentRecipientSigningStatusNotSigned RecipientGetDocumentRecipientSigningStatus = "NOT_SIGNED"
	RecipientGetDocumentRecipientSigningStatusSigned    RecipientGetDocumentRecipientSigningStatus = "SIGNED"
	RecipientGetDocumentRecipientSigningStatusRejected  RecipientGetDocumentRecipientSigningStatus = "REJECTED"
)

func (e RecipientGetDocumentRecipientSigningStatus) ToPointer() *RecipientGetDocumentRecipientSigningStatus {
	return &e
}
func (e *RecipientGetDocumentRecipientSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientGetDocumentRecipientSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientSigningStatus: %v", v)
	}
}

type RecipientGetDocumentRecipientSendStatus string

const (
	RecipientGetDocumentRecipientSendStatusNotSent RecipientGetDocumentRecipientSendStatus = "NOT_SENT"
	RecipientGetDocumentRecipientSendStatusSent    RecipientGetDocumentRecipientSendStatus = "SENT"
)

func (e RecipientGetDocumentRecipientSendStatus) ToPointer() *RecipientGetDocumentRecipientSendStatus {
	return &e
}
func (e *RecipientGetDocumentRecipientSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientGetDocumentRecipientSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientSendStatus: %v", v)
	}
}

// RecipientGetDocumentRecipientAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientGetDocumentRecipientAccessAuth string

const (
	RecipientGetDocumentRecipientAccessAuthAccount RecipientGetDocumentRecipientAccessAuth = "ACCOUNT"
)

func (e RecipientGetDocumentRecipientAccessAuth) ToPointer() *RecipientGetDocumentRecipientAccessAuth {
	return &e
}
func (e *RecipientGetDocumentRecipientAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientGetDocumentRecipientAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientAccessAuth: %v", v)
	}
}

// RecipientGetDocumentRecipientActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientGetDocumentRecipientActionAuth string

const (
	RecipientGetDocumentRecipientActionAuthAccount       RecipientGetDocumentRecipientActionAuth = "ACCOUNT"
	RecipientGetDocumentRecipientActionAuthPasskey       RecipientGetDocumentRecipientActionAuth = "PASSKEY"
	RecipientGetDocumentRecipientActionAuthTwoFactorAuth RecipientGetDocumentRecipientActionAuth = "TWO_FACTOR_AUTH"
	RecipientGetDocumentRecipientActionAuthExplicitNone  RecipientGetDocumentRecipientActionAuth = "EXPLICIT_NONE"
)

func (e RecipientGetDocumentRecipientActionAuth) ToPointer() *RecipientGetDocumentRecipientActionAuth {
	return &e
}
func (e *RecipientGetDocumentRecipientActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientGetDocumentRecipientActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientActionAuth: %v", v)
	}
}

type RecipientGetDocumentRecipientAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientGetDocumentRecipientAccessAuth `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientGetDocumentRecipientActionAuth `json:"actionAuth"`
}

func (o *RecipientGetDocumentRecipientAuthOptions) GetAccessAuth() *RecipientGetDocumentRecipientAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientGetDocumentRecipientAuthOptions) GetActionAuth() *RecipientGetDocumentRecipientActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientGetDocumentRecipientType string

const (
	RecipientGetDocumentRecipientTypeSignature     RecipientGetDocumentRecipientType = "SIGNATURE"
	RecipientGetDocumentRecipientTypeFreeSignature RecipientGetDocumentRecipientType = "FREE_SIGNATURE"
	RecipientGetDocumentRecipientTypeInitials      RecipientGetDocumentRecipientType = "INITIALS"
	RecipientGetDocumentRecipientTypeName          RecipientGetDocumentRecipientType = "NAME"
	RecipientGetDocumentRecipientTypeEmail         RecipientGetDocumentRecipientType = "EMAIL"
	RecipientGetDocumentRecipientTypeDate          RecipientGetDocumentRecipientType = "DATE"
	RecipientGetDocumentRecipientTypeText          RecipientGetDocumentRecipientType = "TEXT"
	RecipientGetDocumentRecipientTypeNumber        RecipientGetDocumentRecipientType = "NUMBER"
	RecipientGetDocumentRecipientTypeRadio         RecipientGetDocumentRecipientType = "RADIO"
	RecipientGetDocumentRecipientTypeCheckbox      RecipientGetDocumentRecipientType = "CHECKBOX"
	RecipientGetDocumentRecipientTypeDropdown      RecipientGetDocumentRecipientType = "DROPDOWN"
)

func (e RecipientGetDocumentRecipientType) ToPointer() *RecipientGetDocumentRecipientType {
	return &e
}
func (e *RecipientGetDocumentRecipientType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientGetDocumentRecipientType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaTypeDropdown string

const (
	RecipientGetDocumentRecipientFieldMetaTypeDropdownDropdown RecipientGetDocumentRecipientFieldMetaTypeDropdown = "dropdown"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeDropdown) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeDropdown {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeDropdown) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientGetDocumentRecipientFieldMetaTypeDropdown(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeDropdown: %v", v)
	}
}

type RecipientGetDocumentRecipientValue3 struct {
	Value string `json:"value"`
}

func (o *RecipientGetDocumentRecipientValue3) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientGetDocumentRecipientFieldMetaDropdown struct {
	Label        *string                                            `json:"label,omitempty"`
	Placeholder  *string                                            `json:"placeholder,omitempty"`
	Required     *bool                                              `json:"required,omitempty"`
	ReadOnly     *bool                                              `json:"readOnly,omitempty"`
	Type         RecipientGetDocumentRecipientFieldMetaTypeDropdown `json:"type"`
	Values       []RecipientGetDocumentRecipientValue3              `json:"values,omitempty"`
	DefaultValue *string                                            `json:"defaultValue,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetType() RecipientGetDocumentRecipientFieldMetaTypeDropdown {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeDropdown("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetValues() []RecipientGetDocumentRecipientValue3 {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientGetDocumentRecipientFieldMetaDropdown) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type RecipientGetDocumentRecipientFieldMetaTypeCheckbox string

const (
	RecipientGetDocumentRecipientFieldMetaTypeCheckboxCheckbox RecipientGetDocumentRecipientFieldMetaTypeCheckbox = "checkbox"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeCheckbox) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeCheckbox {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeCheckbox) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientGetDocumentRecipientFieldMetaTypeCheckbox(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeCheckbox: %v", v)
	}
}

type RecipientGetDocumentRecipientValue2 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientGetDocumentRecipientValue2) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientValue2) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientGetDocumentRecipientValue2) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientGetDocumentRecipientFieldMetaCheckbox struct {
	Label            *string                                            `json:"label,omitempty"`
	Placeholder      *string                                            `json:"placeholder,omitempty"`
	Required         *bool                                              `json:"required,omitempty"`
	ReadOnly         *bool                                              `json:"readOnly,omitempty"`
	Type             RecipientGetDocumentRecipientFieldMetaTypeCheckbox `json:"type"`
	Values           []RecipientGetDocumentRecipientValue2              `json:"values,omitempty"`
	ValidationRule   *string                                            `json:"validationRule,omitempty"`
	ValidationLength *float64                                           `json:"validationLength,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetType() RecipientGetDocumentRecipientFieldMetaTypeCheckbox {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeCheckbox("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetValues() []RecipientGetDocumentRecipientValue2 {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetValidationRule() *string {
	if o == nil {
		return nil
	}
	return o.ValidationRule
}

func (o *RecipientGetDocumentRecipientFieldMetaCheckbox) GetValidationLength() *float64 {
	if o == nil {
		return nil
	}
	return o.ValidationLength
}

type RecipientGetDocumentRecipientFieldMetaTypeRadio string

const (
	RecipientGetDocumentRecipientFieldMetaTypeRadioRadio RecipientGetDocumentRecipientFieldMetaTypeRadio = "radio"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeRadio) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeRadio {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeRadio) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientGetDocumentRecipientFieldMetaTypeRadio(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeRadio: %v", v)
	}
}

type RecipientGetDocumentRecipientValue1 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientGetDocumentRecipientValue1) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientValue1) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientGetDocumentRecipientValue1) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientGetDocumentRecipientFieldMetaRadio struct {
	Label       *string                                         `json:"label,omitempty"`
	Placeholder *string                                         `json:"placeholder,omitempty"`
	Required    *bool                                           `json:"required,omitempty"`
	ReadOnly    *bool                                           `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaTypeRadio `json:"type"`
	Values      []RecipientGetDocumentRecipientValue1           `json:"values,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaRadio) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaRadio) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaRadio) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaRadio) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaRadio) GetType() RecipientGetDocumentRecipientFieldMetaTypeRadio {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeRadio("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaRadio) GetValues() []RecipientGetDocumentRecipientValue1 {
	if o == nil {
		return nil
	}
	return o.Values
}

type RecipientGetDocumentRecipientFieldMetaTypeNumber string

const (
	RecipientGetDocumentRecipientFieldMetaTypeNumberNumber RecipientGetDocumentRecipientFieldMetaTypeNumber = "number"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeNumber) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeNumber {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeNumber) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientGetDocumentRecipientFieldMetaTypeNumber(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeNumber: %v", v)
	}
}

type RecipientGetDocumentRecipientTextAlign6 string

const (
	RecipientGetDocumentRecipientTextAlign6Left   RecipientGetDocumentRecipientTextAlign6 = "left"
	RecipientGetDocumentRecipientTextAlign6Center RecipientGetDocumentRecipientTextAlign6 = "center"
	RecipientGetDocumentRecipientTextAlign6Right  RecipientGetDocumentRecipientTextAlign6 = "right"
)

func (e RecipientGetDocumentRecipientTextAlign6) ToPointer() *RecipientGetDocumentRecipientTextAlign6 {
	return &e
}
func (e *RecipientGetDocumentRecipientTextAlign6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientGetDocumentRecipientTextAlign6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientTextAlign6: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaNumber struct {
	Label        *string                                          `json:"label,omitempty"`
	Placeholder  *string                                          `json:"placeholder,omitempty"`
	Required     *bool                                            `json:"required,omitempty"`
	ReadOnly     *bool                                            `json:"readOnly,omitempty"`
	Type         RecipientGetDocumentRecipientFieldMetaTypeNumber `json:"type"`
	NumberFormat *string                                          `json:"numberFormat,omitempty"`
	Value        *string                                          `json:"value,omitempty"`
	MinValue     *float64                                         `json:"minValue,omitempty"`
	MaxValue     *float64                                         `json:"maxValue,omitempty"`
	FontSize     *float64                                         `json:"fontSize,omitempty"`
	TextAlign    *RecipientGetDocumentRecipientTextAlign6         `json:"textAlign,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetType() RecipientGetDocumentRecipientFieldMetaTypeNumber {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeNumber("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetNumberFormat() *string {
	if o == nil {
		return nil
	}
	return o.NumberFormat
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetMinValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MinValue
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetMaxValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxValue
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientGetDocumentRecipientFieldMetaNumber) GetTextAlign() *RecipientGetDocumentRecipientTextAlign6 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientGetDocumentRecipientFieldMetaTypeText string

const (
	RecipientGetDocumentRecipientFieldMetaTypeTextText RecipientGetDocumentRecipientFieldMetaTypeText = "text"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeText) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeText {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeText) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientGetDocumentRecipientFieldMetaTypeText(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeText: %v", v)
	}
}

type RecipientGetDocumentRecipientTextAlign5 string

const (
	RecipientGetDocumentRecipientTextAlign5Left   RecipientGetDocumentRecipientTextAlign5 = "left"
	RecipientGetDocumentRecipientTextAlign5Center RecipientGetDocumentRecipientTextAlign5 = "center"
	RecipientGetDocumentRecipientTextAlign5Right  RecipientGetDocumentRecipientTextAlign5 = "right"
)

func (e RecipientGetDocumentRecipientTextAlign5) ToPointer() *RecipientGetDocumentRecipientTextAlign5 {
	return &e
}
func (e *RecipientGetDocumentRecipientTextAlign5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientGetDocumentRecipientTextAlign5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientTextAlign5: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaText struct {
	Label          *string                                        `json:"label,omitempty"`
	Placeholder    *string                                        `json:"placeholder,omitempty"`
	Required       *bool                                          `json:"required,omitempty"`
	ReadOnly       *bool                                          `json:"readOnly,omitempty"`
	Type           RecipientGetDocumentRecipientFieldMetaTypeText `json:"type"`
	Text           *string                                        `json:"text,omitempty"`
	CharacterLimit *float64                                       `json:"characterLimit,omitempty"`
	FontSize       *float64                                       `json:"fontSize,omitempty"`
	TextAlign      *RecipientGetDocumentRecipientTextAlign5       `json:"textAlign,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetType() RecipientGetDocumentRecipientFieldMetaTypeText {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeText("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetCharacterLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CharacterLimit
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientGetDocumentRecipientFieldMetaText) GetTextAlign() *RecipientGetDocumentRecipientTextAlign5 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientGetDocumentRecipientFieldMetaTypeDate string

const (
	RecipientGetDocumentRecipientFieldMetaTypeDateDate RecipientGetDocumentRecipientFieldMetaTypeDate = "date"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeDate) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeDate {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeDate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientGetDocumentRecipientFieldMetaTypeDate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeDate: %v", v)
	}
}

type RecipientGetDocumentRecipientTextAlign4 string

const (
	RecipientGetDocumentRecipientTextAlign4Left   RecipientGetDocumentRecipientTextAlign4 = "left"
	RecipientGetDocumentRecipientTextAlign4Center RecipientGetDocumentRecipientTextAlign4 = "center"
	RecipientGetDocumentRecipientTextAlign4Right  RecipientGetDocumentRecipientTextAlign4 = "right"
)

func (e RecipientGetDocumentRecipientTextAlign4) ToPointer() *RecipientGetDocumentRecipientTextAlign4 {
	return &e
}
func (e *RecipientGetDocumentRecipientTextAlign4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientGetDocumentRecipientTextAlign4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientTextAlign4: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaDate struct {
	Label       *string                                        `json:"label,omitempty"`
	Placeholder *string                                        `json:"placeholder,omitempty"`
	Required    *bool                                          `json:"required,omitempty"`
	ReadOnly    *bool                                          `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaTypeDate `json:"type"`
	FontSize    *float64                                       `json:"fontSize,omitempty"`
	TextAlign   *RecipientGetDocumentRecipientTextAlign4       `json:"textAlign,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetType() RecipientGetDocumentRecipientFieldMetaTypeDate {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeDate("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientGetDocumentRecipientFieldMetaDate) GetTextAlign() *RecipientGetDocumentRecipientTextAlign4 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientGetDocumentRecipientFieldMetaTypeEmail string

const (
	RecipientGetDocumentRecipientFieldMetaTypeEmailEmail RecipientGetDocumentRecipientFieldMetaTypeEmail = "email"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeEmail) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeEmail {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeEmail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientGetDocumentRecipientFieldMetaTypeEmail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeEmail: %v", v)
	}
}

type RecipientGetDocumentRecipientTextAlign3 string

const (
	RecipientGetDocumentRecipientTextAlign3Left   RecipientGetDocumentRecipientTextAlign3 = "left"
	RecipientGetDocumentRecipientTextAlign3Center RecipientGetDocumentRecipientTextAlign3 = "center"
	RecipientGetDocumentRecipientTextAlign3Right  RecipientGetDocumentRecipientTextAlign3 = "right"
)

func (e RecipientGetDocumentRecipientTextAlign3) ToPointer() *RecipientGetDocumentRecipientTextAlign3 {
	return &e
}
func (e *RecipientGetDocumentRecipientTextAlign3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientGetDocumentRecipientTextAlign3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientTextAlign3: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaEmail struct {
	Label       *string                                         `json:"label,omitempty"`
	Placeholder *string                                         `json:"placeholder,omitempty"`
	Required    *bool                                           `json:"required,omitempty"`
	ReadOnly    *bool                                           `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaTypeEmail `json:"type"`
	FontSize    *float64                                        `json:"fontSize,omitempty"`
	TextAlign   *RecipientGetDocumentRecipientTextAlign3        `json:"textAlign,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetType() RecipientGetDocumentRecipientFieldMetaTypeEmail {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeEmail("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientGetDocumentRecipientFieldMetaEmail) GetTextAlign() *RecipientGetDocumentRecipientTextAlign3 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientGetDocumentRecipientFieldMetaTypeName string

const (
	RecipientGetDocumentRecipientFieldMetaTypeNameName RecipientGetDocumentRecipientFieldMetaTypeName = "name"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeName) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeName {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientGetDocumentRecipientFieldMetaTypeName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeName: %v", v)
	}
}

type RecipientGetDocumentRecipientTextAlign2 string

const (
	RecipientGetDocumentRecipientTextAlign2Left   RecipientGetDocumentRecipientTextAlign2 = "left"
	RecipientGetDocumentRecipientTextAlign2Center RecipientGetDocumentRecipientTextAlign2 = "center"
	RecipientGetDocumentRecipientTextAlign2Right  RecipientGetDocumentRecipientTextAlign2 = "right"
)

func (e RecipientGetDocumentRecipientTextAlign2) ToPointer() *RecipientGetDocumentRecipientTextAlign2 {
	return &e
}
func (e *RecipientGetDocumentRecipientTextAlign2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientGetDocumentRecipientTextAlign2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientTextAlign2: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaName struct {
	Label       *string                                        `json:"label,omitempty"`
	Placeholder *string                                        `json:"placeholder,omitempty"`
	Required    *bool                                          `json:"required,omitempty"`
	ReadOnly    *bool                                          `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaTypeName `json:"type"`
	FontSize    *float64                                       `json:"fontSize,omitempty"`
	TextAlign   *RecipientGetDocumentRecipientTextAlign2       `json:"textAlign,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetType() RecipientGetDocumentRecipientFieldMetaTypeName {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeName("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientGetDocumentRecipientFieldMetaName) GetTextAlign() *RecipientGetDocumentRecipientTextAlign2 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientGetDocumentRecipientFieldMetaTypeInitials string

const (
	RecipientGetDocumentRecipientFieldMetaTypeInitialsInitials RecipientGetDocumentRecipientFieldMetaTypeInitials = "initials"
)

func (e RecipientGetDocumentRecipientFieldMetaTypeInitials) ToPointer() *RecipientGetDocumentRecipientFieldMetaTypeInitials {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaTypeInitials) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientGetDocumentRecipientFieldMetaTypeInitials(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaTypeInitials: %v", v)
	}
}

type RecipientGetDocumentRecipientTextAlign1 string

const (
	RecipientGetDocumentRecipientTextAlign1Left   RecipientGetDocumentRecipientTextAlign1 = "left"
	RecipientGetDocumentRecipientTextAlign1Center RecipientGetDocumentRecipientTextAlign1 = "center"
	RecipientGetDocumentRecipientTextAlign1Right  RecipientGetDocumentRecipientTextAlign1 = "right"
)

func (e RecipientGetDocumentRecipientTextAlign1) ToPointer() *RecipientGetDocumentRecipientTextAlign1 {
	return &e
}
func (e *RecipientGetDocumentRecipientTextAlign1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientGetDocumentRecipientTextAlign1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientTextAlign1: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaInitials struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaTypeInitials `json:"type"`
	FontSize    *float64                                           `json:"fontSize,omitempty"`
	TextAlign   *RecipientGetDocumentRecipientTextAlign1           `json:"textAlign,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetType() RecipientGetDocumentRecipientFieldMetaTypeInitials {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaTypeInitials("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientGetDocumentRecipientFieldMetaInitials) GetTextAlign() *RecipientGetDocumentRecipientTextAlign1 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientGetDocumentRecipientFieldMetaUnionType string

const (
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaInitials RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Initials"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaName     RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Name"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaEmail    RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Email"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaDate     RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Date"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaText     RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Text"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaNumber   RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Number"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaRadio    RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Radio"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaCheckbox RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Checkbox"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaDropdown RecipientGetDocumentRecipientFieldMetaUnionType = "recipient_getDocumentRecipient_fieldMeta_Dropdown"
)

type RecipientGetDocumentRecipientFieldMetaUnion struct {
	RecipientGetDocumentRecipientFieldMetaInitials *RecipientGetDocumentRecipientFieldMetaInitials `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaName     *RecipientGetDocumentRecipientFieldMetaName     `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaEmail    *RecipientGetDocumentRecipientFieldMetaEmail    `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaDate     *RecipientGetDocumentRecipientFieldMetaDate     `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaText     *RecipientGetDocumentRecipientFieldMetaText     `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaNumber   *RecipientGetDocumentRecipientFieldMetaNumber   `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaRadio    *RecipientGetDocumentRecipientFieldMetaRadio    `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaCheckbox *RecipientGetDocumentRecipientFieldMetaCheckbox `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMetaDropdown *RecipientGetDocumentRecipientFieldMetaDropdown `queryParam:"inline"`

	Type RecipientGetDocumentRecipientFieldMetaUnionType
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaInitials(recipientGetDocumentRecipientFieldMetaInitials RecipientGetDocumentRecipientFieldMetaInitials) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaInitials

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaInitials: &recipientGetDocumentRecipientFieldMetaInitials,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaName(recipientGetDocumentRecipientFieldMetaName RecipientGetDocumentRecipientFieldMetaName) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaName

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaName: &recipientGetDocumentRecipientFieldMetaName,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaEmail(recipientGetDocumentRecipientFieldMetaEmail RecipientGetDocumentRecipientFieldMetaEmail) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaEmail

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaEmail: &recipientGetDocumentRecipientFieldMetaEmail,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaDate(recipientGetDocumentRecipientFieldMetaDate RecipientGetDocumentRecipientFieldMetaDate) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaDate

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaDate: &recipientGetDocumentRecipientFieldMetaDate,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaText(recipientGetDocumentRecipientFieldMetaText RecipientGetDocumentRecipientFieldMetaText) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaText

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaText: &recipientGetDocumentRecipientFieldMetaText,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaNumber(recipientGetDocumentRecipientFieldMetaNumber RecipientGetDocumentRecipientFieldMetaNumber) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaNumber

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaNumber: &recipientGetDocumentRecipientFieldMetaNumber,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaRadio(recipientGetDocumentRecipientFieldMetaRadio RecipientGetDocumentRecipientFieldMetaRadio) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaRadio

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaRadio: &recipientGetDocumentRecipientFieldMetaRadio,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaCheckbox(recipientGetDocumentRecipientFieldMetaCheckbox RecipientGetDocumentRecipientFieldMetaCheckbox) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaCheckbox

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaCheckbox: &recipientGetDocumentRecipientFieldMetaCheckbox,
		Type: typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaUnionRecipientGetDocumentRecipientFieldMetaDropdown(recipientGetDocumentRecipientFieldMetaDropdown RecipientGetDocumentRecipientFieldMetaDropdown) RecipientGetDocumentRecipientFieldMetaUnion {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaDropdown

	return RecipientGetDocumentRecipientFieldMetaUnion{
		RecipientGetDocumentRecipientFieldMetaDropdown: &recipientGetDocumentRecipientFieldMetaDropdown,
		Type: typ,
	}
}

func (u *RecipientGetDocumentRecipientFieldMetaUnion) UnmarshalJSON(data []byte) error {

	var recipientGetDocumentRecipientFieldMetaRadio RecipientGetDocumentRecipientFieldMetaRadio = RecipientGetDocumentRecipientFieldMetaRadio{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaRadio, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaRadio = &recipientGetDocumentRecipientFieldMetaRadio
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaRadio
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaInitials RecipientGetDocumentRecipientFieldMetaInitials = RecipientGetDocumentRecipientFieldMetaInitials{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaInitials, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaInitials = &recipientGetDocumentRecipientFieldMetaInitials
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaInitials
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaName RecipientGetDocumentRecipientFieldMetaName = RecipientGetDocumentRecipientFieldMetaName{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaName, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaName = &recipientGetDocumentRecipientFieldMetaName
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaName
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaEmail RecipientGetDocumentRecipientFieldMetaEmail = RecipientGetDocumentRecipientFieldMetaEmail{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaEmail, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaEmail = &recipientGetDocumentRecipientFieldMetaEmail
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaEmail
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaDate RecipientGetDocumentRecipientFieldMetaDate = RecipientGetDocumentRecipientFieldMetaDate{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaDate, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaDate = &recipientGetDocumentRecipientFieldMetaDate
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaDate
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaDropdown RecipientGetDocumentRecipientFieldMetaDropdown = RecipientGetDocumentRecipientFieldMetaDropdown{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaDropdown, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaDropdown = &recipientGetDocumentRecipientFieldMetaDropdown
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaDropdown
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaCheckbox RecipientGetDocumentRecipientFieldMetaCheckbox = RecipientGetDocumentRecipientFieldMetaCheckbox{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaCheckbox, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaCheckbox = &recipientGetDocumentRecipientFieldMetaCheckbox
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaCheckbox
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaText RecipientGetDocumentRecipientFieldMetaText = RecipientGetDocumentRecipientFieldMetaText{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaText, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaText = &recipientGetDocumentRecipientFieldMetaText
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaText
		return nil
	}

	var recipientGetDocumentRecipientFieldMetaNumber RecipientGetDocumentRecipientFieldMetaNumber = RecipientGetDocumentRecipientFieldMetaNumber{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMetaNumber, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMetaNumber = &recipientGetDocumentRecipientFieldMetaNumber
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMetaNumber
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientGetDocumentRecipientFieldMetaUnion", string(data))
}

func (u RecipientGetDocumentRecipientFieldMetaUnion) MarshalJSON() ([]byte, error) {
	if u.RecipientGetDocumentRecipientFieldMetaInitials != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaInitials, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaName != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaName, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaEmail != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaEmail, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaDate != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaDate, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaText != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaText, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaNumber != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaNumber, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaRadio != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaRadio, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaCheckbox != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaCheckbox, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMetaDropdown != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMetaDropdown, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientGetDocumentRecipientFieldMetaUnion: all fields are null")
}

type RecipientGetDocumentRecipientField struct {
	Type        RecipientGetDocumentRecipientType `json:"type"`
	ID          float64                           `json:"id"`
	SecondaryID string                            `json:"secondaryId"`
	DocumentID  *float64                          `json:"documentId"`
	TemplateID  *float64                          `json:"templateId"`
	RecipientID float64                           `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                      `json:"page"`
	PositionX  any                                          `json:"positionX,omitempty"`
	PositionY  any                                          `json:"positionY,omitempty"`
	Width      any                                          `json:"width,omitempty"`
	Height     any                                          `json:"height,omitempty"`
	CustomText string                                       `json:"customText"`
	Inserted   bool                                         `json:"inserted"`
	FieldMeta  *RecipientGetDocumentRecipientFieldMetaUnion `json:"fieldMeta"`
}

func (o *RecipientGetDocumentRecipientField) GetType() RecipientGetDocumentRecipientType {
	if o == nil {
		return RecipientGetDocumentRecipientType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientField) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientField) GetSecondaryID() string {
	if o == nil {
		return ""
	}
	return o.SecondaryID
}

func (o *RecipientGetDocumentRecipientField) GetDocumentID() *float64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientGetDocumentRecipientField) GetTemplateID() *float64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientGetDocumentRecipientField) GetRecipientID() float64 {
	if o == nil {
		return 0.0
	}
	return o.RecipientID
}

func (o *RecipientGetDocumentRecipientField) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *RecipientGetDocumentRecipientField) GetPositionX() any {
	if o == nil {
		return nil
	}
	return o.PositionX
}

func (o *RecipientGetDocumentRecipientField) GetPositionY() any {
	if o == nil {
		return nil
	}
	return o.PositionY
}

func (o *RecipientGetDocumentRecipientField) GetWidth() any {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *RecipientGetDocumentRecipientField) GetHeight() any {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *RecipientGetDocumentRecipientField) GetCustomText() string {
	if o == nil {
		return ""
	}
	return o.CustomText
}

func (o *RecipientGetDocumentRecipientField) GetInserted() bool {
	if o == nil {
		return false
	}
	return o.Inserted
}

func (o *RecipientGetDocumentRecipientField) GetFieldMeta() *RecipientGetDocumentRecipientFieldMetaUnion {
	if o == nil {
		return nil
	}
	return o.FieldMeta
}

// RecipientGetDocumentRecipientResponseBody - Successful response
type RecipientGetDocumentRecipientResponseBody struct {
	Role              RecipientGetDocumentRecipientRole          `json:"role"`
	ReadStatus        RecipientGetDocumentRecipientReadStatus    `json:"readStatus"`
	SigningStatus     RecipientGetDocumentRecipientSigningStatus `json:"signingStatus"`
	SendStatus        RecipientGetDocumentRecipientSendStatus    `json:"sendStatus"`
	ID                float64                                    `json:"id"`
	DocumentID        *float64                                   `json:"documentId"`
	TemplateID        *float64                                   `json:"templateId"`
	Email             string                                     `json:"email"`
	Name              string                                     `json:"name"`
	Token             string                                     `json:"token"`
	DocumentDeletedAt *string                                    `json:"documentDeletedAt"`
	Expired           *string                                    `json:"expired"`
	SignedAt          *string                                    `json:"signedAt"`
	AuthOptions       *RecipientGetDocumentRecipientAuthOptions  `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                             `json:"signingOrder"`
	RejectionReason *string                              `json:"rejectionReason"`
	Fields          []RecipientGetDocumentRecipientField `json:"fields"`
}

func (o *RecipientGetDocumentRecipientResponseBody) GetRole() RecipientGetDocumentRecipientRole {
	if o == nil {
		return RecipientGetDocumentRecipientRole("")
	}
	return o.Role
}

func (o *RecipientGetDocumentRecipientResponseBody) GetReadStatus() RecipientGetDocumentRecipientReadStatus {
	if o == nil {
		return RecipientGetDocumentRecipientReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSigningStatus() RecipientGetDocumentRecipientSigningStatus {
	if o == nil {
		return RecipientGetDocumentRecipientSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSendStatus() RecipientGetDocumentRecipientSendStatus {
	if o == nil {
		return RecipientGetDocumentRecipientSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientGetDocumentRecipientResponseBody) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientResponseBody) GetDocumentID() *float64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientGetDocumentRecipientResponseBody) GetTemplateID() *float64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientGetDocumentRecipientResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientGetDocumentRecipientResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientGetDocumentRecipientResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientGetDocumentRecipientResponseBody) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientGetDocumentRecipientResponseBody) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientGetDocumentRecipientResponseBody) GetAuthOptions() *RecipientGetDocumentRecipientAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientGetDocumentRecipientResponseBody) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

func (o *RecipientGetDocumentRecipientResponseBody) GetFields() []RecipientGetDocumentRecipientField {
	if o == nil {
		return []RecipientGetDocumentRecipientField{}
	}
	return o.Fields
}

type RecipientGetDocumentRecipientResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientGetDocumentRecipientResponseBody
}

func (o *RecipientGetDocumentRecipientResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientGetDocumentRecipientResponse) GetObject() *RecipientGetDocumentRecipientResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
