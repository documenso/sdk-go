// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type DocumentFindInternalServerErrorIssue struct {
	Message string `json:"message"`
}

func (d *DocumentFindInternalServerErrorIssue) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

// DocumentFindInternalServerError - Internal server error
type DocumentFindInternalServerError struct {
	Message  string                                 `json:"message"`
	Code     string                                 `json:"code"`
	Issues   []DocumentFindInternalServerErrorIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &DocumentFindInternalServerError{}

func (e *DocumentFindInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentFindNotFoundIssue struct {
	Message string `json:"message"`
}

func (d *DocumentFindNotFoundIssue) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

// DocumentFindNotFoundError - Not found
type DocumentFindNotFoundError struct {
	Message  string                      `json:"message"`
	Code     string                      `json:"code"`
	Issues   []DocumentFindNotFoundIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata     `json:"-"`
}

var _ error = &DocumentFindNotFoundError{}

func (e *DocumentFindNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentFindBadRequestIssue struct {
	Message string `json:"message"`
}

func (d *DocumentFindBadRequestIssue) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

// DocumentFindBadRequestError - Invalid input data
type DocumentFindBadRequestError struct {
	Message  string                        `json:"message"`
	Code     string                        `json:"code"`
	Issues   []DocumentFindBadRequestIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata       `json:"-"`
}

var _ error = &DocumentFindBadRequestError{}

func (e *DocumentFindBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
