// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientUpdateDocumentRecipientRole string

const (
	RecipientUpdateDocumentRecipientRoleCc       RecipientUpdateDocumentRecipientRole = "CC"
	RecipientUpdateDocumentRecipientRoleSigner   RecipientUpdateDocumentRecipientRole = "SIGNER"
	RecipientUpdateDocumentRecipientRoleViewer   RecipientUpdateDocumentRecipientRole = "VIEWER"
	RecipientUpdateDocumentRecipientRoleApprover RecipientUpdateDocumentRecipientRole = "APPROVER"
)

func (e RecipientUpdateDocumentRecipientRole) ToPointer() *RecipientUpdateDocumentRecipientRole {
	return &e
}
func (e *RecipientUpdateDocumentRecipientRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientUpdateDocumentRecipientRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientRole: %v", v)
	}
}

// RecipientUpdateDocumentRecipientAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientUpdateDocumentRecipientAccessAuth string

const (
	RecipientUpdateDocumentRecipientAccessAuthAccount RecipientUpdateDocumentRecipientAccessAuth = "ACCOUNT"
)

func (e RecipientUpdateDocumentRecipientAccessAuth) ToPointer() *RecipientUpdateDocumentRecipientAccessAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateDocumentRecipientAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientAccessAuth: %v", v)
	}
}

// RecipientUpdateDocumentRecipientActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientUpdateDocumentRecipientActionAuth string

const (
	RecipientUpdateDocumentRecipientActionAuthAccount       RecipientUpdateDocumentRecipientActionAuth = "ACCOUNT"
	RecipientUpdateDocumentRecipientActionAuthPasskey       RecipientUpdateDocumentRecipientActionAuth = "PASSKEY"
	RecipientUpdateDocumentRecipientActionAuthTwoFactorAuth RecipientUpdateDocumentRecipientActionAuth = "TWO_FACTOR_AUTH"
	RecipientUpdateDocumentRecipientActionAuthExplicitNone  RecipientUpdateDocumentRecipientActionAuth = "EXPLICIT_NONE"
)

func (e RecipientUpdateDocumentRecipientActionAuth) ToPointer() *RecipientUpdateDocumentRecipientActionAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateDocumentRecipientActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientActionAuth: %v", v)
	}
}

type RecipientUpdateDocumentRecipientRecipient struct {
	// The ID of the recipient to update.
	ID           float64                               `json:"id"`
	Email        *string                               `json:"email,omitempty"`
	Name         *string                               `json:"name,omitempty"`
	Role         *RecipientUpdateDocumentRecipientRole `json:"role,omitempty"`
	SigningOrder *float64                              `json:"signingOrder,omitempty"`
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateDocumentRecipientAccessAuth `json:"accessAuth,omitempty"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateDocumentRecipientActionAuth `json:"actionAuth,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetRole() *RecipientUpdateDocumentRecipientRole {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetAccessAuth() *RecipientUpdateDocumentRecipientAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateDocumentRecipientRecipient) GetActionAuth() *RecipientUpdateDocumentRecipientActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateDocumentRecipientRequestBody struct {
	DocumentID float64                                   `json:"documentId"`
	Recipient  RecipientUpdateDocumentRecipientRecipient `json:"recipient"`
}

func (o *RecipientUpdateDocumentRecipientRequestBody) GetDocumentID() float64 {
	if o == nil {
		return 0.0
	}
	return o.DocumentID
}

func (o *RecipientUpdateDocumentRecipientRequestBody) GetRecipient() RecipientUpdateDocumentRecipientRecipient {
	if o == nil {
		return RecipientUpdateDocumentRecipientRecipient{}
	}
	return o.Recipient
}

type RecipientUpdateDocumentRecipientDocumentsRecipientsRole string

const (
	RecipientUpdateDocumentRecipientDocumentsRecipientsRoleCc       RecipientUpdateDocumentRecipientDocumentsRecipientsRole = "CC"
	RecipientUpdateDocumentRecipientDocumentsRecipientsRoleSigner   RecipientUpdateDocumentRecipientDocumentsRecipientsRole = "SIGNER"
	RecipientUpdateDocumentRecipientDocumentsRecipientsRoleViewer   RecipientUpdateDocumentRecipientDocumentsRecipientsRole = "VIEWER"
	RecipientUpdateDocumentRecipientDocumentsRecipientsRoleApprover RecipientUpdateDocumentRecipientDocumentsRecipientsRole = "APPROVER"
)

func (e RecipientUpdateDocumentRecipientDocumentsRecipientsRole) ToPointer() *RecipientUpdateDocumentRecipientDocumentsRecipientsRole {
	return &e
}
func (e *RecipientUpdateDocumentRecipientDocumentsRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientUpdateDocumentRecipientDocumentsRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientDocumentsRecipientsRole: %v", v)
	}
}

type RecipientUpdateDocumentRecipientReadStatus string

const (
	RecipientUpdateDocumentRecipientReadStatusNotOpened RecipientUpdateDocumentRecipientReadStatus = "NOT_OPENED"
	RecipientUpdateDocumentRecipientReadStatusOpened    RecipientUpdateDocumentRecipientReadStatus = "OPENED"
)

func (e RecipientUpdateDocumentRecipientReadStatus) ToPointer() *RecipientUpdateDocumentRecipientReadStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientUpdateDocumentRecipientReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientReadStatus: %v", v)
	}
}

type RecipientUpdateDocumentRecipientSigningStatus string

const (
	RecipientUpdateDocumentRecipientSigningStatusNotSigned RecipientUpdateDocumentRecipientSigningStatus = "NOT_SIGNED"
	RecipientUpdateDocumentRecipientSigningStatusSigned    RecipientUpdateDocumentRecipientSigningStatus = "SIGNED"
	RecipientUpdateDocumentRecipientSigningStatusRejected  RecipientUpdateDocumentRecipientSigningStatus = "REJECTED"
)

func (e RecipientUpdateDocumentRecipientSigningStatus) ToPointer() *RecipientUpdateDocumentRecipientSigningStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientUpdateDocumentRecipientSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientSigningStatus: %v", v)
	}
}

type RecipientUpdateDocumentRecipientSendStatus string

const (
	RecipientUpdateDocumentRecipientSendStatusNotSent RecipientUpdateDocumentRecipientSendStatus = "NOT_SENT"
	RecipientUpdateDocumentRecipientSendStatusSent    RecipientUpdateDocumentRecipientSendStatus = "SENT"
)

func (e RecipientUpdateDocumentRecipientSendStatus) ToPointer() *RecipientUpdateDocumentRecipientSendStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientUpdateDocumentRecipientSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientSendStatus: %v", v)
	}
}

// RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth string

const (
	RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuthAccount RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth) ToPointer() *RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth: %v", v)
	}
}

// RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth string

const (
	RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuthAccount       RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth = "ACCOUNT"
	RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuthPasskey       RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth = "PASSKEY"
	RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuthTwoFactorAuth RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuthExplicitNone  RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth) ToPointer() *RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth: %v", v)
	}
}

type RecipientUpdateDocumentRecipientAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth `json:"actionAuth"`
}

func (o *RecipientUpdateDocumentRecipientAuthOptions) GetAccessAuth() *RecipientUpdateDocumentRecipientDocumentsRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateDocumentRecipientAuthOptions) GetActionAuth() *RecipientUpdateDocumentRecipientDocumentsRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateDocumentRecipientType string

const (
	RecipientUpdateDocumentRecipientTypeSignature     RecipientUpdateDocumentRecipientType = "SIGNATURE"
	RecipientUpdateDocumentRecipientTypeFreeSignature RecipientUpdateDocumentRecipientType = "FREE_SIGNATURE"
	RecipientUpdateDocumentRecipientTypeInitials      RecipientUpdateDocumentRecipientType = "INITIALS"
	RecipientUpdateDocumentRecipientTypeName          RecipientUpdateDocumentRecipientType = "NAME"
	RecipientUpdateDocumentRecipientTypeEmail         RecipientUpdateDocumentRecipientType = "EMAIL"
	RecipientUpdateDocumentRecipientTypeDate          RecipientUpdateDocumentRecipientType = "DATE"
	RecipientUpdateDocumentRecipientTypeText          RecipientUpdateDocumentRecipientType = "TEXT"
	RecipientUpdateDocumentRecipientTypeNumber        RecipientUpdateDocumentRecipientType = "NUMBER"
	RecipientUpdateDocumentRecipientTypeRadio         RecipientUpdateDocumentRecipientType = "RADIO"
	RecipientUpdateDocumentRecipientTypeCheckbox      RecipientUpdateDocumentRecipientType = "CHECKBOX"
	RecipientUpdateDocumentRecipientTypeDropdown      RecipientUpdateDocumentRecipientType = "DROPDOWN"
)

func (e RecipientUpdateDocumentRecipientType) ToPointer() *RecipientUpdateDocumentRecipientType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientUpdateDocumentRecipientType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9TypeDropdown RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type = "dropdown"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues struct {
	Value string `json:"value"`
}

func (o *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateDocumentRecipientFieldMeta9 struct {
	Label        *string                                                                                                       `json:"label,omitempty"`
	Placeholder  *string                                                                                                       `json:"placeholder,omitempty"`
	Required     *bool                                                                                                         `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                         `json:"readOnly,omitempty"`
	Type         RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type `json:"type"`
	Values       []RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues                                  `json:"values,omitempty"`
	DefaultValue *string                                                                                                       `json:"defaultValue,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetValues() []RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateDocumentRecipientFieldMeta9) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8TypeCheckbox RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type = "checkbox"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateDocumentRecipientFieldMeta8 struct {
	Label            *string                                                                                                       `json:"label,omitempty"`
	Placeholder      *string                                                                                                       `json:"placeholder,omitempty"`
	Required         *bool                                                                                                         `json:"required,omitempty"`
	ReadOnly         *bool                                                                                                         `json:"readOnly,omitempty"`
	Type             RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type `json:"type"`
	Values           []RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues                                          `json:"values,omitempty"`
	ValidationRule   *string                                                                                                       `json:"validationRule,omitempty"`
	ValidationLength *float64                                                                                                      `json:"validationLength,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetValues() []RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetValidationRule() *string {
	if o == nil {
		return nil
	}
	return o.ValidationRule
}

func (o *RecipientUpdateDocumentRecipientFieldMeta8) GetValidationLength() *float64 {
	if o == nil {
		return nil
	}
	return o.ValidationLength
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsTypeRadio RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType = "radio"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMetaValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateDocumentRecipientFieldMetaValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientFieldMetaValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateDocumentRecipientFieldMetaValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateDocumentRecipientFieldMeta7 struct {
	Label       *string                                                                                                      `json:"label,omitempty"`
	Placeholder *string                                                                                                      `json:"placeholder,omitempty"`
	Required    *bool                                                                                                        `json:"required,omitempty"`
	ReadOnly    *bool                                                                                                        `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType `json:"type"`
	Values      []RecipientUpdateDocumentRecipientFieldMetaValues                                                            `json:"values,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta7) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta7) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta7) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta7) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta7) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta7) GetValues() []RecipientUpdateDocumentRecipientFieldMetaValues {
	if o == nil {
		return nil
	}
	return o.Values
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyTypeNumber RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType = "number"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMeta6 struct {
	Label        *string                                                                                                `json:"label,omitempty"`
	Placeholder  *string                                                                                                `json:"placeholder,omitempty"`
	Required     *bool                                                                                                  `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                  `json:"readOnly,omitempty"`
	Type         RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType `json:"type"`
	NumberFormat *string                                                                                                `json:"numberFormat,omitempty"`
	Value        *string                                                                                                `json:"value,omitempty"`
	MinValue     *float64                                                                                               `json:"minValue,omitempty"`
	MaxValue     *float64                                                                                               `json:"maxValue,omitempty"`
	FontSize     *float64                                                                                               `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetNumberFormat() *string {
	if o == nil {
		return nil
	}
	return o.NumberFormat
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetMinValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MinValue
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetMaxValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxValue
}

func (o *RecipientUpdateDocumentRecipientFieldMeta6) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONTypeText RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType = "text"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMeta5 struct {
	Label          *string                                                                                    `json:"label,omitempty"`
	Placeholder    *string                                                                                    `json:"placeholder,omitempty"`
	Required       *bool                                                                                      `json:"required,omitempty"`
	ReadOnly       *bool                                                                                      `json:"readOnly,omitempty"`
	Type           RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType `json:"type"`
	Text           *string                                                                                    `json:"text,omitempty"`
	CharacterLimit *float64                                                                                   `json:"characterLimit,omitempty"`
	FontSize       *float64                                                                                   `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetCharacterLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CharacterLimit
}

func (o *RecipientUpdateDocumentRecipientFieldMeta5) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200TypeDate RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type = "date"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMeta4 struct {
	Label       *string                                                                     `json:"label,omitempty"`
	Placeholder *string                                                                     `json:"placeholder,omitempty"`
	Required    *bool                                                                       `json:"required,omitempty"`
	ReadOnly    *bool                                                                       `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type `json:"type"`
	FontSize    *float64                                                                    `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta4) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta4) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta4) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta4) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta4) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta4) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseTypeEmail RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType = "email"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMeta3 struct {
	Label       *string                                                                  `json:"label,omitempty"`
	Placeholder *string                                                                  `json:"placeholder,omitempty"`
	Required    *bool                                                                    `json:"required,omitempty"`
	ReadOnly    *bool                                                                    `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType `json:"type"`
	FontSize    *float64                                                                 `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta3) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta3) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta3) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta3) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta3) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsResponseType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta3) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType string

const (
	RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsTypeName RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType = "name"
)

func (e RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMeta2 struct {
	Label       *string                                                          `json:"label,omitempty"`
	Placeholder *string                                                          `json:"placeholder,omitempty"`
	Required    *bool                                                            `json:"required,omitempty"`
	ReadOnly    *bool                                                            `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType `json:"type"`
	FontSize    *float64                                                         `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta2) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta2) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta2) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta2) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta2) GetType() RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaDocumentsRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta2) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientFieldMetaType string

const (
	RecipientUpdateDocumentRecipientFieldMetaTypeInitials RecipientUpdateDocumentRecipientFieldMetaType = "initials"
)

func (e RecipientUpdateDocumentRecipientFieldMetaType) ToPointer() *RecipientUpdateDocumentRecipientFieldMetaType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientFieldMetaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientUpdateDocumentRecipientFieldMetaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientFieldMetaType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientFieldMeta1 struct {
	Label       *string                                       `json:"label,omitempty"`
	Placeholder *string                                       `json:"placeholder,omitempty"`
	Required    *bool                                         `json:"required,omitempty"`
	ReadOnly    *bool                                         `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientFieldMetaType `json:"type"`
	FontSize    *float64                                      `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientFieldMeta1) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientFieldMeta1) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientFieldMeta1) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientFieldMeta1) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientFieldMeta1) GetType() RecipientUpdateDocumentRecipientFieldMetaType {
	if o == nil {
		return RecipientUpdateDocumentRecipientFieldMetaType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFieldMeta1) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientFieldMetaUnionType string

const (
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta1 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_1"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta2 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_2"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta3 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_3"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta4 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_4"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta5 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_5"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta6 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_6"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta7 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_7"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta8 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_8"
	RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta9 RecipientUpdateDocumentRecipientFieldMetaUnionType = "recipient-updateDocumentRecipient_fieldMeta_9"
)

type RecipientUpdateDocumentRecipientFieldMeta struct {
	RecipientUpdateDocumentRecipientFieldMeta1 *RecipientUpdateDocumentRecipientFieldMeta1 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta2 *RecipientUpdateDocumentRecipientFieldMeta2 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta3 *RecipientUpdateDocumentRecipientFieldMeta3 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta4 *RecipientUpdateDocumentRecipientFieldMeta4 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta5 *RecipientUpdateDocumentRecipientFieldMeta5 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta6 *RecipientUpdateDocumentRecipientFieldMeta6 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta7 *RecipientUpdateDocumentRecipientFieldMeta7 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta8 *RecipientUpdateDocumentRecipientFieldMeta8 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientFieldMeta9 *RecipientUpdateDocumentRecipientFieldMeta9 `queryParam:"inline"`

	Type RecipientUpdateDocumentRecipientFieldMetaUnionType
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta1(recipientUpdateDocumentRecipientFieldMeta1 RecipientUpdateDocumentRecipientFieldMeta1) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta1

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta1: &recipientUpdateDocumentRecipientFieldMeta1,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta2(recipientUpdateDocumentRecipientFieldMeta2 RecipientUpdateDocumentRecipientFieldMeta2) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta2

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta2: &recipientUpdateDocumentRecipientFieldMeta2,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta3(recipientUpdateDocumentRecipientFieldMeta3 RecipientUpdateDocumentRecipientFieldMeta3) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta3

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta3: &recipientUpdateDocumentRecipientFieldMeta3,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta4(recipientUpdateDocumentRecipientFieldMeta4 RecipientUpdateDocumentRecipientFieldMeta4) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta4

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta4: &recipientUpdateDocumentRecipientFieldMeta4,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta5(recipientUpdateDocumentRecipientFieldMeta5 RecipientUpdateDocumentRecipientFieldMeta5) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta5

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta5: &recipientUpdateDocumentRecipientFieldMeta5,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta6(recipientUpdateDocumentRecipientFieldMeta6 RecipientUpdateDocumentRecipientFieldMeta6) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta6

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta6: &recipientUpdateDocumentRecipientFieldMeta6,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta7(recipientUpdateDocumentRecipientFieldMeta7 RecipientUpdateDocumentRecipientFieldMeta7) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta7

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta7: &recipientUpdateDocumentRecipientFieldMeta7,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta8(recipientUpdateDocumentRecipientFieldMeta8 RecipientUpdateDocumentRecipientFieldMeta8) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta8

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta8: &recipientUpdateDocumentRecipientFieldMeta8,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientFieldMetaRecipientUpdateDocumentRecipientFieldMeta9(recipientUpdateDocumentRecipientFieldMeta9 RecipientUpdateDocumentRecipientFieldMeta9) RecipientUpdateDocumentRecipientFieldMeta {
	typ := RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta9

	return RecipientUpdateDocumentRecipientFieldMeta{
		RecipientUpdateDocumentRecipientFieldMeta9: &recipientUpdateDocumentRecipientFieldMeta9,
		Type: typ,
	}
}

func (u *RecipientUpdateDocumentRecipientFieldMeta) UnmarshalJSON(data []byte) error {

	var recipientUpdateDocumentRecipientFieldMeta1 RecipientUpdateDocumentRecipientFieldMeta1 = RecipientUpdateDocumentRecipientFieldMeta1{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta1, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta1 = &recipientUpdateDocumentRecipientFieldMeta1
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta1
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta2 RecipientUpdateDocumentRecipientFieldMeta2 = RecipientUpdateDocumentRecipientFieldMeta2{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta2, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta2 = &recipientUpdateDocumentRecipientFieldMeta2
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta2
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta3 RecipientUpdateDocumentRecipientFieldMeta3 = RecipientUpdateDocumentRecipientFieldMeta3{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta3, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta3 = &recipientUpdateDocumentRecipientFieldMeta3
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta3
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta4 RecipientUpdateDocumentRecipientFieldMeta4 = RecipientUpdateDocumentRecipientFieldMeta4{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta4, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta4 = &recipientUpdateDocumentRecipientFieldMeta4
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta4
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta7 RecipientUpdateDocumentRecipientFieldMeta7 = RecipientUpdateDocumentRecipientFieldMeta7{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta7, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta7 = &recipientUpdateDocumentRecipientFieldMeta7
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta7
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta9 RecipientUpdateDocumentRecipientFieldMeta9 = RecipientUpdateDocumentRecipientFieldMeta9{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta9, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta9 = &recipientUpdateDocumentRecipientFieldMeta9
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta9
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta5 RecipientUpdateDocumentRecipientFieldMeta5 = RecipientUpdateDocumentRecipientFieldMeta5{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta5, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta5 = &recipientUpdateDocumentRecipientFieldMeta5
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta5
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta8 RecipientUpdateDocumentRecipientFieldMeta8 = RecipientUpdateDocumentRecipientFieldMeta8{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta8, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta8 = &recipientUpdateDocumentRecipientFieldMeta8
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta8
		return nil
	}

	var recipientUpdateDocumentRecipientFieldMeta6 RecipientUpdateDocumentRecipientFieldMeta6 = RecipientUpdateDocumentRecipientFieldMeta6{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientFieldMeta6, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientFieldMeta6 = &recipientUpdateDocumentRecipientFieldMeta6
		u.Type = RecipientUpdateDocumentRecipientFieldMetaUnionTypeRecipientUpdateDocumentRecipientFieldMeta6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientUpdateDocumentRecipientFieldMeta", string(data))
}

func (u RecipientUpdateDocumentRecipientFieldMeta) MarshalJSON() ([]byte, error) {
	if u.RecipientUpdateDocumentRecipientFieldMeta1 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta1, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta2 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta2, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta3 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta3, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta4 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta4, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta5 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta5, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta6 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta6, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta7 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta7, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta8 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta8, "", true)
	}

	if u.RecipientUpdateDocumentRecipientFieldMeta9 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientFieldMeta9, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientUpdateDocumentRecipientFieldMeta: all fields are null")
}

type RecipientUpdateDocumentRecipientFields struct {
	Type        RecipientUpdateDocumentRecipientType `json:"type"`
	ID          int64                                `json:"id"`
	SecondaryID string                               `json:"secondaryId"`
	DocumentID  *int64                               `json:"documentId"`
	TemplateID  *int64                               `json:"templateId"`
	RecipientID int64                                `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                    `json:"page"`
	PositionX  any                                        `json:"positionX,omitempty"`
	PositionY  any                                        `json:"positionY,omitempty"`
	Width      any                                        `json:"width,omitempty"`
	Height     any                                        `json:"height,omitempty"`
	CustomText string                                     `json:"customText"`
	Inserted   bool                                       `json:"inserted"`
	FieldMeta  *RecipientUpdateDocumentRecipientFieldMeta `json:"fieldMeta"`
}

func (o *RecipientUpdateDocumentRecipientFields) GetType() RecipientUpdateDocumentRecipientType {
	if o == nil {
		return RecipientUpdateDocumentRecipientType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientFields) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientFields) GetSecondaryID() string {
	if o == nil {
		return ""
	}
	return o.SecondaryID
}

func (o *RecipientUpdateDocumentRecipientFields) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateDocumentRecipientFields) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateDocumentRecipientFields) GetRecipientID() int64 {
	if o == nil {
		return 0
	}
	return o.RecipientID
}

func (o *RecipientUpdateDocumentRecipientFields) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *RecipientUpdateDocumentRecipientFields) GetPositionX() any {
	if o == nil {
		return nil
	}
	return o.PositionX
}

func (o *RecipientUpdateDocumentRecipientFields) GetPositionY() any {
	if o == nil {
		return nil
	}
	return o.PositionY
}

func (o *RecipientUpdateDocumentRecipientFields) GetWidth() any {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *RecipientUpdateDocumentRecipientFields) GetHeight() any {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *RecipientUpdateDocumentRecipientFields) GetCustomText() string {
	if o == nil {
		return ""
	}
	return o.CustomText
}

func (o *RecipientUpdateDocumentRecipientFields) GetInserted() bool {
	if o == nil {
		return false
	}
	return o.Inserted
}

func (o *RecipientUpdateDocumentRecipientFields) GetFieldMeta() *RecipientUpdateDocumentRecipientFieldMeta {
	if o == nil {
		return nil
	}
	return o.FieldMeta
}

// RecipientUpdateDocumentRecipientResponseBody - Successful response
type RecipientUpdateDocumentRecipientResponseBody struct {
	Role              RecipientUpdateDocumentRecipientDocumentsRecipientsRole `json:"role"`
	ReadStatus        RecipientUpdateDocumentRecipientReadStatus              `json:"readStatus"`
	SigningStatus     RecipientUpdateDocumentRecipientSigningStatus           `json:"signingStatus"`
	SendStatus        RecipientUpdateDocumentRecipientSendStatus              `json:"sendStatus"`
	ID                int64                                                   `json:"id"`
	DocumentID        *int64                                                  `json:"documentId"`
	TemplateID        *int64                                                  `json:"templateId"`
	Email             string                                                  `json:"email"`
	Name              string                                                  `json:"name"`
	Token             string                                                  `json:"token"`
	DocumentDeletedAt *string                                                 `json:"documentDeletedAt"`
	Expired           *string                                                 `json:"expired"`
	SignedAt          *string                                                 `json:"signedAt"`
	AuthOptions       *RecipientUpdateDocumentRecipientAuthOptions            `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                                 `json:"signingOrder"`
	RejectionReason *string                                  `json:"rejectionReason"`
	Fields          []RecipientUpdateDocumentRecipientFields `json:"fields"`
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetRole() RecipientUpdateDocumentRecipientDocumentsRecipientsRole {
	if o == nil {
		return RecipientUpdateDocumentRecipientDocumentsRecipientsRole("")
	}
	return o.Role
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetReadStatus() RecipientUpdateDocumentRecipientReadStatus {
	if o == nil {
		return RecipientUpdateDocumentRecipientReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetSigningStatus() RecipientUpdateDocumentRecipientSigningStatus {
	if o == nil {
		return RecipientUpdateDocumentRecipientSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetSendStatus() RecipientUpdateDocumentRecipientSendStatus {
	if o == nil {
		return RecipientUpdateDocumentRecipientSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetAuthOptions() *RecipientUpdateDocumentRecipientAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

func (o *RecipientUpdateDocumentRecipientResponseBody) GetFields() []RecipientUpdateDocumentRecipientFields {
	if o == nil {
		return []RecipientUpdateDocumentRecipientFields{}
	}
	return o.Fields
}

type RecipientUpdateDocumentRecipientResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientUpdateDocumentRecipientResponseBody
}

func (o *RecipientUpdateDocumentRecipientResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientUpdateDocumentRecipientResponse) GetObject() *RecipientUpdateDocumentRecipientResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
