// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientGetDocumentRecipientInternalServerErrorIssue struct {
	Message string `json:"message"`
}

func (o *RecipientGetDocumentRecipientInternalServerErrorIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// RecipientGetDocumentRecipientInternalServerError - Internal server error
type RecipientGetDocumentRecipientInternalServerError struct {
	Message  string                                                  `json:"message"`
	Code     string                                                  `json:"code"`
	Issues   []RecipientGetDocumentRecipientInternalServerErrorIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                                 `json:"-"`
}

var _ error = &RecipientGetDocumentRecipientInternalServerError{}

func (e *RecipientGetDocumentRecipientInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type RecipientGetDocumentRecipientNotFoundIssue struct {
	Message string `json:"message"`
}

func (o *RecipientGetDocumentRecipientNotFoundIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// RecipientGetDocumentRecipientNotFoundError - Not found
type RecipientGetDocumentRecipientNotFoundError struct {
	Message  string                                       `json:"message"`
	Code     string                                       `json:"code"`
	Issues   []RecipientGetDocumentRecipientNotFoundIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                      `json:"-"`
}

var _ error = &RecipientGetDocumentRecipientNotFoundError{}

func (e *RecipientGetDocumentRecipientNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type RecipientGetDocumentRecipientBadRequestIssue struct {
	Message string `json:"message"`
}

func (o *RecipientGetDocumentRecipientBadRequestIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// RecipientGetDocumentRecipientBadRequestError - Invalid input data
type RecipientGetDocumentRecipientBadRequestError struct {
	Message  string                                         `json:"message"`
	Code     string                                         `json:"code"`
	Issues   []RecipientGetDocumentRecipientBadRequestIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                        `json:"-"`
}

var _ error = &RecipientGetDocumentRecipientBadRequestError{}

func (e *RecipientGetDocumentRecipientBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
