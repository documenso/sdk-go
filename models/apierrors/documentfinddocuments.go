// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type DocumentFindDocumentsInternalServerErrorIssue struct {
	Message string `json:"message"`
}

func (o *DocumentFindDocumentsInternalServerErrorIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// DocumentFindDocumentsInternalServerError - Internal server error
type DocumentFindDocumentsInternalServerError struct {
	Message  string                                          `json:"message"`
	Code     string                                          `json:"code"`
	Issues   []DocumentFindDocumentsInternalServerErrorIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                         `json:"-"`
}

var _ error = &DocumentFindDocumentsInternalServerError{}

func (e *DocumentFindDocumentsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentFindDocumentsNotFoundIssue struct {
	Message string `json:"message"`
}

func (o *DocumentFindDocumentsNotFoundIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// DocumentFindDocumentsNotFoundError - Not found
type DocumentFindDocumentsNotFoundError struct {
	Message  string                               `json:"message"`
	Code     string                               `json:"code"`
	Issues   []DocumentFindDocumentsNotFoundIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata              `json:"-"`
}

var _ error = &DocumentFindDocumentsNotFoundError{}

func (e *DocumentFindDocumentsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentFindDocumentsBadRequestIssue struct {
	Message string `json:"message"`
}

func (o *DocumentFindDocumentsBadRequestIssue) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// DocumentFindDocumentsBadRequestError - Invalid input data
type DocumentFindDocumentsBadRequestError struct {
	Message  string                                 `json:"message"`
	Code     string                                 `json:"code"`
	Issues   []DocumentFindDocumentsBadRequestIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &DocumentFindDocumentsBadRequestError{}

func (e *DocumentFindDocumentsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
