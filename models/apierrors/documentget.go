// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type DocumentGetInternalServerErrorIssue struct {
	Message string `json:"message"`
}

func (d *DocumentGetInternalServerErrorIssue) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

// DocumentGetInternalServerError - Internal server error
type DocumentGetInternalServerError struct {
	Message  string                                `json:"message"`
	Code     string                                `json:"code"`
	Issues   []DocumentGetInternalServerErrorIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata               `json:"-"`
}

var _ error = &DocumentGetInternalServerError{}

func (e *DocumentGetInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentGetNotFoundIssue struct {
	Message string `json:"message"`
}

func (d *DocumentGetNotFoundIssue) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

// DocumentGetNotFoundError - Not found
type DocumentGetNotFoundError struct {
	Message  string                     `json:"message"`
	Code     string                     `json:"code"`
	Issues   []DocumentGetNotFoundIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata    `json:"-"`
}

var _ error = &DocumentGetNotFoundError{}

func (e *DocumentGetNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentGetBadRequestIssue struct {
	Message string `json:"message"`
}

func (d *DocumentGetBadRequestIssue) GetMessage() string {
	if d == nil {
		return ""
	}
	return d.Message
}

// DocumentGetBadRequestError - Invalid input data
type DocumentGetBadRequestError struct {
	Message  string                       `json:"message"`
	Code     string                       `json:"code"`
	Issues   []DocumentGetBadRequestIssue `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DocumentGetBadRequestError{}

func (e *DocumentGetBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
