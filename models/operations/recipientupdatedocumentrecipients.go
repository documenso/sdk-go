// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientUpdateDocumentRecipientsRole string

const (
	RecipientUpdateDocumentRecipientsRoleCc       RecipientUpdateDocumentRecipientsRole = "CC"
	RecipientUpdateDocumentRecipientsRoleSigner   RecipientUpdateDocumentRecipientsRole = "SIGNER"
	RecipientUpdateDocumentRecipientsRoleViewer   RecipientUpdateDocumentRecipientsRole = "VIEWER"
	RecipientUpdateDocumentRecipientsRoleApprover RecipientUpdateDocumentRecipientsRole = "APPROVER"
)

func (e RecipientUpdateDocumentRecipientsRole) ToPointer() *RecipientUpdateDocumentRecipientsRole {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientUpdateDocumentRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsRole: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientUpdateDocumentRecipientsAccessAuth string

const (
	RecipientUpdateDocumentRecipientsAccessAuthAccount RecipientUpdateDocumentRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientUpdateDocumentRecipientsAccessAuth) ToPointer() *RecipientUpdateDocumentRecipientsAccessAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateDocumentRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsAccessAuth: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientUpdateDocumentRecipientsActionAuth string

const (
	RecipientUpdateDocumentRecipientsActionAuthAccount       RecipientUpdateDocumentRecipientsActionAuth = "ACCOUNT"
	RecipientUpdateDocumentRecipientsActionAuthPasskey       RecipientUpdateDocumentRecipientsActionAuth = "PASSKEY"
	RecipientUpdateDocumentRecipientsActionAuthTwoFactorAuth RecipientUpdateDocumentRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientUpdateDocumentRecipientsActionAuthExplicitNone  RecipientUpdateDocumentRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientUpdateDocumentRecipientsActionAuth) ToPointer() *RecipientUpdateDocumentRecipientsActionAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateDocumentRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsActionAuth: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsRecipients struct {
	// The ID of the recipient to update.
	ID           float64                                `json:"id"`
	Email        *string                                `json:"email,omitempty"`
	Name         *string                                `json:"name,omitempty"`
	Role         *RecipientUpdateDocumentRecipientsRole `json:"role,omitempty"`
	SigningOrder *float64                               `json:"signingOrder,omitempty"`
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateDocumentRecipientsAccessAuth `json:"accessAuth,omitempty"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateDocumentRecipientsActionAuth `json:"actionAuth,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetRole() *RecipientUpdateDocumentRecipientsRole {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetAccessAuth() *RecipientUpdateDocumentRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateDocumentRecipientsRecipients) GetActionAuth() *RecipientUpdateDocumentRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateDocumentRecipientsRequestBody struct {
	DocumentID float64                                       `json:"documentId"`
	Recipients []RecipientUpdateDocumentRecipientsRecipients `json:"recipients"`
}

func (o *RecipientUpdateDocumentRecipientsRequestBody) GetDocumentID() float64 {
	if o == nil {
		return 0.0
	}
	return o.DocumentID
}

func (o *RecipientUpdateDocumentRecipientsRequestBody) GetRecipients() []RecipientUpdateDocumentRecipientsRecipients {
	if o == nil {
		return []RecipientUpdateDocumentRecipientsRecipients{}
	}
	return o.Recipients
}

type RecipientUpdateDocumentRecipientsDocumentsRecipientsRole string

const (
	RecipientUpdateDocumentRecipientsDocumentsRecipientsRoleCc       RecipientUpdateDocumentRecipientsDocumentsRecipientsRole = "CC"
	RecipientUpdateDocumentRecipientsDocumentsRecipientsRoleSigner   RecipientUpdateDocumentRecipientsDocumentsRecipientsRole = "SIGNER"
	RecipientUpdateDocumentRecipientsDocumentsRecipientsRoleViewer   RecipientUpdateDocumentRecipientsDocumentsRecipientsRole = "VIEWER"
	RecipientUpdateDocumentRecipientsDocumentsRecipientsRoleApprover RecipientUpdateDocumentRecipientsDocumentsRecipientsRole = "APPROVER"
)

func (e RecipientUpdateDocumentRecipientsDocumentsRecipientsRole) ToPointer() *RecipientUpdateDocumentRecipientsDocumentsRecipientsRole {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsDocumentsRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientUpdateDocumentRecipientsDocumentsRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsDocumentsRecipientsRole: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsReadStatus string

const (
	RecipientUpdateDocumentRecipientsReadStatusNotOpened RecipientUpdateDocumentRecipientsReadStatus = "NOT_OPENED"
	RecipientUpdateDocumentRecipientsReadStatusOpened    RecipientUpdateDocumentRecipientsReadStatus = "OPENED"
)

func (e RecipientUpdateDocumentRecipientsReadStatus) ToPointer() *RecipientUpdateDocumentRecipientsReadStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientUpdateDocumentRecipientsReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsReadStatus: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsSigningStatus string

const (
	RecipientUpdateDocumentRecipientsSigningStatusNotSigned RecipientUpdateDocumentRecipientsSigningStatus = "NOT_SIGNED"
	RecipientUpdateDocumentRecipientsSigningStatusSigned    RecipientUpdateDocumentRecipientsSigningStatus = "SIGNED"
	RecipientUpdateDocumentRecipientsSigningStatusRejected  RecipientUpdateDocumentRecipientsSigningStatus = "REJECTED"
)

func (e RecipientUpdateDocumentRecipientsSigningStatus) ToPointer() *RecipientUpdateDocumentRecipientsSigningStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientUpdateDocumentRecipientsSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsSigningStatus: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsSendStatus string

const (
	RecipientUpdateDocumentRecipientsSendStatusNotSent RecipientUpdateDocumentRecipientsSendStatus = "NOT_SENT"
	RecipientUpdateDocumentRecipientsSendStatusSent    RecipientUpdateDocumentRecipientsSendStatus = "SENT"
)

func (e RecipientUpdateDocumentRecipientsSendStatus) ToPointer() *RecipientUpdateDocumentRecipientsSendStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientUpdateDocumentRecipientsSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsSendStatus: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth string

const (
	RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuthAccount RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth) ToPointer() *RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth string

const (
	RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuthAccount       RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth = "ACCOUNT"
	RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuthPasskey       RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth = "PASSKEY"
	RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuthTwoFactorAuth RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuthExplicitNone  RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth) ToPointer() *RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth `json:"actionAuth"`
}

func (o *RecipientUpdateDocumentRecipientsAuthOptions) GetAccessAuth() *RecipientUpdateDocumentRecipientsDocumentsRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateDocumentRecipientsAuthOptions) GetActionAuth() *RecipientUpdateDocumentRecipientsDocumentsRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateDocumentRecipientsType string

const (
	RecipientUpdateDocumentRecipientsTypeSignature     RecipientUpdateDocumentRecipientsType = "SIGNATURE"
	RecipientUpdateDocumentRecipientsTypeFreeSignature RecipientUpdateDocumentRecipientsType = "FREE_SIGNATURE"
	RecipientUpdateDocumentRecipientsTypeInitials      RecipientUpdateDocumentRecipientsType = "INITIALS"
	RecipientUpdateDocumentRecipientsTypeName          RecipientUpdateDocumentRecipientsType = "NAME"
	RecipientUpdateDocumentRecipientsTypeEmail         RecipientUpdateDocumentRecipientsType = "EMAIL"
	RecipientUpdateDocumentRecipientsTypeDate          RecipientUpdateDocumentRecipientsType = "DATE"
	RecipientUpdateDocumentRecipientsTypeText          RecipientUpdateDocumentRecipientsType = "TEXT"
	RecipientUpdateDocumentRecipientsTypeNumber        RecipientUpdateDocumentRecipientsType = "NUMBER"
	RecipientUpdateDocumentRecipientsTypeRadio         RecipientUpdateDocumentRecipientsType = "RADIO"
	RecipientUpdateDocumentRecipientsTypeCheckbox      RecipientUpdateDocumentRecipientsType = "CHECKBOX"
	RecipientUpdateDocumentRecipientsTypeDropdown      RecipientUpdateDocumentRecipientsType = "DROPDOWN"
)

func (e RecipientUpdateDocumentRecipientsType) ToPointer() *RecipientUpdateDocumentRecipientsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientUpdateDocumentRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9TypeDropdown RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type = "dropdown"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues struct {
	Value string `json:"value"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateDocumentRecipientsFieldMeta9 struct {
	Label        *string                                                                                                                  `json:"label,omitempty"`
	Placeholder  *string                                                                                                                  `json:"placeholder,omitempty"`
	Required     *bool                                                                                                                    `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                                    `json:"readOnly,omitempty"`
	Type         RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type `json:"type"`
	Values       []RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues                                            `json:"values,omitempty"`
	DefaultValue *string                                                                                                                  `json:"defaultValue,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetValues() []RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta9) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsTypeCheckbox RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType = "checkbox"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateDocumentRecipientsFieldMeta8 struct {
	Label            *string                                                                                                                 `json:"label,omitempty"`
	Placeholder      *string                                                                                                                 `json:"placeholder,omitempty"`
	Required         *bool                                                                                                                   `json:"required,omitempty"`
	ReadOnly         *bool                                                                                                                   `json:"readOnly,omitempty"`
	Type             RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType `json:"type"`
	Values           []RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues                                                   `json:"values,omitempty"`
	ValidationRule   *string                                                                                                                 `json:"validationRule,omitempty"`
	ValidationLength *float64                                                                                                                `json:"validationLength,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetValues() []RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetValidationRule() *string {
	if o == nil {
		return nil
	}
	return o.ValidationRule
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta8) GetValidationLength() *float64 {
	if o == nil {
		return nil
	}
	return o.ValidationLength
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsTypeRadio RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType = "radio"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateDocumentRecipientsFieldMetaValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateDocumentRecipientsFieldMeta7 struct {
	Label       *string                                                                                                           `json:"label,omitempty"`
	Placeholder *string                                                                                                           `json:"placeholder,omitempty"`
	Required    *bool                                                                                                             `json:"required,omitempty"`
	ReadOnly    *bool                                                                                                             `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType `json:"type"`
	Values      []RecipientUpdateDocumentRecipientsFieldMetaValues                                                                `json:"values,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta7) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta7) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta7) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta7) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta7) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta7) GetValues() []RecipientUpdateDocumentRecipientsFieldMetaValues {
	if o == nil {
		return nil
	}
	return o.Values
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyTypeNumber RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType = "number"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMeta6 struct {
	Label        *string                                                                                                 `json:"label,omitempty"`
	Placeholder  *string                                                                                                 `json:"placeholder,omitempty"`
	Required     *bool                                                                                                   `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                   `json:"readOnly,omitempty"`
	Type         RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType `json:"type"`
	NumberFormat *string                                                                                                 `json:"numberFormat,omitempty"`
	Value        *string                                                                                                 `json:"value,omitempty"`
	MinValue     *float64                                                                                                `json:"minValue,omitempty"`
	MaxValue     *float64                                                                                                `json:"maxValue,omitempty"`
	FontSize     *float64                                                                                                `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetNumberFormat() *string {
	if o == nil {
		return nil
	}
	return o.NumberFormat
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetMinValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MinValue
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetMaxValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxValue
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta6) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONTypeText RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType = "text"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMeta5 struct {
	Label          *string                                                                                     `json:"label,omitempty"`
	Placeholder    *string                                                                                     `json:"placeholder,omitempty"`
	Required       *bool                                                                                       `json:"required,omitempty"`
	ReadOnly       *bool                                                                                       `json:"readOnly,omitempty"`
	Type           RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType `json:"type"`
	Text           *string                                                                                     `json:"text,omitempty"`
	CharacterLimit *float64                                                                                    `json:"characterLimit,omitempty"`
	FontSize       *float64                                                                                    `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200ApplicationJSONType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetCharacterLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CharacterLimit
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta5) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200TypeDate RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type = "date"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMeta4 struct {
	Label       *string                                                                      `json:"label,omitempty"`
	Placeholder *string                                                                      `json:"placeholder,omitempty"`
	Required    *bool                                                                        `json:"required,omitempty"`
	ReadOnly    *bool                                                                        `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type `json:"type"`
	FontSize    *float64                                                                     `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta4) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta4) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta4) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta4) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta4) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponse200Type("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta4) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseTypeEmail RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType = "email"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMeta3 struct {
	Label       *string                                                                   `json:"label,omitempty"`
	Placeholder *string                                                                   `json:"placeholder,omitempty"`
	Required    *bool                                                                     `json:"required,omitempty"`
	ReadOnly    *bool                                                                     `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType `json:"type"`
	FontSize    *float64                                                                  `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta3) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta3) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta3) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta3) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta3) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsResponseType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta3) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsTypeName RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType = "name"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMeta2 struct {
	Label       *string                                                           `json:"label,omitempty"`
	Placeholder *string                                                           `json:"placeholder,omitempty"`
	Required    *bool                                                             `json:"required,omitempty"`
	ReadOnly    *bool                                                             `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType `json:"type"`
	FontSize    *float64                                                          `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta2) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta2) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta2) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta2) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta2) GetType() RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaDocumentsRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta2) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientsFieldMetaType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeInitials RecipientUpdateDocumentRecipientsFieldMetaType = "initials"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaType) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientUpdateDocumentRecipientsFieldMetaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMeta1 struct {
	Label       *string                                        `json:"label,omitempty"`
	Placeholder *string                                        `json:"placeholder,omitempty"`
	Required    *bool                                          `json:"required,omitempty"`
	ReadOnly    *bool                                          `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaType `json:"type"`
	FontSize    *float64                                       `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta1) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta1) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta1) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta1) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta1) GetType() RecipientUpdateDocumentRecipientsFieldMetaType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFieldMeta1) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateDocumentRecipientsFieldMetaUnionType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta1 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_1"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta2 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_2"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta3 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_3"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta4 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_4"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta5 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_5"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta6 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_6"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta7 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_7"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta8 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_8"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta9 RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient-updateDocumentRecipients_fieldMeta_9"
)

type RecipientUpdateDocumentRecipientsFieldMeta struct {
	RecipientUpdateDocumentRecipientsFieldMeta1 *RecipientUpdateDocumentRecipientsFieldMeta1 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta2 *RecipientUpdateDocumentRecipientsFieldMeta2 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta3 *RecipientUpdateDocumentRecipientsFieldMeta3 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta4 *RecipientUpdateDocumentRecipientsFieldMeta4 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta5 *RecipientUpdateDocumentRecipientsFieldMeta5 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta6 *RecipientUpdateDocumentRecipientsFieldMeta6 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta7 *RecipientUpdateDocumentRecipientsFieldMeta7 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta8 *RecipientUpdateDocumentRecipientsFieldMeta8 `queryParam:"inline"`
	RecipientUpdateDocumentRecipientsFieldMeta9 *RecipientUpdateDocumentRecipientsFieldMeta9 `queryParam:"inline"`

	Type RecipientUpdateDocumentRecipientsFieldMetaUnionType
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta1(recipientUpdateDocumentRecipientsFieldMeta1 RecipientUpdateDocumentRecipientsFieldMeta1) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta1

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta1: &recipientUpdateDocumentRecipientsFieldMeta1,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta2(recipientUpdateDocumentRecipientsFieldMeta2 RecipientUpdateDocumentRecipientsFieldMeta2) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta2

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta2: &recipientUpdateDocumentRecipientsFieldMeta2,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta3(recipientUpdateDocumentRecipientsFieldMeta3 RecipientUpdateDocumentRecipientsFieldMeta3) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta3

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta3: &recipientUpdateDocumentRecipientsFieldMeta3,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta4(recipientUpdateDocumentRecipientsFieldMeta4 RecipientUpdateDocumentRecipientsFieldMeta4) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta4

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta4: &recipientUpdateDocumentRecipientsFieldMeta4,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta5(recipientUpdateDocumentRecipientsFieldMeta5 RecipientUpdateDocumentRecipientsFieldMeta5) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta5

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta5: &recipientUpdateDocumentRecipientsFieldMeta5,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta6(recipientUpdateDocumentRecipientsFieldMeta6 RecipientUpdateDocumentRecipientsFieldMeta6) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta6

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta6: &recipientUpdateDocumentRecipientsFieldMeta6,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta7(recipientUpdateDocumentRecipientsFieldMeta7 RecipientUpdateDocumentRecipientsFieldMeta7) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta7

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta7: &recipientUpdateDocumentRecipientsFieldMeta7,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta8(recipientUpdateDocumentRecipientsFieldMeta8 RecipientUpdateDocumentRecipientsFieldMeta8) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta8

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta8: &recipientUpdateDocumentRecipientsFieldMeta8,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaRecipientUpdateDocumentRecipientsFieldMeta9(recipientUpdateDocumentRecipientsFieldMeta9 RecipientUpdateDocumentRecipientsFieldMeta9) RecipientUpdateDocumentRecipientsFieldMeta {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta9

	return RecipientUpdateDocumentRecipientsFieldMeta{
		RecipientUpdateDocumentRecipientsFieldMeta9: &recipientUpdateDocumentRecipientsFieldMeta9,
		Type: typ,
	}
}

func (u *RecipientUpdateDocumentRecipientsFieldMeta) UnmarshalJSON(data []byte) error {

	var recipientUpdateDocumentRecipientsFieldMeta1 RecipientUpdateDocumentRecipientsFieldMeta1 = RecipientUpdateDocumentRecipientsFieldMeta1{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta1, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta1 = &recipientUpdateDocumentRecipientsFieldMeta1
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta1
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta2 RecipientUpdateDocumentRecipientsFieldMeta2 = RecipientUpdateDocumentRecipientsFieldMeta2{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta2, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta2 = &recipientUpdateDocumentRecipientsFieldMeta2
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta2
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta3 RecipientUpdateDocumentRecipientsFieldMeta3 = RecipientUpdateDocumentRecipientsFieldMeta3{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta3, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta3 = &recipientUpdateDocumentRecipientsFieldMeta3
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta3
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta4 RecipientUpdateDocumentRecipientsFieldMeta4 = RecipientUpdateDocumentRecipientsFieldMeta4{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta4, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta4 = &recipientUpdateDocumentRecipientsFieldMeta4
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta4
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta7 RecipientUpdateDocumentRecipientsFieldMeta7 = RecipientUpdateDocumentRecipientsFieldMeta7{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta7, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta7 = &recipientUpdateDocumentRecipientsFieldMeta7
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta7
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta9 RecipientUpdateDocumentRecipientsFieldMeta9 = RecipientUpdateDocumentRecipientsFieldMeta9{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta9, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta9 = &recipientUpdateDocumentRecipientsFieldMeta9
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta9
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta5 RecipientUpdateDocumentRecipientsFieldMeta5 = RecipientUpdateDocumentRecipientsFieldMeta5{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta5, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta5 = &recipientUpdateDocumentRecipientsFieldMeta5
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta5
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta8 RecipientUpdateDocumentRecipientsFieldMeta8 = RecipientUpdateDocumentRecipientsFieldMeta8{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta8, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta8 = &recipientUpdateDocumentRecipientsFieldMeta8
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta8
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMeta6 RecipientUpdateDocumentRecipientsFieldMeta6 = RecipientUpdateDocumentRecipientsFieldMeta6{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMeta6, "", true, true); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMeta6 = &recipientUpdateDocumentRecipientsFieldMeta6
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMeta6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientUpdateDocumentRecipientsFieldMeta", string(data))
}

func (u RecipientUpdateDocumentRecipientsFieldMeta) MarshalJSON() ([]byte, error) {
	if u.RecipientUpdateDocumentRecipientsFieldMeta1 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta1, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta2 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta2, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta3 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta3, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta4 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta4, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta5 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta5, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta6 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta6, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta7 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta7, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta8 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta8, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMeta9 != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMeta9, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientUpdateDocumentRecipientsFieldMeta: all fields are null")
}

type RecipientUpdateDocumentRecipientsFields struct {
	Type        RecipientUpdateDocumentRecipientsType `json:"type"`
	ID          int64                                 `json:"id"`
	SecondaryID string                                `json:"secondaryId"`
	DocumentID  *int64                                `json:"documentId"`
	TemplateID  *int64                                `json:"templateId"`
	RecipientID int64                                 `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                     `json:"page"`
	PositionX  any                                         `json:"positionX,omitempty"`
	PositionY  any                                         `json:"positionY,omitempty"`
	Width      any                                         `json:"width,omitempty"`
	Height     any                                         `json:"height,omitempty"`
	CustomText string                                      `json:"customText"`
	Inserted   bool                                        `json:"inserted"`
	FieldMeta  *RecipientUpdateDocumentRecipientsFieldMeta `json:"fieldMeta"`
}

func (o *RecipientUpdateDocumentRecipientsFields) GetType() RecipientUpdateDocumentRecipientsType {
	if o == nil {
		return RecipientUpdateDocumentRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateDocumentRecipientsFields) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientsFields) GetSecondaryID() string {
	if o == nil {
		return ""
	}
	return o.SecondaryID
}

func (o *RecipientUpdateDocumentRecipientsFields) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateDocumentRecipientsFields) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateDocumentRecipientsFields) GetRecipientID() int64 {
	if o == nil {
		return 0
	}
	return o.RecipientID
}

func (o *RecipientUpdateDocumentRecipientsFields) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *RecipientUpdateDocumentRecipientsFields) GetPositionX() any {
	if o == nil {
		return nil
	}
	return o.PositionX
}

func (o *RecipientUpdateDocumentRecipientsFields) GetPositionY() any {
	if o == nil {
		return nil
	}
	return o.PositionY
}

func (o *RecipientUpdateDocumentRecipientsFields) GetWidth() any {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *RecipientUpdateDocumentRecipientsFields) GetHeight() any {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *RecipientUpdateDocumentRecipientsFields) GetCustomText() string {
	if o == nil {
		return ""
	}
	return o.CustomText
}

func (o *RecipientUpdateDocumentRecipientsFields) GetInserted() bool {
	if o == nil {
		return false
	}
	return o.Inserted
}

func (o *RecipientUpdateDocumentRecipientsFields) GetFieldMeta() *RecipientUpdateDocumentRecipientsFieldMeta {
	if o == nil {
		return nil
	}
	return o.FieldMeta
}

type RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients struct {
	Role              RecipientUpdateDocumentRecipientsDocumentsRecipientsRole `json:"role"`
	ReadStatus        RecipientUpdateDocumentRecipientsReadStatus              `json:"readStatus"`
	SigningStatus     RecipientUpdateDocumentRecipientsSigningStatus           `json:"signingStatus"`
	SendStatus        RecipientUpdateDocumentRecipientsSendStatus              `json:"sendStatus"`
	ID                int64                                                    `json:"id"`
	DocumentID        *int64                                                   `json:"documentId"`
	TemplateID        *int64                                                   `json:"templateId"`
	Email             string                                                   `json:"email"`
	Name              string                                                   `json:"name"`
	Token             string                                                   `json:"token"`
	DocumentDeletedAt *string                                                  `json:"documentDeletedAt"`
	Expired           *string                                                  `json:"expired"`
	SignedAt          *string                                                  `json:"signedAt"`
	AuthOptions       *RecipientUpdateDocumentRecipientsAuthOptions            `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                                  `json:"signingOrder"`
	RejectionReason *string                                   `json:"rejectionReason"`
	Fields          []RecipientUpdateDocumentRecipientsFields `json:"fields"`
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetRole() RecipientUpdateDocumentRecipientsDocumentsRecipientsRole {
	if o == nil {
		return RecipientUpdateDocumentRecipientsDocumentsRecipientsRole("")
	}
	return o.Role
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetReadStatus() RecipientUpdateDocumentRecipientsReadStatus {
	if o == nil {
		return RecipientUpdateDocumentRecipientsReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetSigningStatus() RecipientUpdateDocumentRecipientsSigningStatus {
	if o == nil {
		return RecipientUpdateDocumentRecipientsSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetSendStatus() RecipientUpdateDocumentRecipientsSendStatus {
	if o == nil {
		return RecipientUpdateDocumentRecipientsSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetAuthOptions() *RecipientUpdateDocumentRecipientsAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

func (o *RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients) GetFields() []RecipientUpdateDocumentRecipientsFields {
	if o == nil {
		return []RecipientUpdateDocumentRecipientsFields{}
	}
	return o.Fields
}

// RecipientUpdateDocumentRecipientsResponseBody - Successful response
type RecipientUpdateDocumentRecipientsResponseBody struct {
	Recipients []RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients `json:"recipients"`
}

func (o *RecipientUpdateDocumentRecipientsResponseBody) GetRecipients() []RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients {
	if o == nil {
		return []RecipientUpdateDocumentRecipientsDocumentsRecipientsRecipients{}
	}
	return o.Recipients
}

type RecipientUpdateDocumentRecipientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientUpdateDocumentRecipientsResponseBody
}

func (o *RecipientUpdateDocumentRecipientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientUpdateDocumentRecipientsResponse) GetObject() *RecipientUpdateDocumentRecipientsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
