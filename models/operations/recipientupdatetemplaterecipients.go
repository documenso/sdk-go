// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientUpdateTemplateRecipientsRole string

const (
	RecipientUpdateTemplateRecipientsRoleCc       RecipientUpdateTemplateRecipientsRole = "CC"
	RecipientUpdateTemplateRecipientsRoleSigner   RecipientUpdateTemplateRecipientsRole = "SIGNER"
	RecipientUpdateTemplateRecipientsRoleViewer   RecipientUpdateTemplateRecipientsRole = "VIEWER"
	RecipientUpdateTemplateRecipientsRoleApprover RecipientUpdateTemplateRecipientsRole = "APPROVER"
)

func (e RecipientUpdateTemplateRecipientsRole) ToPointer() *RecipientUpdateTemplateRecipientsRole {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientUpdateTemplateRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsRole: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientUpdateTemplateRecipientsAccessAuth string

const (
	RecipientUpdateTemplateRecipientsAccessAuthAccount RecipientUpdateTemplateRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientUpdateTemplateRecipientsAccessAuth) ToPointer() *RecipientUpdateTemplateRecipientsAccessAuth {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateTemplateRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsAccessAuth: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientUpdateTemplateRecipientsActionAuth string

const (
	RecipientUpdateTemplateRecipientsActionAuthAccount       RecipientUpdateTemplateRecipientsActionAuth = "ACCOUNT"
	RecipientUpdateTemplateRecipientsActionAuthPasskey       RecipientUpdateTemplateRecipientsActionAuth = "PASSKEY"
	RecipientUpdateTemplateRecipientsActionAuthTwoFactorAuth RecipientUpdateTemplateRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientUpdateTemplateRecipientsActionAuthExplicitNone  RecipientUpdateTemplateRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientUpdateTemplateRecipientsActionAuth) ToPointer() *RecipientUpdateTemplateRecipientsActionAuth {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateTemplateRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsActionAuth: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsRecipients struct {
	// The ID of the recipient to update.
	ID           float64                                `json:"id"`
	Email        *string                                `json:"email,omitempty"`
	Name         *string                                `json:"name,omitempty"`
	Role         *RecipientUpdateTemplateRecipientsRole `json:"role,omitempty"`
	SigningOrder *float64                               `json:"signingOrder,omitempty"`
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateTemplateRecipientsAccessAuth `json:"accessAuth,omitempty"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateTemplateRecipientsActionAuth `json:"actionAuth,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetRole() *RecipientUpdateTemplateRecipientsRole {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetAccessAuth() *RecipientUpdateTemplateRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateTemplateRecipientsRecipients) GetActionAuth() *RecipientUpdateTemplateRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateTemplateRecipientsRequestBody struct {
	TemplateID float64                                       `json:"templateId"`
	Recipients []RecipientUpdateTemplateRecipientsRecipients `json:"recipients"`
}

func (o *RecipientUpdateTemplateRecipientsRequestBody) GetTemplateID() float64 {
	if o == nil {
		return 0.0
	}
	return o.TemplateID
}

func (o *RecipientUpdateTemplateRecipientsRequestBody) GetRecipients() []RecipientUpdateTemplateRecipientsRecipients {
	if o == nil {
		return []RecipientUpdateTemplateRecipientsRecipients{}
	}
	return o.Recipients
}

type RecipientUpdateTemplateRecipientsTemplatesRecipientsRole string

const (
	RecipientUpdateTemplateRecipientsTemplatesRecipientsRoleCc       RecipientUpdateTemplateRecipientsTemplatesRecipientsRole = "CC"
	RecipientUpdateTemplateRecipientsTemplatesRecipientsRoleSigner   RecipientUpdateTemplateRecipientsTemplatesRecipientsRole = "SIGNER"
	RecipientUpdateTemplateRecipientsTemplatesRecipientsRoleViewer   RecipientUpdateTemplateRecipientsTemplatesRecipientsRole = "VIEWER"
	RecipientUpdateTemplateRecipientsTemplatesRecipientsRoleApprover RecipientUpdateTemplateRecipientsTemplatesRecipientsRole = "APPROVER"
)

func (e RecipientUpdateTemplateRecipientsTemplatesRecipientsRole) ToPointer() *RecipientUpdateTemplateRecipientsTemplatesRecipientsRole {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTemplatesRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientUpdateTemplateRecipientsTemplatesRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTemplatesRecipientsRole: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsReadStatus string

const (
	RecipientUpdateTemplateRecipientsReadStatusNotOpened RecipientUpdateTemplateRecipientsReadStatus = "NOT_OPENED"
	RecipientUpdateTemplateRecipientsReadStatusOpened    RecipientUpdateTemplateRecipientsReadStatus = "OPENED"
)

func (e RecipientUpdateTemplateRecipientsReadStatus) ToPointer() *RecipientUpdateTemplateRecipientsReadStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientUpdateTemplateRecipientsReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsReadStatus: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsSigningStatus string

const (
	RecipientUpdateTemplateRecipientsSigningStatusNotSigned RecipientUpdateTemplateRecipientsSigningStatus = "NOT_SIGNED"
	RecipientUpdateTemplateRecipientsSigningStatusSigned    RecipientUpdateTemplateRecipientsSigningStatus = "SIGNED"
	RecipientUpdateTemplateRecipientsSigningStatusRejected  RecipientUpdateTemplateRecipientsSigningStatus = "REJECTED"
)

func (e RecipientUpdateTemplateRecipientsSigningStatus) ToPointer() *RecipientUpdateTemplateRecipientsSigningStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientUpdateTemplateRecipientsSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsSigningStatus: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsSendStatus string

const (
	RecipientUpdateTemplateRecipientsSendStatusNotSent RecipientUpdateTemplateRecipientsSendStatus = "NOT_SENT"
	RecipientUpdateTemplateRecipientsSendStatusSent    RecipientUpdateTemplateRecipientsSendStatus = "SENT"
)

func (e RecipientUpdateTemplateRecipientsSendStatus) ToPointer() *RecipientUpdateTemplateRecipientsSendStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientUpdateTemplateRecipientsSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsSendStatus: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth string

const (
	RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuthAccount RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth) ToPointer() *RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth: %v", v)
	}
}

// RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth string

const (
	RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuthAccount       RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth = "ACCOUNT"
	RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuthPasskey       RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth = "PASSKEY"
	RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuthTwoFactorAuth RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuthExplicitNone  RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth) ToPointer() *RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth `json:"actionAuth"`
}

func (o *RecipientUpdateTemplateRecipientsAuthOptions) GetAccessAuth() *RecipientUpdateTemplateRecipientsTemplatesRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateTemplateRecipientsAuthOptions) GetActionAuth() *RecipientUpdateTemplateRecipientsTemplatesRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateTemplateRecipientsType string

const (
	RecipientUpdateTemplateRecipientsTypeSignature     RecipientUpdateTemplateRecipientsType = "SIGNATURE"
	RecipientUpdateTemplateRecipientsTypeFreeSignature RecipientUpdateTemplateRecipientsType = "FREE_SIGNATURE"
	RecipientUpdateTemplateRecipientsTypeInitials      RecipientUpdateTemplateRecipientsType = "INITIALS"
	RecipientUpdateTemplateRecipientsTypeName          RecipientUpdateTemplateRecipientsType = "NAME"
	RecipientUpdateTemplateRecipientsTypeEmail         RecipientUpdateTemplateRecipientsType = "EMAIL"
	RecipientUpdateTemplateRecipientsTypeDate          RecipientUpdateTemplateRecipientsType = "DATE"
	RecipientUpdateTemplateRecipientsTypeText          RecipientUpdateTemplateRecipientsType = "TEXT"
	RecipientUpdateTemplateRecipientsTypeNumber        RecipientUpdateTemplateRecipientsType = "NUMBER"
	RecipientUpdateTemplateRecipientsTypeRadio         RecipientUpdateTemplateRecipientsType = "RADIO"
	RecipientUpdateTemplateRecipientsTypeCheckbox      RecipientUpdateTemplateRecipientsType = "CHECKBOX"
	RecipientUpdateTemplateRecipientsTypeDropdown      RecipientUpdateTemplateRecipientsType = "DROPDOWN"
)

func (e RecipientUpdateTemplateRecipientsType) ToPointer() *RecipientUpdateTemplateRecipientsType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientUpdateTemplateRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9TypeDropdown RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type = "dropdown"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues struct {
	Value string `json:"value"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateTemplateRecipientsFieldMeta9 struct {
	Label        *string                                                                                                                  `json:"label,omitempty"`
	Placeholder  *string                                                                                                                  `json:"placeholder,omitempty"`
	Required     *bool                                                                                                                    `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                                    `json:"readOnly,omitempty"`
	Type         RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type `json:"type"`
	Values       []RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues                                            `json:"values,omitempty"`
	DefaultValue *string                                                                                                                  `json:"defaultValue,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFields9Type("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetValues() []RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta9) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsTypeCheckbox RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType = "checkbox"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateTemplateRecipientsFieldMeta8 struct {
	Label            *string                                                                                                                 `json:"label,omitempty"`
	Placeholder      *string                                                                                                                 `json:"placeholder,omitempty"`
	Required         *bool                                                                                                                   `json:"required,omitempty"`
	ReadOnly         *bool                                                                                                                   `json:"readOnly,omitempty"`
	Type             RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType `json:"type"`
	Values           []RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues                                                   `json:"values,omitempty"`
	ValidationRule   *string                                                                                                                 `json:"validationRule,omitempty"`
	ValidationLength *float64                                                                                                                `json:"validationLength,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsFieldsType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetValues() []RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetValidationRule() *string {
	if o == nil {
		return nil
	}
	return o.ValidationRule
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta8) GetValidationLength() *float64 {
	if o == nil {
		return nil
	}
	return o.ValidationLength
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsTypeRadio RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType = "radio"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMetaValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateTemplateRecipientsFieldMetaValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateTemplateRecipientsFieldMeta7 struct {
	Label       *string                                                                                                           `json:"label,omitempty"`
	Placeholder *string                                                                                                           `json:"placeholder,omitempty"`
	Required    *bool                                                                                                             `json:"required,omitempty"`
	ReadOnly    *bool                                                                                                             `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType `json:"type"`
	Values      []RecipientUpdateTemplateRecipientsFieldMetaValues                                                                `json:"values,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta7) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta7) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta7) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta7) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta7) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta7) GetValues() []RecipientUpdateTemplateRecipientsFieldMetaValues {
	if o == nil {
		return nil
	}
	return o.Values
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyTypeNumber RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType = "number"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMeta6 struct {
	Label        *string                                                                                                 `json:"label,omitempty"`
	Placeholder  *string                                                                                                 `json:"placeholder,omitempty"`
	Required     *bool                                                                                                   `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                   `json:"readOnly,omitempty"`
	Type         RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType `json:"type"`
	NumberFormat *string                                                                                                 `json:"numberFormat,omitempty"`
	Value        *string                                                                                                 `json:"value,omitempty"`
	MinValue     *float64                                                                                                `json:"minValue,omitempty"`
	MaxValue     *float64                                                                                                `json:"maxValue,omitempty"`
	FontSize     *float64                                                                                                `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONResponseBodyType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetNumberFormat() *string {
	if o == nil {
		return nil
	}
	return o.NumberFormat
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetMinValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MinValue
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetMaxValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxValue
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta6) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONTypeText RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType = "text"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMeta5 struct {
	Label          *string                                                                                     `json:"label,omitempty"`
	Placeholder    *string                                                                                     `json:"placeholder,omitempty"`
	Required       *bool                                                                                       `json:"required,omitempty"`
	ReadOnly       *bool                                                                                       `json:"readOnly,omitempty"`
	Type           RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType `json:"type"`
	Text           *string                                                                                     `json:"text,omitempty"`
	CharacterLimit *float64                                                                                    `json:"characterLimit,omitempty"`
	FontSize       *float64                                                                                    `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200ApplicationJSONType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetCharacterLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CharacterLimit
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta5) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200TypeDate RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type = "date"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMeta4 struct {
	Label       *string                                                                      `json:"label,omitempty"`
	Placeholder *string                                                                      `json:"placeholder,omitempty"`
	Required    *bool                                                                        `json:"required,omitempty"`
	ReadOnly    *bool                                                                        `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type `json:"type"`
	FontSize    *float64                                                                     `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta4) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta4) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta4) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta4) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta4) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponse200Type("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta4) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseTypeEmail RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType = "email"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMeta3 struct {
	Label       *string                                                                   `json:"label,omitempty"`
	Placeholder *string                                                                   `json:"placeholder,omitempty"`
	Required    *bool                                                                     `json:"required,omitempty"`
	ReadOnly    *bool                                                                     `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType `json:"type"`
	FontSize    *float64                                                                  `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta3) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta3) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta3) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta3) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta3) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsResponseType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta3) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsTypeName RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType = "name"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMeta2 struct {
	Label       *string                                                           `json:"label,omitempty"`
	Placeholder *string                                                           `json:"placeholder,omitempty"`
	Required    *bool                                                             `json:"required,omitempty"`
	ReadOnly    *bool                                                             `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType `json:"type"`
	FontSize    *float64                                                          `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta2) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta2) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta2) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta2) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta2) GetType() RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaTemplatesRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta2) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateTemplateRecipientsFieldMetaType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaTypeInitials RecipientUpdateTemplateRecipientsFieldMetaType = "initials"
)

func (e RecipientUpdateTemplateRecipientsFieldMetaType) ToPointer() *RecipientUpdateTemplateRecipientsFieldMetaType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientsFieldMetaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientUpdateTemplateRecipientsFieldMetaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientsFieldMetaType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientsFieldMeta1 struct {
	Label       *string                                        `json:"label,omitempty"`
	Placeholder *string                                        `json:"placeholder,omitempty"`
	Required    *bool                                          `json:"required,omitempty"`
	ReadOnly    *bool                                          `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientsFieldMetaType `json:"type"`
	FontSize    *float64                                       `json:"fontSize,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta1) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta1) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta1) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta1) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta1) GetType() RecipientUpdateTemplateRecipientsFieldMetaType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsFieldMetaType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFieldMeta1) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientUpdateTemplateRecipientsFieldMetaUnionType string

const (
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta1 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_1"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta2 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_2"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta3 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_3"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta4 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_4"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta5 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_5"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta6 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_6"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta7 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_7"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta8 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_8"
	RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta9 RecipientUpdateTemplateRecipientsFieldMetaUnionType = "recipient-updateTemplateRecipients_fieldMeta_9"
)

type RecipientUpdateTemplateRecipientsFieldMeta struct {
	RecipientUpdateTemplateRecipientsFieldMeta1 *RecipientUpdateTemplateRecipientsFieldMeta1 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta2 *RecipientUpdateTemplateRecipientsFieldMeta2 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta3 *RecipientUpdateTemplateRecipientsFieldMeta3 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta4 *RecipientUpdateTemplateRecipientsFieldMeta4 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta5 *RecipientUpdateTemplateRecipientsFieldMeta5 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta6 *RecipientUpdateTemplateRecipientsFieldMeta6 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta7 *RecipientUpdateTemplateRecipientsFieldMeta7 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta8 *RecipientUpdateTemplateRecipientsFieldMeta8 `queryParam:"inline"`
	RecipientUpdateTemplateRecipientsFieldMeta9 *RecipientUpdateTemplateRecipientsFieldMeta9 `queryParam:"inline"`

	Type RecipientUpdateTemplateRecipientsFieldMetaUnionType
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta1(recipientUpdateTemplateRecipientsFieldMeta1 RecipientUpdateTemplateRecipientsFieldMeta1) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta1

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta1: &recipientUpdateTemplateRecipientsFieldMeta1,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta2(recipientUpdateTemplateRecipientsFieldMeta2 RecipientUpdateTemplateRecipientsFieldMeta2) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta2

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta2: &recipientUpdateTemplateRecipientsFieldMeta2,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta3(recipientUpdateTemplateRecipientsFieldMeta3 RecipientUpdateTemplateRecipientsFieldMeta3) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta3

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta3: &recipientUpdateTemplateRecipientsFieldMeta3,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta4(recipientUpdateTemplateRecipientsFieldMeta4 RecipientUpdateTemplateRecipientsFieldMeta4) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta4

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta4: &recipientUpdateTemplateRecipientsFieldMeta4,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta5(recipientUpdateTemplateRecipientsFieldMeta5 RecipientUpdateTemplateRecipientsFieldMeta5) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta5

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta5: &recipientUpdateTemplateRecipientsFieldMeta5,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta6(recipientUpdateTemplateRecipientsFieldMeta6 RecipientUpdateTemplateRecipientsFieldMeta6) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta6

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta6: &recipientUpdateTemplateRecipientsFieldMeta6,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta7(recipientUpdateTemplateRecipientsFieldMeta7 RecipientUpdateTemplateRecipientsFieldMeta7) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta7

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta7: &recipientUpdateTemplateRecipientsFieldMeta7,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta8(recipientUpdateTemplateRecipientsFieldMeta8 RecipientUpdateTemplateRecipientsFieldMeta8) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta8

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta8: &recipientUpdateTemplateRecipientsFieldMeta8,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientsFieldMetaRecipientUpdateTemplateRecipientsFieldMeta9(recipientUpdateTemplateRecipientsFieldMeta9 RecipientUpdateTemplateRecipientsFieldMeta9) RecipientUpdateTemplateRecipientsFieldMeta {
	typ := RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta9

	return RecipientUpdateTemplateRecipientsFieldMeta{
		RecipientUpdateTemplateRecipientsFieldMeta9: &recipientUpdateTemplateRecipientsFieldMeta9,
		Type: typ,
	}
}

func (u *RecipientUpdateTemplateRecipientsFieldMeta) UnmarshalJSON(data []byte) error {

	var recipientUpdateTemplateRecipientsFieldMeta1 RecipientUpdateTemplateRecipientsFieldMeta1 = RecipientUpdateTemplateRecipientsFieldMeta1{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta1, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta1 = &recipientUpdateTemplateRecipientsFieldMeta1
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta1
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta2 RecipientUpdateTemplateRecipientsFieldMeta2 = RecipientUpdateTemplateRecipientsFieldMeta2{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta2, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta2 = &recipientUpdateTemplateRecipientsFieldMeta2
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta2
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta3 RecipientUpdateTemplateRecipientsFieldMeta3 = RecipientUpdateTemplateRecipientsFieldMeta3{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta3, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta3 = &recipientUpdateTemplateRecipientsFieldMeta3
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta3
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta4 RecipientUpdateTemplateRecipientsFieldMeta4 = RecipientUpdateTemplateRecipientsFieldMeta4{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta4, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta4 = &recipientUpdateTemplateRecipientsFieldMeta4
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta4
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta7 RecipientUpdateTemplateRecipientsFieldMeta7 = RecipientUpdateTemplateRecipientsFieldMeta7{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta7, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta7 = &recipientUpdateTemplateRecipientsFieldMeta7
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta7
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta9 RecipientUpdateTemplateRecipientsFieldMeta9 = RecipientUpdateTemplateRecipientsFieldMeta9{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta9, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta9 = &recipientUpdateTemplateRecipientsFieldMeta9
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta9
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta5 RecipientUpdateTemplateRecipientsFieldMeta5 = RecipientUpdateTemplateRecipientsFieldMeta5{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta5, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta5 = &recipientUpdateTemplateRecipientsFieldMeta5
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta5
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta8 RecipientUpdateTemplateRecipientsFieldMeta8 = RecipientUpdateTemplateRecipientsFieldMeta8{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta8, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta8 = &recipientUpdateTemplateRecipientsFieldMeta8
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta8
		return nil
	}

	var recipientUpdateTemplateRecipientsFieldMeta6 RecipientUpdateTemplateRecipientsFieldMeta6 = RecipientUpdateTemplateRecipientsFieldMeta6{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientsFieldMeta6, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientsFieldMeta6 = &recipientUpdateTemplateRecipientsFieldMeta6
		u.Type = RecipientUpdateTemplateRecipientsFieldMetaUnionTypeRecipientUpdateTemplateRecipientsFieldMeta6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientUpdateTemplateRecipientsFieldMeta", string(data))
}

func (u RecipientUpdateTemplateRecipientsFieldMeta) MarshalJSON() ([]byte, error) {
	if u.RecipientUpdateTemplateRecipientsFieldMeta1 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta1, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta2 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta2, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta3 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta3, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta4 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta4, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta5 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta5, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta6 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta6, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta7 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta7, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta8 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta8, "", true)
	}

	if u.RecipientUpdateTemplateRecipientsFieldMeta9 != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientsFieldMeta9, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientUpdateTemplateRecipientsFieldMeta: all fields are null")
}

type RecipientUpdateTemplateRecipientsFields struct {
	Type        RecipientUpdateTemplateRecipientsType `json:"type"`
	ID          int64                                 `json:"id"`
	SecondaryID string                                `json:"secondaryId"`
	DocumentID  *int64                                `json:"documentId"`
	TemplateID  *int64                                `json:"templateId"`
	RecipientID int64                                 `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                     `json:"page"`
	PositionX  any                                         `json:"positionX,omitempty"`
	PositionY  any                                         `json:"positionY,omitempty"`
	Width      any                                         `json:"width,omitempty"`
	Height     any                                         `json:"height,omitempty"`
	CustomText string                                      `json:"customText"`
	Inserted   bool                                        `json:"inserted"`
	FieldMeta  *RecipientUpdateTemplateRecipientsFieldMeta `json:"fieldMeta"`
}

func (o *RecipientUpdateTemplateRecipientsFields) GetType() RecipientUpdateTemplateRecipientsType {
	if o == nil {
		return RecipientUpdateTemplateRecipientsType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientsFields) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientsFields) GetSecondaryID() string {
	if o == nil {
		return ""
	}
	return o.SecondaryID
}

func (o *RecipientUpdateTemplateRecipientsFields) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateTemplateRecipientsFields) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateTemplateRecipientsFields) GetRecipientID() int64 {
	if o == nil {
		return 0
	}
	return o.RecipientID
}

func (o *RecipientUpdateTemplateRecipientsFields) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *RecipientUpdateTemplateRecipientsFields) GetPositionX() any {
	if o == nil {
		return nil
	}
	return o.PositionX
}

func (o *RecipientUpdateTemplateRecipientsFields) GetPositionY() any {
	if o == nil {
		return nil
	}
	return o.PositionY
}

func (o *RecipientUpdateTemplateRecipientsFields) GetWidth() any {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *RecipientUpdateTemplateRecipientsFields) GetHeight() any {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *RecipientUpdateTemplateRecipientsFields) GetCustomText() string {
	if o == nil {
		return ""
	}
	return o.CustomText
}

func (o *RecipientUpdateTemplateRecipientsFields) GetInserted() bool {
	if o == nil {
		return false
	}
	return o.Inserted
}

func (o *RecipientUpdateTemplateRecipientsFields) GetFieldMeta() *RecipientUpdateTemplateRecipientsFieldMeta {
	if o == nil {
		return nil
	}
	return o.FieldMeta
}

type RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients struct {
	Role              RecipientUpdateTemplateRecipientsTemplatesRecipientsRole `json:"role"`
	ReadStatus        RecipientUpdateTemplateRecipientsReadStatus              `json:"readStatus"`
	SigningStatus     RecipientUpdateTemplateRecipientsSigningStatus           `json:"signingStatus"`
	SendStatus        RecipientUpdateTemplateRecipientsSendStatus              `json:"sendStatus"`
	ID                int64                                                    `json:"id"`
	DocumentID        *int64                                                   `json:"documentId"`
	TemplateID        *int64                                                   `json:"templateId"`
	Email             string                                                   `json:"email"`
	Name              string                                                   `json:"name"`
	Token             string                                                   `json:"token"`
	DocumentDeletedAt *string                                                  `json:"documentDeletedAt"`
	Expired           *string                                                  `json:"expired"`
	SignedAt          *string                                                  `json:"signedAt"`
	AuthOptions       *RecipientUpdateTemplateRecipientsAuthOptions            `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                                  `json:"signingOrder"`
	RejectionReason *string                                   `json:"rejectionReason"`
	Fields          []RecipientUpdateTemplateRecipientsFields `json:"fields"`
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetRole() RecipientUpdateTemplateRecipientsTemplatesRecipientsRole {
	if o == nil {
		return RecipientUpdateTemplateRecipientsTemplatesRecipientsRole("")
	}
	return o.Role
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetReadStatus() RecipientUpdateTemplateRecipientsReadStatus {
	if o == nil {
		return RecipientUpdateTemplateRecipientsReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetSigningStatus() RecipientUpdateTemplateRecipientsSigningStatus {
	if o == nil {
		return RecipientUpdateTemplateRecipientsSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetSendStatus() RecipientUpdateTemplateRecipientsSendStatus {
	if o == nil {
		return RecipientUpdateTemplateRecipientsSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetAuthOptions() *RecipientUpdateTemplateRecipientsAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

func (o *RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients) GetFields() []RecipientUpdateTemplateRecipientsFields {
	if o == nil {
		return []RecipientUpdateTemplateRecipientsFields{}
	}
	return o.Fields
}

// RecipientUpdateTemplateRecipientsResponseBody - Successful response
type RecipientUpdateTemplateRecipientsResponseBody struct {
	Recipients []RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients `json:"recipients"`
}

func (o *RecipientUpdateTemplateRecipientsResponseBody) GetRecipients() []RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients {
	if o == nil {
		return []RecipientUpdateTemplateRecipientsTemplatesRecipientsRecipients{}
	}
	return o.Recipients
}

type RecipientUpdateTemplateRecipientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientUpdateTemplateRecipientsResponseBody
}

func (o *RecipientUpdateTemplateRecipientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientUpdateTemplateRecipientsResponse) GetObject() *RecipientUpdateTemplateRecipientsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
