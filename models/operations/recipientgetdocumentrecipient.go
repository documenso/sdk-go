// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientGetDocumentRecipientRequest struct {
	RecipientID float64 `pathParam:"style=simple,explode=false,name=recipientId"`
}

func (o *RecipientGetDocumentRecipientRequest) GetRecipientID() float64 {
	if o == nil {
		return 0.0
	}
	return o.RecipientID
}

type RecipientGetDocumentRecipientRole string

const (
	RecipientGetDocumentRecipientRoleCc       RecipientGetDocumentRecipientRole = "CC"
	RecipientGetDocumentRecipientRoleSigner   RecipientGetDocumentRecipientRole = "SIGNER"
	RecipientGetDocumentRecipientRoleViewer   RecipientGetDocumentRecipientRole = "VIEWER"
	RecipientGetDocumentRecipientRoleApprover RecipientGetDocumentRecipientRole = "APPROVER"
)

func (e RecipientGetDocumentRecipientRole) ToPointer() *RecipientGetDocumentRecipientRole {
	return &e
}
func (e *RecipientGetDocumentRecipientRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientGetDocumentRecipientRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientRole: %v", v)
	}
}

type ReadStatus string

const (
	ReadStatusNotOpened ReadStatus = "NOT_OPENED"
	ReadStatusOpened    ReadStatus = "OPENED"
)

func (e ReadStatus) ToPointer() *ReadStatus {
	return &e
}
func (e *ReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = ReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReadStatus: %v", v)
	}
}

type SigningStatus string

const (
	SigningStatusNotSigned SigningStatus = "NOT_SIGNED"
	SigningStatusSigned    SigningStatus = "SIGNED"
	SigningStatusRejected  SigningStatus = "REJECTED"
)

func (e SigningStatus) ToPointer() *SigningStatus {
	return &e
}
func (e *SigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = SigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SigningStatus: %v", v)
	}
}

type SendStatus string

const (
	SendStatusNotSent SendStatus = "NOT_SENT"
	SendStatusSent    SendStatus = "SENT"
)

func (e SendStatus) ToPointer() *SendStatus {
	return &e
}
func (e *SendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = SendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SendStatus: %v", v)
	}
}

// RecipientGetDocumentRecipientAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientGetDocumentRecipientAccessAuth string

const (
	RecipientGetDocumentRecipientAccessAuthAccount RecipientGetDocumentRecipientAccessAuth = "ACCOUNT"
)

func (e RecipientGetDocumentRecipientAccessAuth) ToPointer() *RecipientGetDocumentRecipientAccessAuth {
	return &e
}
func (e *RecipientGetDocumentRecipientAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientGetDocumentRecipientAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientAccessAuth: %v", v)
	}
}

// RecipientGetDocumentRecipientActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientGetDocumentRecipientActionAuth string

const (
	RecipientGetDocumentRecipientActionAuthAccount       RecipientGetDocumentRecipientActionAuth = "ACCOUNT"
	RecipientGetDocumentRecipientActionAuthPasskey       RecipientGetDocumentRecipientActionAuth = "PASSKEY"
	RecipientGetDocumentRecipientActionAuthTwoFactorAuth RecipientGetDocumentRecipientActionAuth = "TWO_FACTOR_AUTH"
	RecipientGetDocumentRecipientActionAuthExplicitNone  RecipientGetDocumentRecipientActionAuth = "EXPLICIT_NONE"
)

func (e RecipientGetDocumentRecipientActionAuth) ToPointer() *RecipientGetDocumentRecipientActionAuth {
	return &e
}
func (e *RecipientGetDocumentRecipientActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientGetDocumentRecipientActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientActionAuth: %v", v)
	}
}

type RecipientGetDocumentRecipientAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientGetDocumentRecipientAccessAuth `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientGetDocumentRecipientActionAuth `json:"actionAuth"`
}

func (o *RecipientGetDocumentRecipientAuthOptions) GetAccessAuth() *RecipientGetDocumentRecipientAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientGetDocumentRecipientAuthOptions) GetActionAuth() *RecipientGetDocumentRecipientActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientGetDocumentRecipientType string

const (
	RecipientGetDocumentRecipientTypeSignature     RecipientGetDocumentRecipientType = "SIGNATURE"
	RecipientGetDocumentRecipientTypeFreeSignature RecipientGetDocumentRecipientType = "FREE_SIGNATURE"
	RecipientGetDocumentRecipientTypeInitials      RecipientGetDocumentRecipientType = "INITIALS"
	RecipientGetDocumentRecipientTypeName          RecipientGetDocumentRecipientType = "NAME"
	RecipientGetDocumentRecipientTypeEmail         RecipientGetDocumentRecipientType = "EMAIL"
	RecipientGetDocumentRecipientTypeDate          RecipientGetDocumentRecipientType = "DATE"
	RecipientGetDocumentRecipientTypeText          RecipientGetDocumentRecipientType = "TEXT"
	RecipientGetDocumentRecipientTypeNumber        RecipientGetDocumentRecipientType = "NUMBER"
	RecipientGetDocumentRecipientTypeRadio         RecipientGetDocumentRecipientType = "RADIO"
	RecipientGetDocumentRecipientTypeCheckbox      RecipientGetDocumentRecipientType = "CHECKBOX"
	RecipientGetDocumentRecipientTypeDropdown      RecipientGetDocumentRecipientType = "DROPDOWN"
)

func (e RecipientGetDocumentRecipientType) ToPointer() *RecipientGetDocumentRecipientType {
	return &e
}
func (e *RecipientGetDocumentRecipientType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientGetDocumentRecipientType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9TypeDropdown RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type = "dropdown"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues struct {
	Value string `json:"value"`
}

func (o *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientGetDocumentRecipientFieldMeta9 struct {
	Label        *string                                                                                                    `json:"label,omitempty"`
	Placeholder  *string                                                                                                    `json:"placeholder,omitempty"`
	Required     *bool                                                                                                      `json:"required,omitempty"`
	ReadOnly     *bool                                                                                                      `json:"readOnly,omitempty"`
	Type         RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type `json:"type"`
	Values       []RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues                                  `json:"values,omitempty"`
	DefaultValue *string                                                                                                    `json:"defaultValue,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields9Type("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetValues() []RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientGetDocumentRecipientFieldMeta9) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8TypeCheckbox RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type = "checkbox"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientGetDocumentRecipientFieldMeta8 struct {
	Label            *string                                                                                                    `json:"label,omitempty"`
	Placeholder      *string                                                                                                    `json:"placeholder,omitempty"`
	Required         *bool                                                                                                      `json:"required,omitempty"`
	ReadOnly         *bool                                                                                                      `json:"readOnly,omitempty"`
	Type             RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type `json:"type"`
	Values           []RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues                                          `json:"values,omitempty"`
	ValidationRule   *string                                                                                                    `json:"validationRule,omitempty"`
	ValidationLength *float64                                                                                                   `json:"validationLength,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFields8Type("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetValues() []RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsValues {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetValidationRule() *string {
	if o == nil {
		return nil
	}
	return o.ValidationRule
}

func (o *RecipientGetDocumentRecipientFieldMeta8) GetValidationLength() *float64 {
	if o == nil {
		return nil
	}
	return o.ValidationLength
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsTypeRadio RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType = "radio"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMetaValues struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientGetDocumentRecipientFieldMetaValues) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientFieldMetaValues) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientGetDocumentRecipientFieldMetaValues) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientGetDocumentRecipientFieldMeta7 struct {
	Label       *string                                                                                                   `json:"label,omitempty"`
	Placeholder *string                                                                                                   `json:"placeholder,omitempty"`
	Required    *bool                                                                                                     `json:"required,omitempty"`
	ReadOnly    *bool                                                                                                     `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType `json:"type"`
	Values      []RecipientGetDocumentRecipientFieldMetaValues                                                            `json:"values,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta7) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta7) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta7) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta7) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta7) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyFieldsType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta7) GetValues() []RecipientGetDocumentRecipientFieldMetaValues {
	if o == nil {
		return nil
	}
	return o.Values
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyTypeNumber RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType = "number"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMeta6 struct {
	Label        *string                                                                                             `json:"label,omitempty"`
	Placeholder  *string                                                                                             `json:"placeholder,omitempty"`
	Required     *bool                                                                                               `json:"required,omitempty"`
	ReadOnly     *bool                                                                                               `json:"readOnly,omitempty"`
	Type         RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType `json:"type"`
	NumberFormat *string                                                                                             `json:"numberFormat,omitempty"`
	Value        *string                                                                                             `json:"value,omitempty"`
	MinValue     *float64                                                                                            `json:"minValue,omitempty"`
	MaxValue     *float64                                                                                            `json:"maxValue,omitempty"`
	FontSize     *float64                                                                                            `json:"fontSize,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONResponseBodyType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetNumberFormat() *string {
	if o == nil {
		return nil
	}
	return o.NumberFormat
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetMinValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MinValue
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetMaxValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxValue
}

func (o *RecipientGetDocumentRecipientFieldMeta6) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONTypeText RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType = "text"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMeta5 struct {
	Label          *string                                                                                 `json:"label,omitempty"`
	Placeholder    *string                                                                                 `json:"placeholder,omitempty"`
	Required       *bool                                                                                   `json:"required,omitempty"`
	ReadOnly       *bool                                                                                   `json:"readOnly,omitempty"`
	Type           RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType `json:"type"`
	Text           *string                                                                                 `json:"text,omitempty"`
	CharacterLimit *float64                                                                                `json:"characterLimit,omitempty"`
	FontSize       *float64                                                                                `json:"fontSize,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200ApplicationJSONType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetCharacterLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CharacterLimit
}

func (o *RecipientGetDocumentRecipientFieldMeta5) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200TypeDate RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type = "date"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMeta4 struct {
	Label       *string                                                                  `json:"label,omitempty"`
	Placeholder *string                                                                  `json:"placeholder,omitempty"`
	Required    *bool                                                                    `json:"required,omitempty"`
	ReadOnly    *bool                                                                    `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type `json:"type"`
	FontSize    *float64                                                                 `json:"fontSize,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta4) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta4) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta4) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta4) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta4) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponse200Type("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta4) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseTypeEmail RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType = "email"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMeta3 struct {
	Label       *string                                                               `json:"label,omitempty"`
	Placeholder *string                                                               `json:"placeholder,omitempty"`
	Required    *bool                                                                 `json:"required,omitempty"`
	ReadOnly    *bool                                                                 `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType `json:"type"`
	FontSize    *float64                                                              `json:"fontSize,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta3) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta3) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta3) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta3) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta3) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsResponseType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta3) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType string

const (
	RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsTypeName RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType = "name"
)

func (e RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType) ToPointer() *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMeta2 struct {
	Label       *string                                                       `json:"label,omitempty"`
	Placeholder *string                                                       `json:"placeholder,omitempty"`
	Required    *bool                                                         `json:"required,omitempty"`
	ReadOnly    *bool                                                         `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType `json:"type"`
	FontSize    *float64                                                      `json:"fontSize,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta2) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta2) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta2) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta2) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta2) GetType() RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaDocumentsRecipientsType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta2) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientGetDocumentRecipientFieldMetaType string

const (
	RecipientGetDocumentRecipientFieldMetaTypeInitials RecipientGetDocumentRecipientFieldMetaType = "initials"
)

func (e RecipientGetDocumentRecipientFieldMetaType) ToPointer() *RecipientGetDocumentRecipientFieldMetaType {
	return &e
}
func (e *RecipientGetDocumentRecipientFieldMetaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientGetDocumentRecipientFieldMetaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientGetDocumentRecipientFieldMetaType: %v", v)
	}
}

type RecipientGetDocumentRecipientFieldMeta1 struct {
	Label       *string                                    `json:"label,omitempty"`
	Placeholder *string                                    `json:"placeholder,omitempty"`
	Required    *bool                                      `json:"required,omitempty"`
	ReadOnly    *bool                                      `json:"readOnly,omitempty"`
	Type        RecipientGetDocumentRecipientFieldMetaType `json:"type"`
	FontSize    *float64                                   `json:"fontSize,omitempty"`
}

func (o *RecipientGetDocumentRecipientFieldMeta1) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientGetDocumentRecipientFieldMeta1) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientGetDocumentRecipientFieldMeta1) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientGetDocumentRecipientFieldMeta1) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientGetDocumentRecipientFieldMeta1) GetType() RecipientGetDocumentRecipientFieldMetaType {
	if o == nil {
		return RecipientGetDocumentRecipientFieldMetaType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFieldMeta1) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

type RecipientGetDocumentRecipientFieldMetaUnionType string

const (
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta1 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_1"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta2 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_2"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta3 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_3"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta4 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_4"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta5 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_5"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta6 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_6"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta7 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_7"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta8 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_8"
	RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta9 RecipientGetDocumentRecipientFieldMetaUnionType = "recipient-getDocumentRecipient_fieldMeta_9"
)

type RecipientGetDocumentRecipientFieldMeta struct {
	RecipientGetDocumentRecipientFieldMeta1 *RecipientGetDocumentRecipientFieldMeta1 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta2 *RecipientGetDocumentRecipientFieldMeta2 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta3 *RecipientGetDocumentRecipientFieldMeta3 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta4 *RecipientGetDocumentRecipientFieldMeta4 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta5 *RecipientGetDocumentRecipientFieldMeta5 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta6 *RecipientGetDocumentRecipientFieldMeta6 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta7 *RecipientGetDocumentRecipientFieldMeta7 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta8 *RecipientGetDocumentRecipientFieldMeta8 `queryParam:"inline"`
	RecipientGetDocumentRecipientFieldMeta9 *RecipientGetDocumentRecipientFieldMeta9 `queryParam:"inline"`

	Type RecipientGetDocumentRecipientFieldMetaUnionType
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta1(recipientGetDocumentRecipientFieldMeta1 RecipientGetDocumentRecipientFieldMeta1) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta1

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta1: &recipientGetDocumentRecipientFieldMeta1,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta2(recipientGetDocumentRecipientFieldMeta2 RecipientGetDocumentRecipientFieldMeta2) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta2

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta2: &recipientGetDocumentRecipientFieldMeta2,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta3(recipientGetDocumentRecipientFieldMeta3 RecipientGetDocumentRecipientFieldMeta3) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta3

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta3: &recipientGetDocumentRecipientFieldMeta3,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta4(recipientGetDocumentRecipientFieldMeta4 RecipientGetDocumentRecipientFieldMeta4) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta4

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta4: &recipientGetDocumentRecipientFieldMeta4,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta5(recipientGetDocumentRecipientFieldMeta5 RecipientGetDocumentRecipientFieldMeta5) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta5

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta5: &recipientGetDocumentRecipientFieldMeta5,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta6(recipientGetDocumentRecipientFieldMeta6 RecipientGetDocumentRecipientFieldMeta6) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta6

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta6: &recipientGetDocumentRecipientFieldMeta6,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta7(recipientGetDocumentRecipientFieldMeta7 RecipientGetDocumentRecipientFieldMeta7) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta7

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta7: &recipientGetDocumentRecipientFieldMeta7,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta8(recipientGetDocumentRecipientFieldMeta8 RecipientGetDocumentRecipientFieldMeta8) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta8

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta8: &recipientGetDocumentRecipientFieldMeta8,
		Type:                                    typ,
	}
}

func CreateRecipientGetDocumentRecipientFieldMetaRecipientGetDocumentRecipientFieldMeta9(recipientGetDocumentRecipientFieldMeta9 RecipientGetDocumentRecipientFieldMeta9) RecipientGetDocumentRecipientFieldMeta {
	typ := RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta9

	return RecipientGetDocumentRecipientFieldMeta{
		RecipientGetDocumentRecipientFieldMeta9: &recipientGetDocumentRecipientFieldMeta9,
		Type:                                    typ,
	}
}

func (u *RecipientGetDocumentRecipientFieldMeta) UnmarshalJSON(data []byte) error {

	var recipientGetDocumentRecipientFieldMeta1 RecipientGetDocumentRecipientFieldMeta1 = RecipientGetDocumentRecipientFieldMeta1{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta1, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta1 = &recipientGetDocumentRecipientFieldMeta1
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta1
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta2 RecipientGetDocumentRecipientFieldMeta2 = RecipientGetDocumentRecipientFieldMeta2{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta2, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta2 = &recipientGetDocumentRecipientFieldMeta2
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta2
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta3 RecipientGetDocumentRecipientFieldMeta3 = RecipientGetDocumentRecipientFieldMeta3{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta3, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta3 = &recipientGetDocumentRecipientFieldMeta3
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta3
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta4 RecipientGetDocumentRecipientFieldMeta4 = RecipientGetDocumentRecipientFieldMeta4{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta4, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta4 = &recipientGetDocumentRecipientFieldMeta4
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta4
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta7 RecipientGetDocumentRecipientFieldMeta7 = RecipientGetDocumentRecipientFieldMeta7{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta7, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta7 = &recipientGetDocumentRecipientFieldMeta7
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta7
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta9 RecipientGetDocumentRecipientFieldMeta9 = RecipientGetDocumentRecipientFieldMeta9{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta9, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta9 = &recipientGetDocumentRecipientFieldMeta9
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta9
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta5 RecipientGetDocumentRecipientFieldMeta5 = RecipientGetDocumentRecipientFieldMeta5{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta5, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta5 = &recipientGetDocumentRecipientFieldMeta5
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta5
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta8 RecipientGetDocumentRecipientFieldMeta8 = RecipientGetDocumentRecipientFieldMeta8{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta8, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta8 = &recipientGetDocumentRecipientFieldMeta8
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta8
		return nil
	}

	var recipientGetDocumentRecipientFieldMeta6 RecipientGetDocumentRecipientFieldMeta6 = RecipientGetDocumentRecipientFieldMeta6{}
	if err := utils.UnmarshalJSON(data, &recipientGetDocumentRecipientFieldMeta6, "", true, true); err == nil {
		u.RecipientGetDocumentRecipientFieldMeta6 = &recipientGetDocumentRecipientFieldMeta6
		u.Type = RecipientGetDocumentRecipientFieldMetaUnionTypeRecipientGetDocumentRecipientFieldMeta6
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientGetDocumentRecipientFieldMeta", string(data))
}

func (u RecipientGetDocumentRecipientFieldMeta) MarshalJSON() ([]byte, error) {
	if u.RecipientGetDocumentRecipientFieldMeta1 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta1, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta2 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta2, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta3 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta3, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta4 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta4, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta5 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta5, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta6 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta6, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta7 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta7, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta8 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta8, "", true)
	}

	if u.RecipientGetDocumentRecipientFieldMeta9 != nil {
		return utils.MarshalJSON(u.RecipientGetDocumentRecipientFieldMeta9, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientGetDocumentRecipientFieldMeta: all fields are null")
}

type RecipientGetDocumentRecipientFields struct {
	Type        RecipientGetDocumentRecipientType `json:"type"`
	ID          int64                             `json:"id"`
	SecondaryID string                            `json:"secondaryId"`
	DocumentID  *int64                            `json:"documentId"`
	TemplateID  *int64                            `json:"templateId"`
	RecipientID int64                             `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                 `json:"page"`
	PositionX  any                                     `json:"positionX,omitempty"`
	PositionY  any                                     `json:"positionY,omitempty"`
	Width      any                                     `json:"width,omitempty"`
	Height     any                                     `json:"height,omitempty"`
	CustomText string                                  `json:"customText"`
	Inserted   bool                                    `json:"inserted"`
	FieldMeta  *RecipientGetDocumentRecipientFieldMeta `json:"fieldMeta"`
}

func (o *RecipientGetDocumentRecipientFields) GetType() RecipientGetDocumentRecipientType {
	if o == nil {
		return RecipientGetDocumentRecipientType("")
	}
	return o.Type
}

func (o *RecipientGetDocumentRecipientFields) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientFields) GetSecondaryID() string {
	if o == nil {
		return ""
	}
	return o.SecondaryID
}

func (o *RecipientGetDocumentRecipientFields) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientGetDocumentRecipientFields) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientGetDocumentRecipientFields) GetRecipientID() int64 {
	if o == nil {
		return 0
	}
	return o.RecipientID
}

func (o *RecipientGetDocumentRecipientFields) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *RecipientGetDocumentRecipientFields) GetPositionX() any {
	if o == nil {
		return nil
	}
	return o.PositionX
}

func (o *RecipientGetDocumentRecipientFields) GetPositionY() any {
	if o == nil {
		return nil
	}
	return o.PositionY
}

func (o *RecipientGetDocumentRecipientFields) GetWidth() any {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *RecipientGetDocumentRecipientFields) GetHeight() any {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *RecipientGetDocumentRecipientFields) GetCustomText() string {
	if o == nil {
		return ""
	}
	return o.CustomText
}

func (o *RecipientGetDocumentRecipientFields) GetInserted() bool {
	if o == nil {
		return false
	}
	return o.Inserted
}

func (o *RecipientGetDocumentRecipientFields) GetFieldMeta() *RecipientGetDocumentRecipientFieldMeta {
	if o == nil {
		return nil
	}
	return o.FieldMeta
}

// RecipientGetDocumentRecipientResponseBody - Successful response
type RecipientGetDocumentRecipientResponseBody struct {
	Role              RecipientGetDocumentRecipientRole         `json:"role"`
	ReadStatus        ReadStatus                                `json:"readStatus"`
	SigningStatus     SigningStatus                             `json:"signingStatus"`
	SendStatus        SendStatus                                `json:"sendStatus"`
	ID                int64                                     `json:"id"`
	DocumentID        *int64                                    `json:"documentId"`
	TemplateID        *int64                                    `json:"templateId"`
	Email             string                                    `json:"email"`
	Name              string                                    `json:"name"`
	Token             string                                    `json:"token"`
	DocumentDeletedAt *string                                   `json:"documentDeletedAt"`
	Expired           *string                                   `json:"expired"`
	SignedAt          *string                                   `json:"signedAt"`
	AuthOptions       *RecipientGetDocumentRecipientAuthOptions `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                              `json:"signingOrder"`
	RejectionReason *string                               `json:"rejectionReason"`
	Fields          []RecipientGetDocumentRecipientFields `json:"fields"`
}

func (o *RecipientGetDocumentRecipientResponseBody) GetRole() RecipientGetDocumentRecipientRole {
	if o == nil {
		return RecipientGetDocumentRecipientRole("")
	}
	return o.Role
}

func (o *RecipientGetDocumentRecipientResponseBody) GetReadStatus() ReadStatus {
	if o == nil {
		return ReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSigningStatus() SigningStatus {
	if o == nil {
		return SigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSendStatus() SendStatus {
	if o == nil {
		return SendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientGetDocumentRecipientResponseBody) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientGetDocumentRecipientResponseBody) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientGetDocumentRecipientResponseBody) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientGetDocumentRecipientResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientGetDocumentRecipientResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientGetDocumentRecipientResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientGetDocumentRecipientResponseBody) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientGetDocumentRecipientResponseBody) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientGetDocumentRecipientResponseBody) GetAuthOptions() *RecipientGetDocumentRecipientAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientGetDocumentRecipientResponseBody) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientGetDocumentRecipientResponseBody) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

func (o *RecipientGetDocumentRecipientResponseBody) GetFields() []RecipientGetDocumentRecipientFields {
	if o == nil {
		return []RecipientGetDocumentRecipientFields{}
	}
	return o.Fields
}

type RecipientGetDocumentRecipientResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientGetDocumentRecipientResponseBody
}

func (o *RecipientGetDocumentRecipientResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientGetDocumentRecipientResponse) GetObject() *RecipientGetDocumentRecipientResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
