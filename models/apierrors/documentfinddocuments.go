// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type DocumentFindDocumentsDocumentsIssues struct {
	Message string `json:"message"`
}

func (o *DocumentFindDocumentsDocumentsIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// DocumentFindDocumentsDocumentsResponseResponseBody - Internal server error
type DocumentFindDocumentsDocumentsResponseResponseBody struct {
	Message  string                                 `json:"message"`
	Code     string                                 `json:"code"`
	Issues   []DocumentFindDocumentsDocumentsIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &DocumentFindDocumentsDocumentsResponseResponseBody{}

func (e *DocumentFindDocumentsDocumentsResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type DocumentFindDocumentsIssues struct {
	Message string `json:"message"`
}

func (o *DocumentFindDocumentsIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// DocumentFindDocumentsDocumentsResponseBody - Not found
type DocumentFindDocumentsDocumentsResponseBody struct {
	Message  string                        `json:"message"`
	Code     string                        `json:"code"`
	Issues   []DocumentFindDocumentsIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata       `json:"-"`
}

var _ error = &DocumentFindDocumentsDocumentsResponseBody{}

func (e *DocumentFindDocumentsDocumentsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type Issues struct {
	Message string `json:"message"`
}

func (o *Issues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// DocumentFindDocumentsResponseBody - Invalid input data
type DocumentFindDocumentsResponseBody struct {
	Message  string                  `json:"message"`
	Code     string                  `json:"code"`
	Issues   []Issues                `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &DocumentFindDocumentsResponseBody{}

func (e *DocumentFindDocumentsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
