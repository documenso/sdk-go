// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientCreateTemplateRecipientsRoleRequestBody string

const (
	RecipientCreateTemplateRecipientsRoleRequestBodyCc        RecipientCreateTemplateRecipientsRoleRequestBody = "CC"
	RecipientCreateTemplateRecipientsRoleRequestBodySigner    RecipientCreateTemplateRecipientsRoleRequestBody = "SIGNER"
	RecipientCreateTemplateRecipientsRoleRequestBodyViewer    RecipientCreateTemplateRecipientsRoleRequestBody = "VIEWER"
	RecipientCreateTemplateRecipientsRoleRequestBodyApprover  RecipientCreateTemplateRecipientsRoleRequestBody = "APPROVER"
	RecipientCreateTemplateRecipientsRoleRequestBodyAssistant RecipientCreateTemplateRecipientsRoleRequestBody = "ASSISTANT"
)

func (e RecipientCreateTemplateRecipientsRoleRequestBody) ToPointer() *RecipientCreateTemplateRecipientsRoleRequestBody {
	return &e
}
func (e *RecipientCreateTemplateRecipientsRoleRequestBody) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientCreateTemplateRecipientsRoleRequestBody(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsRoleRequestBody: %v", v)
	}
}

// RecipientCreateTemplateRecipientsAccessAuthRequestBody - The type of authentication required for the recipient to access the document.
type RecipientCreateTemplateRecipientsAccessAuthRequestBody string

const (
	RecipientCreateTemplateRecipientsAccessAuthRequestBodyAccount RecipientCreateTemplateRecipientsAccessAuthRequestBody = "ACCOUNT"
)

func (e RecipientCreateTemplateRecipientsAccessAuthRequestBody) ToPointer() *RecipientCreateTemplateRecipientsAccessAuthRequestBody {
	return &e
}
func (e *RecipientCreateTemplateRecipientsAccessAuthRequestBody) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientCreateTemplateRecipientsAccessAuthRequestBody(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsAccessAuthRequestBody: %v", v)
	}
}

// RecipientCreateTemplateRecipientsActionAuthRequestBody - The type of authentication required for the recipient to sign the document.
type RecipientCreateTemplateRecipientsActionAuthRequestBody string

const (
	RecipientCreateTemplateRecipientsActionAuthRequestBodyAccount       RecipientCreateTemplateRecipientsActionAuthRequestBody = "ACCOUNT"
	RecipientCreateTemplateRecipientsActionAuthRequestBodyPasskey       RecipientCreateTemplateRecipientsActionAuthRequestBody = "PASSKEY"
	RecipientCreateTemplateRecipientsActionAuthRequestBodyTwoFactorAuth RecipientCreateTemplateRecipientsActionAuthRequestBody = "TWO_FACTOR_AUTH"
	RecipientCreateTemplateRecipientsActionAuthRequestBodyExplicitNone  RecipientCreateTemplateRecipientsActionAuthRequestBody = "EXPLICIT_NONE"
)

func (e RecipientCreateTemplateRecipientsActionAuthRequestBody) ToPointer() *RecipientCreateTemplateRecipientsActionAuthRequestBody {
	return &e
}
func (e *RecipientCreateTemplateRecipientsActionAuthRequestBody) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientCreateTemplateRecipientsActionAuthRequestBody(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsActionAuthRequestBody: %v", v)
	}
}

type RecipientCreateTemplateRecipientsRecipientRequestBody struct {
	Email        string                                           `json:"email"`
	Name         string                                           `json:"name"`
	Role         RecipientCreateTemplateRecipientsRoleRequestBody `json:"role"`
	SigningOrder *float64                                         `json:"signingOrder,omitempty"`
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientCreateTemplateRecipientsAccessAuthRequestBody `json:"accessAuth,omitempty"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientCreateTemplateRecipientsActionAuthRequestBody `json:"actionAuth,omitempty"`
}

func (o *RecipientCreateTemplateRecipientsRecipientRequestBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientCreateTemplateRecipientsRecipientRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientCreateTemplateRecipientsRecipientRequestBody) GetRole() RecipientCreateTemplateRecipientsRoleRequestBody {
	if o == nil {
		return RecipientCreateTemplateRecipientsRoleRequestBody("")
	}
	return o.Role
}

func (o *RecipientCreateTemplateRecipientsRecipientRequestBody) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientCreateTemplateRecipientsRecipientRequestBody) GetAccessAuth() *RecipientCreateTemplateRecipientsAccessAuthRequestBody {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientCreateTemplateRecipientsRecipientRequestBody) GetActionAuth() *RecipientCreateTemplateRecipientsActionAuthRequestBody {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientCreateTemplateRecipientsRequest struct {
	TemplateID float64                                                 `json:"templateId"`
	Recipients []RecipientCreateTemplateRecipientsRecipientRequestBody `json:"recipients"`
}

func (o *RecipientCreateTemplateRecipientsRequest) GetTemplateID() float64 {
	if o == nil {
		return 0.0
	}
	return o.TemplateID
}

func (o *RecipientCreateTemplateRecipientsRequest) GetRecipients() []RecipientCreateTemplateRecipientsRecipientRequestBody {
	if o == nil {
		return []RecipientCreateTemplateRecipientsRecipientRequestBody{}
	}
	return o.Recipients
}

type RecipientCreateTemplateRecipientsRoleResponse string

const (
	RecipientCreateTemplateRecipientsRoleResponseCc        RecipientCreateTemplateRecipientsRoleResponse = "CC"
	RecipientCreateTemplateRecipientsRoleResponseSigner    RecipientCreateTemplateRecipientsRoleResponse = "SIGNER"
	RecipientCreateTemplateRecipientsRoleResponseViewer    RecipientCreateTemplateRecipientsRoleResponse = "VIEWER"
	RecipientCreateTemplateRecipientsRoleResponseApprover  RecipientCreateTemplateRecipientsRoleResponse = "APPROVER"
	RecipientCreateTemplateRecipientsRoleResponseAssistant RecipientCreateTemplateRecipientsRoleResponse = "ASSISTANT"
)

func (e RecipientCreateTemplateRecipientsRoleResponse) ToPointer() *RecipientCreateTemplateRecipientsRoleResponse {
	return &e
}
func (e *RecipientCreateTemplateRecipientsRoleResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientCreateTemplateRecipientsRoleResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsRoleResponse: %v", v)
	}
}

type RecipientCreateTemplateRecipientsReadStatus string

const (
	RecipientCreateTemplateRecipientsReadStatusNotOpened RecipientCreateTemplateRecipientsReadStatus = "NOT_OPENED"
	RecipientCreateTemplateRecipientsReadStatusOpened    RecipientCreateTemplateRecipientsReadStatus = "OPENED"
)

func (e RecipientCreateTemplateRecipientsReadStatus) ToPointer() *RecipientCreateTemplateRecipientsReadStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientsReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientCreateTemplateRecipientsReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsReadStatus: %v", v)
	}
}

type RecipientCreateTemplateRecipientsSigningStatus string

const (
	RecipientCreateTemplateRecipientsSigningStatusNotSigned RecipientCreateTemplateRecipientsSigningStatus = "NOT_SIGNED"
	RecipientCreateTemplateRecipientsSigningStatusSigned    RecipientCreateTemplateRecipientsSigningStatus = "SIGNED"
	RecipientCreateTemplateRecipientsSigningStatusRejected  RecipientCreateTemplateRecipientsSigningStatus = "REJECTED"
)

func (e RecipientCreateTemplateRecipientsSigningStatus) ToPointer() *RecipientCreateTemplateRecipientsSigningStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientsSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientCreateTemplateRecipientsSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsSigningStatus: %v", v)
	}
}

type RecipientCreateTemplateRecipientsSendStatus string

const (
	RecipientCreateTemplateRecipientsSendStatusNotSent RecipientCreateTemplateRecipientsSendStatus = "NOT_SENT"
	RecipientCreateTemplateRecipientsSendStatusSent    RecipientCreateTemplateRecipientsSendStatus = "SENT"
)

func (e RecipientCreateTemplateRecipientsSendStatus) ToPointer() *RecipientCreateTemplateRecipientsSendStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientsSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientCreateTemplateRecipientsSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsSendStatus: %v", v)
	}
}

// RecipientCreateTemplateRecipientsAccessAuthResponse - The type of authentication required for the recipient to access the document.
type RecipientCreateTemplateRecipientsAccessAuthResponse string

const (
	RecipientCreateTemplateRecipientsAccessAuthResponseAccount RecipientCreateTemplateRecipientsAccessAuthResponse = "ACCOUNT"
)

func (e RecipientCreateTemplateRecipientsAccessAuthResponse) ToPointer() *RecipientCreateTemplateRecipientsAccessAuthResponse {
	return &e
}
func (e *RecipientCreateTemplateRecipientsAccessAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientCreateTemplateRecipientsAccessAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsAccessAuthResponse: %v", v)
	}
}

// RecipientCreateTemplateRecipientsActionAuthResponse - The type of authentication required for the recipient to sign the document.
type RecipientCreateTemplateRecipientsActionAuthResponse string

const (
	RecipientCreateTemplateRecipientsActionAuthResponseAccount       RecipientCreateTemplateRecipientsActionAuthResponse = "ACCOUNT"
	RecipientCreateTemplateRecipientsActionAuthResponsePasskey       RecipientCreateTemplateRecipientsActionAuthResponse = "PASSKEY"
	RecipientCreateTemplateRecipientsActionAuthResponseTwoFactorAuth RecipientCreateTemplateRecipientsActionAuthResponse = "TWO_FACTOR_AUTH"
	RecipientCreateTemplateRecipientsActionAuthResponseExplicitNone  RecipientCreateTemplateRecipientsActionAuthResponse = "EXPLICIT_NONE"
)

func (e RecipientCreateTemplateRecipientsActionAuthResponse) ToPointer() *RecipientCreateTemplateRecipientsActionAuthResponse {
	return &e
}
func (e *RecipientCreateTemplateRecipientsActionAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientCreateTemplateRecipientsActionAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsActionAuthResponse: %v", v)
	}
}

type RecipientCreateTemplateRecipientsAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientCreateTemplateRecipientsAccessAuthResponse `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientCreateTemplateRecipientsActionAuthResponse `json:"actionAuth"`
}

func (o *RecipientCreateTemplateRecipientsAuthOptions) GetAccessAuth() *RecipientCreateTemplateRecipientsAccessAuthResponse {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientCreateTemplateRecipientsAuthOptions) GetActionAuth() *RecipientCreateTemplateRecipientsActionAuthResponse {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientCreateTemplateRecipientsRecipientResponse struct {
	Role              RecipientCreateTemplateRecipientsRoleResponse  `json:"role"`
	ReadStatus        RecipientCreateTemplateRecipientsReadStatus    `json:"readStatus"`
	SigningStatus     RecipientCreateTemplateRecipientsSigningStatus `json:"signingStatus"`
	SendStatus        RecipientCreateTemplateRecipientsSendStatus    `json:"sendStatus"`
	ID                float64                                        `json:"id"`
	DocumentID        *float64                                       `json:"documentId"`
	TemplateID        *float64                                       `json:"templateId"`
	Email             string                                         `json:"email"`
	Name              string                                         `json:"name"`
	Token             string                                         `json:"token"`
	DocumentDeletedAt *string                                        `json:"documentDeletedAt"`
	Expired           *string                                        `json:"expired"`
	SignedAt          *string                                        `json:"signedAt"`
	AuthOptions       *RecipientCreateTemplateRecipientsAuthOptions  `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64 `json:"signingOrder"`
	RejectionReason *string  `json:"rejectionReason"`
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetRole() RecipientCreateTemplateRecipientsRoleResponse {
	if o == nil {
		return RecipientCreateTemplateRecipientsRoleResponse("")
	}
	return o.Role
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetReadStatus() RecipientCreateTemplateRecipientsReadStatus {
	if o == nil {
		return RecipientCreateTemplateRecipientsReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetSigningStatus() RecipientCreateTemplateRecipientsSigningStatus {
	if o == nil {
		return RecipientCreateTemplateRecipientsSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetSendStatus() RecipientCreateTemplateRecipientsSendStatus {
	if o == nil {
		return RecipientCreateTemplateRecipientsSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetDocumentID() *float64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetTemplateID() *float64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetAuthOptions() *RecipientCreateTemplateRecipientsAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientCreateTemplateRecipientsRecipientResponse) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

// RecipientCreateTemplateRecipientsResponseBody - Successful response
type RecipientCreateTemplateRecipientsResponseBody struct {
	Recipients []RecipientCreateTemplateRecipientsRecipientResponse `json:"recipients"`
}

func (o *RecipientCreateTemplateRecipientsResponseBody) GetRecipients() []RecipientCreateTemplateRecipientsRecipientResponse {
	if o == nil {
		return []RecipientCreateTemplateRecipientsRecipientResponse{}
	}
	return o.Recipients
}

type RecipientCreateTemplateRecipientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientCreateTemplateRecipientsResponseBody
}

func (o *RecipientCreateTemplateRecipientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientCreateTemplateRecipientsResponse) GetObject() *RecipientCreateTemplateRecipientsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
