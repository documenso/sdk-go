// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/documenso/sdk-go/models/components"
)

type FieldGetDocumentFieldDocumentsFieldsResponseIssues struct {
	Message string `json:"message"`
}

func (o *FieldGetDocumentFieldDocumentsFieldsResponseIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// FieldGetDocumentFieldDocumentsFieldsResponseResponseBody - Internal server error
type FieldGetDocumentFieldDocumentsFieldsResponseResponseBody struct {
	Message  string                                               `json:"message"`
	Code     string                                               `json:"code"`
	Issues   []FieldGetDocumentFieldDocumentsFieldsResponseIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                              `json:"-"`
}

var _ error = &FieldGetDocumentFieldDocumentsFieldsResponseResponseBody{}

func (e *FieldGetDocumentFieldDocumentsFieldsResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type FieldGetDocumentFieldDocumentsFieldsIssues struct {
	Message string `json:"message"`
}

func (o *FieldGetDocumentFieldDocumentsFieldsIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// FieldGetDocumentFieldDocumentsFieldsResponseBody - Not found
type FieldGetDocumentFieldDocumentsFieldsResponseBody struct {
	Message  string                                       `json:"message"`
	Code     string                                       `json:"code"`
	Issues   []FieldGetDocumentFieldDocumentsFieldsIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata                      `json:"-"`
}

var _ error = &FieldGetDocumentFieldDocumentsFieldsResponseBody{}

func (e *FieldGetDocumentFieldDocumentsFieldsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type FieldGetDocumentFieldIssues struct {
	Message string `json:"message"`
}

func (o *FieldGetDocumentFieldIssues) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

// FieldGetDocumentFieldResponseBody - Invalid input data
type FieldGetDocumentFieldResponseBody struct {
	Message  string                        `json:"message"`
	Code     string                        `json:"code"`
	Issues   []FieldGetDocumentFieldIssues `json:"issues,omitempty"`
	HTTPMeta components.HTTPMetadata       `json:"-"`
}

var _ error = &FieldGetDocumentFieldResponseBody{}

func (e *FieldGetDocumentFieldResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
