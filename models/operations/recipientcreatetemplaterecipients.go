// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientCreateTemplateRecipientsRole string

const (
	RecipientCreateTemplateRecipientsRoleCc       RecipientCreateTemplateRecipientsRole = "CC"
	RecipientCreateTemplateRecipientsRoleSigner   RecipientCreateTemplateRecipientsRole = "SIGNER"
	RecipientCreateTemplateRecipientsRoleViewer   RecipientCreateTemplateRecipientsRole = "VIEWER"
	RecipientCreateTemplateRecipientsRoleApprover RecipientCreateTemplateRecipientsRole = "APPROVER"
)

func (e RecipientCreateTemplateRecipientsRole) ToPointer() *RecipientCreateTemplateRecipientsRole {
	return &e
}
func (e *RecipientCreateTemplateRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientCreateTemplateRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsRole: %v", v)
	}
}

// RecipientCreateTemplateRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientCreateTemplateRecipientsAccessAuth string

const (
	RecipientCreateTemplateRecipientsAccessAuthAccount RecipientCreateTemplateRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientCreateTemplateRecipientsAccessAuth) ToPointer() *RecipientCreateTemplateRecipientsAccessAuth {
	return &e
}
func (e *RecipientCreateTemplateRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientCreateTemplateRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsAccessAuth: %v", v)
	}
}

// RecipientCreateTemplateRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientCreateTemplateRecipientsActionAuth string

const (
	RecipientCreateTemplateRecipientsActionAuthAccount       RecipientCreateTemplateRecipientsActionAuth = "ACCOUNT"
	RecipientCreateTemplateRecipientsActionAuthPasskey       RecipientCreateTemplateRecipientsActionAuth = "PASSKEY"
	RecipientCreateTemplateRecipientsActionAuthTwoFactorAuth RecipientCreateTemplateRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientCreateTemplateRecipientsActionAuthExplicitNone  RecipientCreateTemplateRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientCreateTemplateRecipientsActionAuth) ToPointer() *RecipientCreateTemplateRecipientsActionAuth {
	return &e
}
func (e *RecipientCreateTemplateRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientCreateTemplateRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsActionAuth: %v", v)
	}
}

type RecipientCreateTemplateRecipientsRecipients struct {
	Email        string                                `json:"email"`
	Name         string                                `json:"name"`
	Role         RecipientCreateTemplateRecipientsRole `json:"role"`
	SigningOrder *float64                              `json:"signingOrder,omitempty"`
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientCreateTemplateRecipientsAccessAuth `json:"accessAuth,omitempty"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientCreateTemplateRecipientsActionAuth `json:"actionAuth,omitempty"`
}

func (o *RecipientCreateTemplateRecipientsRecipients) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientCreateTemplateRecipientsRecipients) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientCreateTemplateRecipientsRecipients) GetRole() RecipientCreateTemplateRecipientsRole {
	if o == nil {
		return RecipientCreateTemplateRecipientsRole("")
	}
	return o.Role
}

func (o *RecipientCreateTemplateRecipientsRecipients) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientCreateTemplateRecipientsRecipients) GetAccessAuth() *RecipientCreateTemplateRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientCreateTemplateRecipientsRecipients) GetActionAuth() *RecipientCreateTemplateRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientCreateTemplateRecipientsRequestBody struct {
	TemplateID float64                                       `json:"templateId"`
	Recipients []RecipientCreateTemplateRecipientsRecipients `json:"recipients"`
}

func (o *RecipientCreateTemplateRecipientsRequestBody) GetTemplateID() float64 {
	if o == nil {
		return 0.0
	}
	return o.TemplateID
}

func (o *RecipientCreateTemplateRecipientsRequestBody) GetRecipients() []RecipientCreateTemplateRecipientsRecipients {
	if o == nil {
		return []RecipientCreateTemplateRecipientsRecipients{}
	}
	return o.Recipients
}

type RecipientCreateTemplateRecipientsTemplatesRecipientsRole string

const (
	RecipientCreateTemplateRecipientsTemplatesRecipientsRoleCc       RecipientCreateTemplateRecipientsTemplatesRecipientsRole = "CC"
	RecipientCreateTemplateRecipientsTemplatesRecipientsRoleSigner   RecipientCreateTemplateRecipientsTemplatesRecipientsRole = "SIGNER"
	RecipientCreateTemplateRecipientsTemplatesRecipientsRoleViewer   RecipientCreateTemplateRecipientsTemplatesRecipientsRole = "VIEWER"
	RecipientCreateTemplateRecipientsTemplatesRecipientsRoleApprover RecipientCreateTemplateRecipientsTemplatesRecipientsRole = "APPROVER"
)

func (e RecipientCreateTemplateRecipientsTemplatesRecipientsRole) ToPointer() *RecipientCreateTemplateRecipientsTemplatesRecipientsRole {
	return &e
}
func (e *RecipientCreateTemplateRecipientsTemplatesRecipientsRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		*e = RecipientCreateTemplateRecipientsTemplatesRecipientsRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsTemplatesRecipientsRole: %v", v)
	}
}

type RecipientCreateTemplateRecipientsReadStatus string

const (
	RecipientCreateTemplateRecipientsReadStatusNotOpened RecipientCreateTemplateRecipientsReadStatus = "NOT_OPENED"
	RecipientCreateTemplateRecipientsReadStatusOpened    RecipientCreateTemplateRecipientsReadStatus = "OPENED"
)

func (e RecipientCreateTemplateRecipientsReadStatus) ToPointer() *RecipientCreateTemplateRecipientsReadStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientsReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientCreateTemplateRecipientsReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsReadStatus: %v", v)
	}
}

type RecipientCreateTemplateRecipientsSigningStatus string

const (
	RecipientCreateTemplateRecipientsSigningStatusNotSigned RecipientCreateTemplateRecipientsSigningStatus = "NOT_SIGNED"
	RecipientCreateTemplateRecipientsSigningStatusSigned    RecipientCreateTemplateRecipientsSigningStatus = "SIGNED"
	RecipientCreateTemplateRecipientsSigningStatusRejected  RecipientCreateTemplateRecipientsSigningStatus = "REJECTED"
)

func (e RecipientCreateTemplateRecipientsSigningStatus) ToPointer() *RecipientCreateTemplateRecipientsSigningStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientsSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientCreateTemplateRecipientsSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsSigningStatus: %v", v)
	}
}

type RecipientCreateTemplateRecipientsSendStatus string

const (
	RecipientCreateTemplateRecipientsSendStatusNotSent RecipientCreateTemplateRecipientsSendStatus = "NOT_SENT"
	RecipientCreateTemplateRecipientsSendStatusSent    RecipientCreateTemplateRecipientsSendStatus = "SENT"
)

func (e RecipientCreateTemplateRecipientsSendStatus) ToPointer() *RecipientCreateTemplateRecipientsSendStatus {
	return &e
}
func (e *RecipientCreateTemplateRecipientsSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientCreateTemplateRecipientsSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsSendStatus: %v", v)
	}
}

// RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth - The type of authentication required for the recipient to access the document.
type RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth string

const (
	RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuthAccount RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth = "ACCOUNT"
)

func (e RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth) ToPointer() *RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth {
	return &e
}
func (e *RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth: %v", v)
	}
}

// RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth - The type of authentication required for the recipient to sign the document.
type RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth string

const (
	RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuthAccount       RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth = "ACCOUNT"
	RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuthPasskey       RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth = "PASSKEY"
	RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuthTwoFactorAuth RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth = "TWO_FACTOR_AUTH"
	RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuthExplicitNone  RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth = "EXPLICIT_NONE"
)

func (e RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth) ToPointer() *RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth {
	return &e
}
func (e *RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth: %v", v)
	}
}

type RecipientCreateTemplateRecipientsAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth `json:"actionAuth"`
}

func (o *RecipientCreateTemplateRecipientsAuthOptions) GetAccessAuth() *RecipientCreateTemplateRecipientsTemplatesRecipientsAccessAuth {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientCreateTemplateRecipientsAuthOptions) GetActionAuth() *RecipientCreateTemplateRecipientsTemplatesRecipientsActionAuth {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients struct {
	Role              RecipientCreateTemplateRecipientsTemplatesRecipientsRole `json:"role"`
	ReadStatus        RecipientCreateTemplateRecipientsReadStatus              `json:"readStatus"`
	SigningStatus     RecipientCreateTemplateRecipientsSigningStatus           `json:"signingStatus"`
	SendStatus        RecipientCreateTemplateRecipientsSendStatus              `json:"sendStatus"`
	ID                int64                                                    `json:"id"`
	DocumentID        *int64                                                   `json:"documentId"`
	TemplateID        *int64                                                   `json:"templateId"`
	Email             string                                                   `json:"email"`
	Name              string                                                   `json:"name"`
	Token             string                                                   `json:"token"`
	DocumentDeletedAt *string                                                  `json:"documentDeletedAt"`
	Expired           *string                                                  `json:"expired"`
	SignedAt          *string                                                  `json:"signedAt"`
	AuthOptions       *RecipientCreateTemplateRecipientsAuthOptions            `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64 `json:"signingOrder"`
	RejectionReason *string  `json:"rejectionReason"`
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetRole() RecipientCreateTemplateRecipientsTemplatesRecipientsRole {
	if o == nil {
		return RecipientCreateTemplateRecipientsTemplatesRecipientsRole("")
	}
	return o.Role
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetReadStatus() RecipientCreateTemplateRecipientsReadStatus {
	if o == nil {
		return RecipientCreateTemplateRecipientsReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetSigningStatus() RecipientCreateTemplateRecipientsSigningStatus {
	if o == nil {
		return RecipientCreateTemplateRecipientsSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetSendStatus() RecipientCreateTemplateRecipientsSendStatus {
	if o == nil {
		return RecipientCreateTemplateRecipientsSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetDocumentID() *int64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetTemplateID() *int64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetAuthOptions() *RecipientCreateTemplateRecipientsAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

// RecipientCreateTemplateRecipientsResponseBody - Successful response
type RecipientCreateTemplateRecipientsResponseBody struct {
	Recipients []RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients `json:"recipients"`
}

func (o *RecipientCreateTemplateRecipientsResponseBody) GetRecipients() []RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients {
	if o == nil {
		return []RecipientCreateTemplateRecipientsTemplatesRecipientsRecipients{}
	}
	return o.Recipients
}

type RecipientCreateTemplateRecipientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientCreateTemplateRecipientsResponseBody
}

func (o *RecipientCreateTemplateRecipientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientCreateTemplateRecipientsResponse) GetObject() *RecipientCreateTemplateRecipientsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
