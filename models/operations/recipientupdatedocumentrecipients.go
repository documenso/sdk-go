// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientUpdateDocumentRecipientsRoleRequest string

const (
	RecipientUpdateDocumentRecipientsRoleRequestCc        RecipientUpdateDocumentRecipientsRoleRequest = "CC"
	RecipientUpdateDocumentRecipientsRoleRequestSigner    RecipientUpdateDocumentRecipientsRoleRequest = "SIGNER"
	RecipientUpdateDocumentRecipientsRoleRequestViewer    RecipientUpdateDocumentRecipientsRoleRequest = "VIEWER"
	RecipientUpdateDocumentRecipientsRoleRequestApprover  RecipientUpdateDocumentRecipientsRoleRequest = "APPROVER"
	RecipientUpdateDocumentRecipientsRoleRequestAssistant RecipientUpdateDocumentRecipientsRoleRequest = "ASSISTANT"
)

func (e RecipientUpdateDocumentRecipientsRoleRequest) ToPointer() *RecipientUpdateDocumentRecipientsRoleRequest {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsRoleRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientUpdateDocumentRecipientsRoleRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsRoleRequest: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsAccessAuthRequest - The type of authentication required for the recipient to access the document.
type RecipientUpdateDocumentRecipientsAccessAuthRequest string

const (
	RecipientUpdateDocumentRecipientsAccessAuthRequestAccount       RecipientUpdateDocumentRecipientsAccessAuthRequest = "ACCOUNT"
	RecipientUpdateDocumentRecipientsAccessAuthRequestTwoFactorAuth RecipientUpdateDocumentRecipientsAccessAuthRequest = "TWO_FACTOR_AUTH"
)

func (e RecipientUpdateDocumentRecipientsAccessAuthRequest) ToPointer() *RecipientUpdateDocumentRecipientsAccessAuthRequest {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsAccessAuthRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "TWO_FACTOR_AUTH":
		*e = RecipientUpdateDocumentRecipientsAccessAuthRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsAccessAuthRequest: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsActionAuthRequest - The type of authentication required for the recipient to sign the document.
type RecipientUpdateDocumentRecipientsActionAuthRequest string

const (
	RecipientUpdateDocumentRecipientsActionAuthRequestAccount       RecipientUpdateDocumentRecipientsActionAuthRequest = "ACCOUNT"
	RecipientUpdateDocumentRecipientsActionAuthRequestPasskey       RecipientUpdateDocumentRecipientsActionAuthRequest = "PASSKEY"
	RecipientUpdateDocumentRecipientsActionAuthRequestTwoFactorAuth RecipientUpdateDocumentRecipientsActionAuthRequest = "TWO_FACTOR_AUTH"
	RecipientUpdateDocumentRecipientsActionAuthRequestPassword      RecipientUpdateDocumentRecipientsActionAuthRequest = "PASSWORD"
	RecipientUpdateDocumentRecipientsActionAuthRequestExplicitNone  RecipientUpdateDocumentRecipientsActionAuthRequest = "EXPLICIT_NONE"
)

func (e RecipientUpdateDocumentRecipientsActionAuthRequest) ToPointer() *RecipientUpdateDocumentRecipientsActionAuthRequest {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsActionAuthRequest) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateDocumentRecipientsActionAuthRequest(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsActionAuthRequest: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsRecipientRequest struct {
	// The ID of the recipient to update.
	ID           float64                                              `json:"id"`
	Email        *string                                              `json:"email,omitempty"`
	Name         *string                                              `json:"name,omitempty"`
	Role         *RecipientUpdateDocumentRecipientsRoleRequest        `json:"role,omitempty"`
	SigningOrder *float64                                             `json:"signingOrder,omitempty"`
	AccessAuth   []RecipientUpdateDocumentRecipientsAccessAuthRequest `json:"accessAuth,omitempty"`
	ActionAuth   []RecipientUpdateDocumentRecipientsActionAuthRequest `json:"actionAuth,omitempty"`
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetEmail() *string {
	if r == nil {
		return nil
	}
	return r.Email
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetName() *string {
	if r == nil {
		return nil
	}
	return r.Name
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetRole() *RecipientUpdateDocumentRecipientsRoleRequest {
	if r == nil {
		return nil
	}
	return r.Role
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetSigningOrder() *float64 {
	if r == nil {
		return nil
	}
	return r.SigningOrder
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetAccessAuth() []RecipientUpdateDocumentRecipientsAccessAuthRequest {
	if r == nil {
		return nil
	}
	return r.AccessAuth
}

func (r *RecipientUpdateDocumentRecipientsRecipientRequest) GetActionAuth() []RecipientUpdateDocumentRecipientsActionAuthRequest {
	if r == nil {
		return nil
	}
	return r.ActionAuth
}

type RecipientUpdateDocumentRecipientsRequest struct {
	DocumentID float64                                             `json:"documentId"`
	Recipients []RecipientUpdateDocumentRecipientsRecipientRequest `json:"recipients"`
}

func (r *RecipientUpdateDocumentRecipientsRequest) GetDocumentID() float64 {
	if r == nil {
		return 0.0
	}
	return r.DocumentID
}

func (r *RecipientUpdateDocumentRecipientsRequest) GetRecipients() []RecipientUpdateDocumentRecipientsRecipientRequest {
	if r == nil {
		return []RecipientUpdateDocumentRecipientsRecipientRequest{}
	}
	return r.Recipients
}

type RecipientUpdateDocumentRecipientsRoleResponse string

const (
	RecipientUpdateDocumentRecipientsRoleResponseCc        RecipientUpdateDocumentRecipientsRoleResponse = "CC"
	RecipientUpdateDocumentRecipientsRoleResponseSigner    RecipientUpdateDocumentRecipientsRoleResponse = "SIGNER"
	RecipientUpdateDocumentRecipientsRoleResponseViewer    RecipientUpdateDocumentRecipientsRoleResponse = "VIEWER"
	RecipientUpdateDocumentRecipientsRoleResponseApprover  RecipientUpdateDocumentRecipientsRoleResponse = "APPROVER"
	RecipientUpdateDocumentRecipientsRoleResponseAssistant RecipientUpdateDocumentRecipientsRoleResponse = "ASSISTANT"
)

func (e RecipientUpdateDocumentRecipientsRoleResponse) ToPointer() *RecipientUpdateDocumentRecipientsRoleResponse {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsRoleResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientUpdateDocumentRecipientsRoleResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsRoleResponse: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsReadStatus string

const (
	RecipientUpdateDocumentRecipientsReadStatusNotOpened RecipientUpdateDocumentRecipientsReadStatus = "NOT_OPENED"
	RecipientUpdateDocumentRecipientsReadStatusOpened    RecipientUpdateDocumentRecipientsReadStatus = "OPENED"
)

func (e RecipientUpdateDocumentRecipientsReadStatus) ToPointer() *RecipientUpdateDocumentRecipientsReadStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientUpdateDocumentRecipientsReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsReadStatus: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsSigningStatus string

const (
	RecipientUpdateDocumentRecipientsSigningStatusNotSigned RecipientUpdateDocumentRecipientsSigningStatus = "NOT_SIGNED"
	RecipientUpdateDocumentRecipientsSigningStatusSigned    RecipientUpdateDocumentRecipientsSigningStatus = "SIGNED"
	RecipientUpdateDocumentRecipientsSigningStatusRejected  RecipientUpdateDocumentRecipientsSigningStatus = "REJECTED"
)

func (e RecipientUpdateDocumentRecipientsSigningStatus) ToPointer() *RecipientUpdateDocumentRecipientsSigningStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientUpdateDocumentRecipientsSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsSigningStatus: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsSendStatus string

const (
	RecipientUpdateDocumentRecipientsSendStatusNotSent RecipientUpdateDocumentRecipientsSendStatus = "NOT_SENT"
	RecipientUpdateDocumentRecipientsSendStatusSent    RecipientUpdateDocumentRecipientsSendStatus = "SENT"
)

func (e RecipientUpdateDocumentRecipientsSendStatus) ToPointer() *RecipientUpdateDocumentRecipientsSendStatus {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientUpdateDocumentRecipientsSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsSendStatus: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsAccessAuthResponse - The type of authentication required for the recipient to access the document.
type RecipientUpdateDocumentRecipientsAccessAuthResponse string

const (
	RecipientUpdateDocumentRecipientsAccessAuthResponseAccount       RecipientUpdateDocumentRecipientsAccessAuthResponse = "ACCOUNT"
	RecipientUpdateDocumentRecipientsAccessAuthResponseTwoFactorAuth RecipientUpdateDocumentRecipientsAccessAuthResponse = "TWO_FACTOR_AUTH"
)

func (e RecipientUpdateDocumentRecipientsAccessAuthResponse) ToPointer() *RecipientUpdateDocumentRecipientsAccessAuthResponse {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsAccessAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "TWO_FACTOR_AUTH":
		*e = RecipientUpdateDocumentRecipientsAccessAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsAccessAuthResponse: %v", v)
	}
}

// RecipientUpdateDocumentRecipientsActionAuthResponse - The type of authentication required for the recipient to sign the document.
type RecipientUpdateDocumentRecipientsActionAuthResponse string

const (
	RecipientUpdateDocumentRecipientsActionAuthResponseAccount       RecipientUpdateDocumentRecipientsActionAuthResponse = "ACCOUNT"
	RecipientUpdateDocumentRecipientsActionAuthResponsePasskey       RecipientUpdateDocumentRecipientsActionAuthResponse = "PASSKEY"
	RecipientUpdateDocumentRecipientsActionAuthResponseTwoFactorAuth RecipientUpdateDocumentRecipientsActionAuthResponse = "TWO_FACTOR_AUTH"
	RecipientUpdateDocumentRecipientsActionAuthResponsePassword      RecipientUpdateDocumentRecipientsActionAuthResponse = "PASSWORD"
	RecipientUpdateDocumentRecipientsActionAuthResponseExplicitNone  RecipientUpdateDocumentRecipientsActionAuthResponse = "EXPLICIT_NONE"
)

func (e RecipientUpdateDocumentRecipientsActionAuthResponse) ToPointer() *RecipientUpdateDocumentRecipientsActionAuthResponse {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsActionAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateDocumentRecipientsActionAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsActionAuthResponse: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsAuthOptions struct {
	AccessAuth []RecipientUpdateDocumentRecipientsAccessAuthResponse `json:"accessAuth"`
	ActionAuth []RecipientUpdateDocumentRecipientsActionAuthResponse `json:"actionAuth"`
}

func (r *RecipientUpdateDocumentRecipientsAuthOptions) GetAccessAuth() []RecipientUpdateDocumentRecipientsAccessAuthResponse {
	if r == nil {
		return []RecipientUpdateDocumentRecipientsAccessAuthResponse{}
	}
	return r.AccessAuth
}

func (r *RecipientUpdateDocumentRecipientsAuthOptions) GetActionAuth() []RecipientUpdateDocumentRecipientsActionAuthResponse {
	if r == nil {
		return []RecipientUpdateDocumentRecipientsActionAuthResponse{}
	}
	return r.ActionAuth
}

type RecipientUpdateDocumentRecipientsType string

const (
	RecipientUpdateDocumentRecipientsTypeSignature     RecipientUpdateDocumentRecipientsType = "SIGNATURE"
	RecipientUpdateDocumentRecipientsTypeFreeSignature RecipientUpdateDocumentRecipientsType = "FREE_SIGNATURE"
	RecipientUpdateDocumentRecipientsTypeInitials      RecipientUpdateDocumentRecipientsType = "INITIALS"
	RecipientUpdateDocumentRecipientsTypeName          RecipientUpdateDocumentRecipientsType = "NAME"
	RecipientUpdateDocumentRecipientsTypeEmail         RecipientUpdateDocumentRecipientsType = "EMAIL"
	RecipientUpdateDocumentRecipientsTypeDate          RecipientUpdateDocumentRecipientsType = "DATE"
	RecipientUpdateDocumentRecipientsTypeText          RecipientUpdateDocumentRecipientsType = "TEXT"
	RecipientUpdateDocumentRecipientsTypeNumber        RecipientUpdateDocumentRecipientsType = "NUMBER"
	RecipientUpdateDocumentRecipientsTypeRadio         RecipientUpdateDocumentRecipientsType = "RADIO"
	RecipientUpdateDocumentRecipientsTypeCheckbox      RecipientUpdateDocumentRecipientsType = "CHECKBOX"
	RecipientUpdateDocumentRecipientsTypeDropdown      RecipientUpdateDocumentRecipientsType = "DROPDOWN"
)

func (e RecipientUpdateDocumentRecipientsType) ToPointer() *RecipientUpdateDocumentRecipientsType {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientUpdateDocumentRecipientsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsType: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeDropdownDropdown RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown = "dropdown"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsValue3 struct {
	Value string `json:"value"`
}

func (r RecipientUpdateDocumentRecipientsValue3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsValue3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"value"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsValue3) GetValue() string {
	if r == nil {
		return ""
	}
	return r.Value
}

type RecipientUpdateDocumentRecipientsFieldMetaDropdown struct {
	Label        *string                                                `json:"label,omitempty"`
	Placeholder  *string                                                `json:"placeholder,omitempty"`
	Required     *bool                                                  `json:"required,omitempty"`
	ReadOnly     *bool                                                  `json:"readOnly,omitempty"`
	Type         RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown `json:"type"`
	Values       []RecipientUpdateDocumentRecipientsValue3              `json:"values,omitempty"`
	DefaultValue *string                                                `json:"defaultValue,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaDropdown) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeDropdown("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetValues() []RecipientUpdateDocumentRecipientsValue3 {
	if r == nil {
		return nil
	}
	return r.Values
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDropdown) GetDefaultValue() *string {
	if r == nil {
		return nil
	}
	return r.DefaultValue
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeCheckboxCheckbox RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox = "checkbox"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsValue2 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (r RecipientUpdateDocumentRecipientsValue2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsValue2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"id", "checked", "value"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsValue2) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateDocumentRecipientsValue2) GetChecked() bool {
	if r == nil {
		return false
	}
	return r.Checked
}

func (r *RecipientUpdateDocumentRecipientsValue2) GetValue() string {
	if r == nil {
		return ""
	}
	return r.Value
}

type RecipientUpdateDocumentRecipientsDirection string

const (
	RecipientUpdateDocumentRecipientsDirectionVertical   RecipientUpdateDocumentRecipientsDirection = "vertical"
	RecipientUpdateDocumentRecipientsDirectionHorizontal RecipientUpdateDocumentRecipientsDirection = "horizontal"
)

func (e RecipientUpdateDocumentRecipientsDirection) ToPointer() *RecipientUpdateDocumentRecipientsDirection {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsDirection) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vertical":
		fallthrough
	case "horizontal":
		*e = RecipientUpdateDocumentRecipientsDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsDirection: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaCheckbox struct {
	Label            *string                                                `json:"label,omitempty"`
	Placeholder      *string                                                `json:"placeholder,omitempty"`
	Required         *bool                                                  `json:"required,omitempty"`
	ReadOnly         *bool                                                  `json:"readOnly,omitempty"`
	Type             RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox `json:"type"`
	Values           []RecipientUpdateDocumentRecipientsValue2              `json:"values,omitempty"`
	ValidationRule   *string                                                `json:"validationRule,omitempty"`
	ValidationLength *float64                                               `json:"validationLength,omitempty"`
	Direction        *RecipientUpdateDocumentRecipientsDirection            `default:"vertical" json:"direction"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaCheckbox) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeCheckbox("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetValues() []RecipientUpdateDocumentRecipientsValue2 {
	if r == nil {
		return nil
	}
	return r.Values
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetValidationRule() *string {
	if r == nil {
		return nil
	}
	return r.ValidationRule
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetValidationLength() *float64 {
	if r == nil {
		return nil
	}
	return r.ValidationLength
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaCheckbox) GetDirection() *RecipientUpdateDocumentRecipientsDirection {
	if r == nil {
		return nil
	}
	return r.Direction
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeRadio string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeRadioRadio RecipientUpdateDocumentRecipientsFieldMetaTypeRadio = "radio"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeRadio) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeRadio {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeRadio) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeRadio(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeRadio: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsValue1 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (r RecipientUpdateDocumentRecipientsValue1) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsValue1) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"id", "checked", "value"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsValue1) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateDocumentRecipientsValue1) GetChecked() bool {
	if r == nil {
		return false
	}
	return r.Checked
}

func (r *RecipientUpdateDocumentRecipientsValue1) GetValue() string {
	if r == nil {
		return ""
	}
	return r.Value
}

type RecipientUpdateDocumentRecipientsFieldMetaRadio struct {
	Label       *string                                             `json:"label,omitempty"`
	Placeholder *string                                             `json:"placeholder,omitempty"`
	Required    *bool                                               `json:"required,omitempty"`
	ReadOnly    *bool                                               `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaTypeRadio `json:"type"`
	Values      []RecipientUpdateDocumentRecipientsValue1           `json:"values,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaRadio) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeRadio {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeRadio("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaRadio) GetValues() []RecipientUpdateDocumentRecipientsValue1 {
	if r == nil {
		return nil
	}
	return r.Values
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeNumber string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeNumberNumber RecipientUpdateDocumentRecipientsFieldMetaTypeNumber = "number"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeNumber) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeNumber {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeNumber) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeNumber(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeNumber: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsTextAlign6 string

const (
	RecipientUpdateDocumentRecipientsTextAlign6Left   RecipientUpdateDocumentRecipientsTextAlign6 = "left"
	RecipientUpdateDocumentRecipientsTextAlign6Center RecipientUpdateDocumentRecipientsTextAlign6 = "center"
	RecipientUpdateDocumentRecipientsTextAlign6Right  RecipientUpdateDocumentRecipientsTextAlign6 = "right"
)

func (e RecipientUpdateDocumentRecipientsTextAlign6) ToPointer() *RecipientUpdateDocumentRecipientsTextAlign6 {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsTextAlign6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateDocumentRecipientsTextAlign6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsTextAlign6: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaNumber struct {
	Label        *string                                              `json:"label,omitempty"`
	Placeholder  *string                                              `json:"placeholder,omitempty"`
	Required     *bool                                                `json:"required,omitempty"`
	ReadOnly     *bool                                                `json:"readOnly,omitempty"`
	Type         RecipientUpdateDocumentRecipientsFieldMetaTypeNumber `json:"type"`
	NumberFormat *string                                              `json:"numberFormat,omitempty"`
	Value        *string                                              `json:"value,omitempty"`
	MinValue     *float64                                             `json:"minValue,omitempty"`
	MaxValue     *float64                                             `json:"maxValue,omitempty"`
	FontSize     *float64                                             `json:"fontSize,omitempty"`
	TextAlign    *RecipientUpdateDocumentRecipientsTextAlign6         `json:"textAlign,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaNumber) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeNumber {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeNumber("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetNumberFormat() *string {
	if r == nil {
		return nil
	}
	return r.NumberFormat
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetValue() *string {
	if r == nil {
		return nil
	}
	return r.Value
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetMinValue() *float64 {
	if r == nil {
		return nil
	}
	return r.MinValue
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetMaxValue() *float64 {
	if r == nil {
		return nil
	}
	return r.MaxValue
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaNumber) GetTextAlign() *RecipientUpdateDocumentRecipientsTextAlign6 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeText string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeTextText RecipientUpdateDocumentRecipientsFieldMetaTypeText = "text"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeText) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeText {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeText) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeText(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeText: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsTextAlign5 string

const (
	RecipientUpdateDocumentRecipientsTextAlign5Left   RecipientUpdateDocumentRecipientsTextAlign5 = "left"
	RecipientUpdateDocumentRecipientsTextAlign5Center RecipientUpdateDocumentRecipientsTextAlign5 = "center"
	RecipientUpdateDocumentRecipientsTextAlign5Right  RecipientUpdateDocumentRecipientsTextAlign5 = "right"
)

func (e RecipientUpdateDocumentRecipientsTextAlign5) ToPointer() *RecipientUpdateDocumentRecipientsTextAlign5 {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsTextAlign5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateDocumentRecipientsTextAlign5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsTextAlign5: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaText struct {
	Label          *string                                            `json:"label,omitempty"`
	Placeholder    *string                                            `json:"placeholder,omitempty"`
	Required       *bool                                              `json:"required,omitempty"`
	ReadOnly       *bool                                              `json:"readOnly,omitempty"`
	Type           RecipientUpdateDocumentRecipientsFieldMetaTypeText `json:"type"`
	Text           *string                                            `json:"text,omitempty"`
	CharacterLimit *float64                                           `json:"characterLimit,omitempty"`
	FontSize       *float64                                           `json:"fontSize,omitempty"`
	TextAlign      *RecipientUpdateDocumentRecipientsTextAlign5       `json:"textAlign,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaText) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeText {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeText("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetText() *string {
	if r == nil {
		return nil
	}
	return r.Text
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetCharacterLimit() *float64 {
	if r == nil {
		return nil
	}
	return r.CharacterLimit
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaText) GetTextAlign() *RecipientUpdateDocumentRecipientsTextAlign5 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeDate string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeDateDate RecipientUpdateDocumentRecipientsFieldMetaTypeDate = "date"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeDate) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeDate {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeDate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeDate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeDate: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsTextAlign4 string

const (
	RecipientUpdateDocumentRecipientsTextAlign4Left   RecipientUpdateDocumentRecipientsTextAlign4 = "left"
	RecipientUpdateDocumentRecipientsTextAlign4Center RecipientUpdateDocumentRecipientsTextAlign4 = "center"
	RecipientUpdateDocumentRecipientsTextAlign4Right  RecipientUpdateDocumentRecipientsTextAlign4 = "right"
)

func (e RecipientUpdateDocumentRecipientsTextAlign4) ToPointer() *RecipientUpdateDocumentRecipientsTextAlign4 {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsTextAlign4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateDocumentRecipientsTextAlign4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsTextAlign4: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaDate struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaTypeDate `json:"type"`
	FontSize    *float64                                           `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateDocumentRecipientsTextAlign4       `json:"textAlign,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaDate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeDate {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeDate("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaDate) GetTextAlign() *RecipientUpdateDocumentRecipientsTextAlign4 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeEmail string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeEmailEmail RecipientUpdateDocumentRecipientsFieldMetaTypeEmail = "email"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeEmail) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeEmail {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeEmail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeEmail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeEmail: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsTextAlign3 string

const (
	RecipientUpdateDocumentRecipientsTextAlign3Left   RecipientUpdateDocumentRecipientsTextAlign3 = "left"
	RecipientUpdateDocumentRecipientsTextAlign3Center RecipientUpdateDocumentRecipientsTextAlign3 = "center"
	RecipientUpdateDocumentRecipientsTextAlign3Right  RecipientUpdateDocumentRecipientsTextAlign3 = "right"
)

func (e RecipientUpdateDocumentRecipientsTextAlign3) ToPointer() *RecipientUpdateDocumentRecipientsTextAlign3 {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsTextAlign3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateDocumentRecipientsTextAlign3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsTextAlign3: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaEmail struct {
	Label       *string                                             `json:"label,omitempty"`
	Placeholder *string                                             `json:"placeholder,omitempty"`
	Required    *bool                                               `json:"required,omitempty"`
	ReadOnly    *bool                                               `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaTypeEmail `json:"type"`
	FontSize    *float64                                            `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateDocumentRecipientsTextAlign3        `json:"textAlign,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaEmail) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeEmail {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeEmail("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaEmail) GetTextAlign() *RecipientUpdateDocumentRecipientsTextAlign3 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeName string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeNameName RecipientUpdateDocumentRecipientsFieldMetaTypeName = "name"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeName) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeName {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeName: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsTextAlign2 string

const (
	RecipientUpdateDocumentRecipientsTextAlign2Left   RecipientUpdateDocumentRecipientsTextAlign2 = "left"
	RecipientUpdateDocumentRecipientsTextAlign2Center RecipientUpdateDocumentRecipientsTextAlign2 = "center"
	RecipientUpdateDocumentRecipientsTextAlign2Right  RecipientUpdateDocumentRecipientsTextAlign2 = "right"
)

func (e RecipientUpdateDocumentRecipientsTextAlign2) ToPointer() *RecipientUpdateDocumentRecipientsTextAlign2 {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsTextAlign2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateDocumentRecipientsTextAlign2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsTextAlign2: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaName struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaTypeName `json:"type"`
	FontSize    *float64                                           `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateDocumentRecipientsTextAlign2       `json:"textAlign,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaName) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeName {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeName("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaName) GetTextAlign() *RecipientUpdateDocumentRecipientsTextAlign2 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateDocumentRecipientsFieldMetaTypeInitials string

const (
	RecipientUpdateDocumentRecipientsFieldMetaTypeInitialsInitials RecipientUpdateDocumentRecipientsFieldMetaTypeInitials = "initials"
)

func (e RecipientUpdateDocumentRecipientsFieldMetaTypeInitials) ToPointer() *RecipientUpdateDocumentRecipientsFieldMetaTypeInitials {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsFieldMetaTypeInitials) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientUpdateDocumentRecipientsFieldMetaTypeInitials(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsFieldMetaTypeInitials: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsTextAlign1 string

const (
	RecipientUpdateDocumentRecipientsTextAlign1Left   RecipientUpdateDocumentRecipientsTextAlign1 = "left"
	RecipientUpdateDocumentRecipientsTextAlign1Center RecipientUpdateDocumentRecipientsTextAlign1 = "center"
	RecipientUpdateDocumentRecipientsTextAlign1Right  RecipientUpdateDocumentRecipientsTextAlign1 = "right"
)

func (e RecipientUpdateDocumentRecipientsTextAlign1) ToPointer() *RecipientUpdateDocumentRecipientsTextAlign1 {
	return &e
}
func (e *RecipientUpdateDocumentRecipientsTextAlign1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateDocumentRecipientsTextAlign1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateDocumentRecipientsTextAlign1: %v", v)
	}
}

type RecipientUpdateDocumentRecipientsFieldMetaInitials struct {
	Label       *string                                                `json:"label,omitempty"`
	Placeholder *string                                                `json:"placeholder,omitempty"`
	Required    *bool                                                  `json:"required,omitempty"`
	ReadOnly    *bool                                                  `json:"readOnly,omitempty"`
	Type        RecipientUpdateDocumentRecipientsFieldMetaTypeInitials `json:"type"`
	FontSize    *float64                                               `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateDocumentRecipientsTextAlign1           `json:"textAlign,omitempty"`
}

func (r RecipientUpdateDocumentRecipientsFieldMetaInitials) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetLabel() *string {
	if r == nil {
		return nil
	}
	return r.Label
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetPlaceholder() *string {
	if r == nil {
		return nil
	}
	return r.Placeholder
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetRequired() *bool {
	if r == nil {
		return nil
	}
	return r.Required
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetReadOnly() *bool {
	if r == nil {
		return nil
	}
	return r.ReadOnly
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetType() RecipientUpdateDocumentRecipientsFieldMetaTypeInitials {
	if r == nil {
		return RecipientUpdateDocumentRecipientsFieldMetaTypeInitials("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetFontSize() *float64 {
	if r == nil {
		return nil
	}
	return r.FontSize
}

func (r *RecipientUpdateDocumentRecipientsFieldMetaInitials) GetTextAlign() *RecipientUpdateDocumentRecipientsTextAlign1 {
	if r == nil {
		return nil
	}
	return r.TextAlign
}

type RecipientUpdateDocumentRecipientsFieldMetaUnionType string

const (
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaInitials RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Initials"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaName     RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Name"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaEmail    RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Email"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaDate     RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Date"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaText     RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Text"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaNumber   RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Number"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaRadio    RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Radio"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaCheckbox RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Checkbox"
	RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaDropdown RecipientUpdateDocumentRecipientsFieldMetaUnionType = "recipient_updateDocumentRecipients_fieldMeta_Dropdown"
)

type RecipientUpdateDocumentRecipientsFieldMetaUnion struct {
	RecipientUpdateDocumentRecipientsFieldMetaInitials *RecipientUpdateDocumentRecipientsFieldMetaInitials `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaName     *RecipientUpdateDocumentRecipientsFieldMetaName     `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaEmail    *RecipientUpdateDocumentRecipientsFieldMetaEmail    `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaDate     *RecipientUpdateDocumentRecipientsFieldMetaDate     `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaText     *RecipientUpdateDocumentRecipientsFieldMetaText     `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaNumber   *RecipientUpdateDocumentRecipientsFieldMetaNumber   `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaRadio    *RecipientUpdateDocumentRecipientsFieldMetaRadio    `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaCheckbox *RecipientUpdateDocumentRecipientsFieldMetaCheckbox `queryParam:"inline,name=fieldMeta"`
	RecipientUpdateDocumentRecipientsFieldMetaDropdown *RecipientUpdateDocumentRecipientsFieldMetaDropdown `queryParam:"inline,name=fieldMeta"`

	Type RecipientUpdateDocumentRecipientsFieldMetaUnionType
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaInitials(recipientUpdateDocumentRecipientsFieldMetaInitials RecipientUpdateDocumentRecipientsFieldMetaInitials) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaInitials

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaInitials: &recipientUpdateDocumentRecipientsFieldMetaInitials,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaName(recipientUpdateDocumentRecipientsFieldMetaName RecipientUpdateDocumentRecipientsFieldMetaName) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaName

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaName: &recipientUpdateDocumentRecipientsFieldMetaName,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaEmail(recipientUpdateDocumentRecipientsFieldMetaEmail RecipientUpdateDocumentRecipientsFieldMetaEmail) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaEmail

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaEmail: &recipientUpdateDocumentRecipientsFieldMetaEmail,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaDate(recipientUpdateDocumentRecipientsFieldMetaDate RecipientUpdateDocumentRecipientsFieldMetaDate) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaDate

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaDate: &recipientUpdateDocumentRecipientsFieldMetaDate,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaText(recipientUpdateDocumentRecipientsFieldMetaText RecipientUpdateDocumentRecipientsFieldMetaText) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaText

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaText: &recipientUpdateDocumentRecipientsFieldMetaText,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaNumber(recipientUpdateDocumentRecipientsFieldMetaNumber RecipientUpdateDocumentRecipientsFieldMetaNumber) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaNumber

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaNumber: &recipientUpdateDocumentRecipientsFieldMetaNumber,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaRadio(recipientUpdateDocumentRecipientsFieldMetaRadio RecipientUpdateDocumentRecipientsFieldMetaRadio) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaRadio

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaRadio: &recipientUpdateDocumentRecipientsFieldMetaRadio,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaCheckbox(recipientUpdateDocumentRecipientsFieldMetaCheckbox RecipientUpdateDocumentRecipientsFieldMetaCheckbox) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaCheckbox

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaCheckbox: &recipientUpdateDocumentRecipientsFieldMetaCheckbox,
		Type: typ,
	}
}

func CreateRecipientUpdateDocumentRecipientsFieldMetaUnionRecipientUpdateDocumentRecipientsFieldMetaDropdown(recipientUpdateDocumentRecipientsFieldMetaDropdown RecipientUpdateDocumentRecipientsFieldMetaDropdown) RecipientUpdateDocumentRecipientsFieldMetaUnion {
	typ := RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaDropdown

	return RecipientUpdateDocumentRecipientsFieldMetaUnion{
		RecipientUpdateDocumentRecipientsFieldMetaDropdown: &recipientUpdateDocumentRecipientsFieldMetaDropdown,
		Type: typ,
	}
}

func (u *RecipientUpdateDocumentRecipientsFieldMetaUnion) UnmarshalJSON(data []byte) error {

	var recipientUpdateDocumentRecipientsFieldMetaInitials RecipientUpdateDocumentRecipientsFieldMetaInitials = RecipientUpdateDocumentRecipientsFieldMetaInitials{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaInitials, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaInitials = &recipientUpdateDocumentRecipientsFieldMetaInitials
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaInitials
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaName RecipientUpdateDocumentRecipientsFieldMetaName = RecipientUpdateDocumentRecipientsFieldMetaName{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaName, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaName = &recipientUpdateDocumentRecipientsFieldMetaName
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaName
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaEmail RecipientUpdateDocumentRecipientsFieldMetaEmail = RecipientUpdateDocumentRecipientsFieldMetaEmail{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaEmail, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaEmail = &recipientUpdateDocumentRecipientsFieldMetaEmail
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaEmail
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaDate RecipientUpdateDocumentRecipientsFieldMetaDate = RecipientUpdateDocumentRecipientsFieldMetaDate{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaDate, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaDate = &recipientUpdateDocumentRecipientsFieldMetaDate
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaDate
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaText RecipientUpdateDocumentRecipientsFieldMetaText = RecipientUpdateDocumentRecipientsFieldMetaText{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaText, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaText = &recipientUpdateDocumentRecipientsFieldMetaText
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaText
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaNumber RecipientUpdateDocumentRecipientsFieldMetaNumber = RecipientUpdateDocumentRecipientsFieldMetaNumber{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaNumber, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaNumber = &recipientUpdateDocumentRecipientsFieldMetaNumber
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaNumber
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaRadio RecipientUpdateDocumentRecipientsFieldMetaRadio = RecipientUpdateDocumentRecipientsFieldMetaRadio{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaRadio, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaRadio = &recipientUpdateDocumentRecipientsFieldMetaRadio
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaRadio
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaCheckbox RecipientUpdateDocumentRecipientsFieldMetaCheckbox = RecipientUpdateDocumentRecipientsFieldMetaCheckbox{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaCheckbox, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaCheckbox = &recipientUpdateDocumentRecipientsFieldMetaCheckbox
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaCheckbox
		return nil
	}

	var recipientUpdateDocumentRecipientsFieldMetaDropdown RecipientUpdateDocumentRecipientsFieldMetaDropdown = RecipientUpdateDocumentRecipientsFieldMetaDropdown{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateDocumentRecipientsFieldMetaDropdown, "", true, nil); err == nil {
		u.RecipientUpdateDocumentRecipientsFieldMetaDropdown = &recipientUpdateDocumentRecipientsFieldMetaDropdown
		u.Type = RecipientUpdateDocumentRecipientsFieldMetaUnionTypeRecipientUpdateDocumentRecipientsFieldMetaDropdown
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientUpdateDocumentRecipientsFieldMetaUnion", string(data))
}

func (u RecipientUpdateDocumentRecipientsFieldMetaUnion) MarshalJSON() ([]byte, error) {
	if u.RecipientUpdateDocumentRecipientsFieldMetaInitials != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaInitials, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaName != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaName, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaEmail != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaEmail, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaDate != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaDate, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaText != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaText, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaNumber != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaNumber, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaRadio != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaRadio, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaCheckbox != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaCheckbox, "", true)
	}

	if u.RecipientUpdateDocumentRecipientsFieldMetaDropdown != nil {
		return utils.MarshalJSON(u.RecipientUpdateDocumentRecipientsFieldMetaDropdown, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientUpdateDocumentRecipientsFieldMetaUnion: all fields are null")
}

type RecipientUpdateDocumentRecipientsField struct {
	EnvelopeID     string                                `json:"envelopeId"`
	EnvelopeItemID string                                `json:"envelopeItemId"`
	Type           RecipientUpdateDocumentRecipientsType `json:"type"`
	ID             float64                               `json:"id"`
	SecondaryID    string                                `json:"secondaryId"`
	RecipientID    float64                               `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                          `json:"page"`
	PositionX  any                                              `json:"positionX,omitempty"`
	PositionY  any                                              `json:"positionY,omitempty"`
	Width      any                                              `json:"width,omitempty"`
	Height     any                                              `json:"height,omitempty"`
	CustomText string                                           `json:"customText"`
	Inserted   bool                                             `json:"inserted"`
	FieldMeta  *RecipientUpdateDocumentRecipientsFieldMetaUnion `json:"fieldMeta"`
	DocumentID *float64                                         `json:"documentId,omitempty"`
	TemplateID *float64                                         `json:"templateId,omitempty"`
}

func (r *RecipientUpdateDocumentRecipientsField) GetEnvelopeID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeID
}

func (r *RecipientUpdateDocumentRecipientsField) GetEnvelopeItemID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeItemID
}

func (r *RecipientUpdateDocumentRecipientsField) GetType() RecipientUpdateDocumentRecipientsType {
	if r == nil {
		return RecipientUpdateDocumentRecipientsType("")
	}
	return r.Type
}

func (r *RecipientUpdateDocumentRecipientsField) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateDocumentRecipientsField) GetSecondaryID() string {
	if r == nil {
		return ""
	}
	return r.SecondaryID
}

func (r *RecipientUpdateDocumentRecipientsField) GetRecipientID() float64 {
	if r == nil {
		return 0.0
	}
	return r.RecipientID
}

func (r *RecipientUpdateDocumentRecipientsField) GetPage() float64 {
	if r == nil {
		return 0.0
	}
	return r.Page
}

func (r *RecipientUpdateDocumentRecipientsField) GetPositionX() any {
	if r == nil {
		return nil
	}
	return r.PositionX
}

func (r *RecipientUpdateDocumentRecipientsField) GetPositionY() any {
	if r == nil {
		return nil
	}
	return r.PositionY
}

func (r *RecipientUpdateDocumentRecipientsField) GetWidth() any {
	if r == nil {
		return nil
	}
	return r.Width
}

func (r *RecipientUpdateDocumentRecipientsField) GetHeight() any {
	if r == nil {
		return nil
	}
	return r.Height
}

func (r *RecipientUpdateDocumentRecipientsField) GetCustomText() string {
	if r == nil {
		return ""
	}
	return r.CustomText
}

func (r *RecipientUpdateDocumentRecipientsField) GetInserted() bool {
	if r == nil {
		return false
	}
	return r.Inserted
}

func (r *RecipientUpdateDocumentRecipientsField) GetFieldMeta() *RecipientUpdateDocumentRecipientsFieldMetaUnion {
	if r == nil {
		return nil
	}
	return r.FieldMeta
}

func (r *RecipientUpdateDocumentRecipientsField) GetDocumentID() *float64 {
	if r == nil {
		return nil
	}
	return r.DocumentID
}

func (r *RecipientUpdateDocumentRecipientsField) GetTemplateID() *float64 {
	if r == nil {
		return nil
	}
	return r.TemplateID
}

type RecipientUpdateDocumentRecipientsRecipientResponse struct {
	EnvelopeID        string                                         `json:"envelopeId"`
	Role              RecipientUpdateDocumentRecipientsRoleResponse  `json:"role"`
	ReadStatus        RecipientUpdateDocumentRecipientsReadStatus    `json:"readStatus"`
	SigningStatus     RecipientUpdateDocumentRecipientsSigningStatus `json:"signingStatus"`
	SendStatus        RecipientUpdateDocumentRecipientsSendStatus    `json:"sendStatus"`
	ID                float64                                        `json:"id"`
	Email             string                                         `json:"email"`
	Name              string                                         `json:"name"`
	Token             string                                         `json:"token"`
	DocumentDeletedAt *string                                        `json:"documentDeletedAt"`
	Expired           *string                                        `json:"expired"`
	SignedAt          *string                                        `json:"signedAt"`
	AuthOptions       *RecipientUpdateDocumentRecipientsAuthOptions  `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                                 `json:"signingOrder"`
	RejectionReason *string                                  `json:"rejectionReason"`
	Fields          []RecipientUpdateDocumentRecipientsField `json:"fields"`
	DocumentID      *float64                                 `json:"documentId,omitempty"`
	TemplateID      *float64                                 `json:"templateId,omitempty"`
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetEnvelopeID() string {
	if r == nil {
		return ""
	}
	return r.EnvelopeID
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetRole() RecipientUpdateDocumentRecipientsRoleResponse {
	if r == nil {
		return RecipientUpdateDocumentRecipientsRoleResponse("")
	}
	return r.Role
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetReadStatus() RecipientUpdateDocumentRecipientsReadStatus {
	if r == nil {
		return RecipientUpdateDocumentRecipientsReadStatus("")
	}
	return r.ReadStatus
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetSigningStatus() RecipientUpdateDocumentRecipientsSigningStatus {
	if r == nil {
		return RecipientUpdateDocumentRecipientsSigningStatus("")
	}
	return r.SigningStatus
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetSendStatus() RecipientUpdateDocumentRecipientsSendStatus {
	if r == nil {
		return RecipientUpdateDocumentRecipientsSendStatus("")
	}
	return r.SendStatus
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetID() float64 {
	if r == nil {
		return 0.0
	}
	return r.ID
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetEmail() string {
	if r == nil {
		return ""
	}
	return r.Email
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetName() string {
	if r == nil {
		return ""
	}
	return r.Name
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetToken() string {
	if r == nil {
		return ""
	}
	return r.Token
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetDocumentDeletedAt() *string {
	if r == nil {
		return nil
	}
	return r.DocumentDeletedAt
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetExpired() *string {
	if r == nil {
		return nil
	}
	return r.Expired
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetSignedAt() *string {
	if r == nil {
		return nil
	}
	return r.SignedAt
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetAuthOptions() *RecipientUpdateDocumentRecipientsAuthOptions {
	if r == nil {
		return nil
	}
	return r.AuthOptions
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetSigningOrder() *float64 {
	if r == nil {
		return nil
	}
	return r.SigningOrder
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetRejectionReason() *string {
	if r == nil {
		return nil
	}
	return r.RejectionReason
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetFields() []RecipientUpdateDocumentRecipientsField {
	if r == nil {
		return []RecipientUpdateDocumentRecipientsField{}
	}
	return r.Fields
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetDocumentID() *float64 {
	if r == nil {
		return nil
	}
	return r.DocumentID
}

func (r *RecipientUpdateDocumentRecipientsRecipientResponse) GetTemplateID() *float64 {
	if r == nil {
		return nil
	}
	return r.TemplateID
}

// RecipientUpdateDocumentRecipientsResponseBody - Successful response
type RecipientUpdateDocumentRecipientsResponseBody struct {
	Recipients []RecipientUpdateDocumentRecipientsRecipientResponse `json:"recipients"`
}

func (r *RecipientUpdateDocumentRecipientsResponseBody) GetRecipients() []RecipientUpdateDocumentRecipientsRecipientResponse {
	if r == nil {
		return []RecipientUpdateDocumentRecipientsRecipientResponse{}
	}
	return r.Recipients
}

type RecipientUpdateDocumentRecipientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientUpdateDocumentRecipientsResponseBody
}

func (r *RecipientUpdateDocumentRecipientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *RecipientUpdateDocumentRecipientsResponse) GetObject() *RecipientUpdateDocumentRecipientsResponseBody {
	if r == nil {
		return nil
	}
	return r.Object
}
