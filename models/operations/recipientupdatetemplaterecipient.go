// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/documenso/sdk-go/internal/utils"
	"github.com/documenso/sdk-go/models/components"
)

type RecipientUpdateTemplateRecipientRoleRequestBody string

const (
	RecipientUpdateTemplateRecipientRoleRequestBodyCc        RecipientUpdateTemplateRecipientRoleRequestBody = "CC"
	RecipientUpdateTemplateRecipientRoleRequestBodySigner    RecipientUpdateTemplateRecipientRoleRequestBody = "SIGNER"
	RecipientUpdateTemplateRecipientRoleRequestBodyViewer    RecipientUpdateTemplateRecipientRoleRequestBody = "VIEWER"
	RecipientUpdateTemplateRecipientRoleRequestBodyApprover  RecipientUpdateTemplateRecipientRoleRequestBody = "APPROVER"
	RecipientUpdateTemplateRecipientRoleRequestBodyAssistant RecipientUpdateTemplateRecipientRoleRequestBody = "ASSISTANT"
)

func (e RecipientUpdateTemplateRecipientRoleRequestBody) ToPointer() *RecipientUpdateTemplateRecipientRoleRequestBody {
	return &e
}
func (e *RecipientUpdateTemplateRecipientRoleRequestBody) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientUpdateTemplateRecipientRoleRequestBody(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientRoleRequestBody: %v", v)
	}
}

// RecipientUpdateTemplateRecipientAccessAuthRequestBody - The type of authentication required for the recipient to access the document.
type RecipientUpdateTemplateRecipientAccessAuthRequestBody string

const (
	RecipientUpdateTemplateRecipientAccessAuthRequestBodyAccount RecipientUpdateTemplateRecipientAccessAuthRequestBody = "ACCOUNT"
)

func (e RecipientUpdateTemplateRecipientAccessAuthRequestBody) ToPointer() *RecipientUpdateTemplateRecipientAccessAuthRequestBody {
	return &e
}
func (e *RecipientUpdateTemplateRecipientAccessAuthRequestBody) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateTemplateRecipientAccessAuthRequestBody(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientAccessAuthRequestBody: %v", v)
	}
}

// RecipientUpdateTemplateRecipientActionAuthRequestBody - The type of authentication required for the recipient to sign the document.
type RecipientUpdateTemplateRecipientActionAuthRequestBody string

const (
	RecipientUpdateTemplateRecipientActionAuthRequestBodyAccount       RecipientUpdateTemplateRecipientActionAuthRequestBody = "ACCOUNT"
	RecipientUpdateTemplateRecipientActionAuthRequestBodyPasskey       RecipientUpdateTemplateRecipientActionAuthRequestBody = "PASSKEY"
	RecipientUpdateTemplateRecipientActionAuthRequestBodyTwoFactorAuth RecipientUpdateTemplateRecipientActionAuthRequestBody = "TWO_FACTOR_AUTH"
	RecipientUpdateTemplateRecipientActionAuthRequestBodyExplicitNone  RecipientUpdateTemplateRecipientActionAuthRequestBody = "EXPLICIT_NONE"
)

func (e RecipientUpdateTemplateRecipientActionAuthRequestBody) ToPointer() *RecipientUpdateTemplateRecipientActionAuthRequestBody {
	return &e
}
func (e *RecipientUpdateTemplateRecipientActionAuthRequestBody) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateTemplateRecipientActionAuthRequestBody(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientActionAuthRequestBody: %v", v)
	}
}

type RecipientUpdateTemplateRecipientRecipient struct {
	// The ID of the recipient to update.
	ID           float64                                          `json:"id"`
	Email        *string                                          `json:"email,omitempty"`
	Name         *string                                          `json:"name,omitempty"`
	Role         *RecipientUpdateTemplateRecipientRoleRequestBody `json:"role,omitempty"`
	SigningOrder *float64                                         `json:"signingOrder,omitempty"`
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateTemplateRecipientAccessAuthRequestBody `json:"accessAuth,omitempty"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateTemplateRecipientActionAuthRequestBody `json:"actionAuth,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetRole() *RecipientUpdateTemplateRecipientRoleRequestBody {
	if o == nil {
		return nil
	}
	return o.Role
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetAccessAuth() *RecipientUpdateTemplateRecipientAccessAuthRequestBody {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateTemplateRecipientRecipient) GetActionAuth() *RecipientUpdateTemplateRecipientActionAuthRequestBody {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateTemplateRecipientRequest struct {
	TemplateID float64                                   `json:"templateId"`
	Recipient  RecipientUpdateTemplateRecipientRecipient `json:"recipient"`
}

func (o *RecipientUpdateTemplateRecipientRequest) GetTemplateID() float64 {
	if o == nil {
		return 0.0
	}
	return o.TemplateID
}

func (o *RecipientUpdateTemplateRecipientRequest) GetRecipient() RecipientUpdateTemplateRecipientRecipient {
	if o == nil {
		return RecipientUpdateTemplateRecipientRecipient{}
	}
	return o.Recipient
}

type RecipientUpdateTemplateRecipientRoleResponse string

const (
	RecipientUpdateTemplateRecipientRoleResponseCc        RecipientUpdateTemplateRecipientRoleResponse = "CC"
	RecipientUpdateTemplateRecipientRoleResponseSigner    RecipientUpdateTemplateRecipientRoleResponse = "SIGNER"
	RecipientUpdateTemplateRecipientRoleResponseViewer    RecipientUpdateTemplateRecipientRoleResponse = "VIEWER"
	RecipientUpdateTemplateRecipientRoleResponseApprover  RecipientUpdateTemplateRecipientRoleResponse = "APPROVER"
	RecipientUpdateTemplateRecipientRoleResponseAssistant RecipientUpdateTemplateRecipientRoleResponse = "ASSISTANT"
)

func (e RecipientUpdateTemplateRecipientRoleResponse) ToPointer() *RecipientUpdateTemplateRecipientRoleResponse {
	return &e
}
func (e *RecipientUpdateTemplateRecipientRoleResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CC":
		fallthrough
	case "SIGNER":
		fallthrough
	case "VIEWER":
		fallthrough
	case "APPROVER":
		fallthrough
	case "ASSISTANT":
		*e = RecipientUpdateTemplateRecipientRoleResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientRoleResponse: %v", v)
	}
}

type RecipientUpdateTemplateRecipientReadStatus string

const (
	RecipientUpdateTemplateRecipientReadStatusNotOpened RecipientUpdateTemplateRecipientReadStatus = "NOT_OPENED"
	RecipientUpdateTemplateRecipientReadStatusOpened    RecipientUpdateTemplateRecipientReadStatus = "OPENED"
)

func (e RecipientUpdateTemplateRecipientReadStatus) ToPointer() *RecipientUpdateTemplateRecipientReadStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientReadStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_OPENED":
		fallthrough
	case "OPENED":
		*e = RecipientUpdateTemplateRecipientReadStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientReadStatus: %v", v)
	}
}

type RecipientUpdateTemplateRecipientSigningStatus string

const (
	RecipientUpdateTemplateRecipientSigningStatusNotSigned RecipientUpdateTemplateRecipientSigningStatus = "NOT_SIGNED"
	RecipientUpdateTemplateRecipientSigningStatusSigned    RecipientUpdateTemplateRecipientSigningStatus = "SIGNED"
	RecipientUpdateTemplateRecipientSigningStatusRejected  RecipientUpdateTemplateRecipientSigningStatus = "REJECTED"
)

func (e RecipientUpdateTemplateRecipientSigningStatus) ToPointer() *RecipientUpdateTemplateRecipientSigningStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientSigningStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SIGNED":
		fallthrough
	case "SIGNED":
		fallthrough
	case "REJECTED":
		*e = RecipientUpdateTemplateRecipientSigningStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientSigningStatus: %v", v)
	}
}

type RecipientUpdateTemplateRecipientSendStatus string

const (
	RecipientUpdateTemplateRecipientSendStatusNotSent RecipientUpdateTemplateRecipientSendStatus = "NOT_SENT"
	RecipientUpdateTemplateRecipientSendStatusSent    RecipientUpdateTemplateRecipientSendStatus = "SENT"
)

func (e RecipientUpdateTemplateRecipientSendStatus) ToPointer() *RecipientUpdateTemplateRecipientSendStatus {
	return &e
}
func (e *RecipientUpdateTemplateRecipientSendStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_SENT":
		fallthrough
	case "SENT":
		*e = RecipientUpdateTemplateRecipientSendStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientSendStatus: %v", v)
	}
}

// RecipientUpdateTemplateRecipientAccessAuthResponse - The type of authentication required for the recipient to access the document.
type RecipientUpdateTemplateRecipientAccessAuthResponse string

const (
	RecipientUpdateTemplateRecipientAccessAuthResponseAccount RecipientUpdateTemplateRecipientAccessAuthResponse = "ACCOUNT"
)

func (e RecipientUpdateTemplateRecipientAccessAuthResponse) ToPointer() *RecipientUpdateTemplateRecipientAccessAuthResponse {
	return &e
}
func (e *RecipientUpdateTemplateRecipientAccessAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		*e = RecipientUpdateTemplateRecipientAccessAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientAccessAuthResponse: %v", v)
	}
}

// RecipientUpdateTemplateRecipientActionAuthResponse - The type of authentication required for the recipient to sign the document.
type RecipientUpdateTemplateRecipientActionAuthResponse string

const (
	RecipientUpdateTemplateRecipientActionAuthResponseAccount       RecipientUpdateTemplateRecipientActionAuthResponse = "ACCOUNT"
	RecipientUpdateTemplateRecipientActionAuthResponsePasskey       RecipientUpdateTemplateRecipientActionAuthResponse = "PASSKEY"
	RecipientUpdateTemplateRecipientActionAuthResponseTwoFactorAuth RecipientUpdateTemplateRecipientActionAuthResponse = "TWO_FACTOR_AUTH"
	RecipientUpdateTemplateRecipientActionAuthResponseExplicitNone  RecipientUpdateTemplateRecipientActionAuthResponse = "EXPLICIT_NONE"
)

func (e RecipientUpdateTemplateRecipientActionAuthResponse) ToPointer() *RecipientUpdateTemplateRecipientActionAuthResponse {
	return &e
}
func (e *RecipientUpdateTemplateRecipientActionAuthResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "PASSKEY":
		fallthrough
	case "TWO_FACTOR_AUTH":
		fallthrough
	case "EXPLICIT_NONE":
		*e = RecipientUpdateTemplateRecipientActionAuthResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientActionAuthResponse: %v", v)
	}
}

type RecipientUpdateTemplateRecipientAuthOptions struct {
	// The type of authentication required for the recipient to access the document.
	AccessAuth *RecipientUpdateTemplateRecipientAccessAuthResponse `json:"accessAuth"`
	// The type of authentication required for the recipient to sign the document.
	ActionAuth *RecipientUpdateTemplateRecipientActionAuthResponse `json:"actionAuth"`
}

func (o *RecipientUpdateTemplateRecipientAuthOptions) GetAccessAuth() *RecipientUpdateTemplateRecipientAccessAuthResponse {
	if o == nil {
		return nil
	}
	return o.AccessAuth
}

func (o *RecipientUpdateTemplateRecipientAuthOptions) GetActionAuth() *RecipientUpdateTemplateRecipientActionAuthResponse {
	if o == nil {
		return nil
	}
	return o.ActionAuth
}

type RecipientUpdateTemplateRecipientType string

const (
	RecipientUpdateTemplateRecipientTypeSignature     RecipientUpdateTemplateRecipientType = "SIGNATURE"
	RecipientUpdateTemplateRecipientTypeFreeSignature RecipientUpdateTemplateRecipientType = "FREE_SIGNATURE"
	RecipientUpdateTemplateRecipientTypeInitials      RecipientUpdateTemplateRecipientType = "INITIALS"
	RecipientUpdateTemplateRecipientTypeName          RecipientUpdateTemplateRecipientType = "NAME"
	RecipientUpdateTemplateRecipientTypeEmail         RecipientUpdateTemplateRecipientType = "EMAIL"
	RecipientUpdateTemplateRecipientTypeDate          RecipientUpdateTemplateRecipientType = "DATE"
	RecipientUpdateTemplateRecipientTypeText          RecipientUpdateTemplateRecipientType = "TEXT"
	RecipientUpdateTemplateRecipientTypeNumber        RecipientUpdateTemplateRecipientType = "NUMBER"
	RecipientUpdateTemplateRecipientTypeRadio         RecipientUpdateTemplateRecipientType = "RADIO"
	RecipientUpdateTemplateRecipientTypeCheckbox      RecipientUpdateTemplateRecipientType = "CHECKBOX"
	RecipientUpdateTemplateRecipientTypeDropdown      RecipientUpdateTemplateRecipientType = "DROPDOWN"
)

func (e RecipientUpdateTemplateRecipientType) ToPointer() *RecipientUpdateTemplateRecipientType {
	return &e
}
func (e *RecipientUpdateTemplateRecipientType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGNATURE":
		fallthrough
	case "FREE_SIGNATURE":
		fallthrough
	case "INITIALS":
		fallthrough
	case "NAME":
		fallthrough
	case "EMAIL":
		fallthrough
	case "DATE":
		fallthrough
	case "TEXT":
		fallthrough
	case "NUMBER":
		fallthrough
	case "RADIO":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "DROPDOWN":
		*e = RecipientUpdateTemplateRecipientType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientType: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaTypeDropdown string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeDropdownDropdown RecipientUpdateTemplateRecipientFieldMetaTypeDropdown = "dropdown"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeDropdown) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeDropdown {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeDropdown) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropdown":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeDropdown(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeDropdown: %v", v)
	}
}

type RecipientUpdateTemplateRecipientValue3 struct {
	Value string `json:"value"`
}

func (o *RecipientUpdateTemplateRecipientValue3) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateTemplateRecipientFieldMetaDropdown struct {
	Label        *string                                               `json:"label,omitempty"`
	Placeholder  *string                                               `json:"placeholder,omitempty"`
	Required     *bool                                                 `json:"required,omitempty"`
	ReadOnly     *bool                                                 `json:"readOnly,omitempty"`
	Type         RecipientUpdateTemplateRecipientFieldMetaTypeDropdown `json:"type"`
	Values       []RecipientUpdateTemplateRecipientValue3              `json:"values,omitempty"`
	DefaultValue *string                                               `json:"defaultValue,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeDropdown {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeDropdown("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetValues() []RecipientUpdateTemplateRecipientValue3 {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDropdown) GetDefaultValue() *string {
	if o == nil {
		return nil
	}
	return o.DefaultValue
}

type RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeCheckboxCheckbox RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox = "checkbox"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checkbox":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox: %v", v)
	}
}

type RecipientUpdateTemplateRecipientValue2 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateTemplateRecipientValue2) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientValue2) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateTemplateRecipientValue2) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateTemplateRecipientFieldMetaCheckbox struct {
	Label            *string                                               `json:"label,omitempty"`
	Placeholder      *string                                               `json:"placeholder,omitempty"`
	Required         *bool                                                 `json:"required,omitempty"`
	ReadOnly         *bool                                                 `json:"readOnly,omitempty"`
	Type             RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox `json:"type"`
	Values           []RecipientUpdateTemplateRecipientValue2              `json:"values,omitempty"`
	ValidationRule   *string                                               `json:"validationRule,omitempty"`
	ValidationLength *float64                                              `json:"validationLength,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeCheckbox("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetValues() []RecipientUpdateTemplateRecipientValue2 {
	if o == nil {
		return nil
	}
	return o.Values
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetValidationRule() *string {
	if o == nil {
		return nil
	}
	return o.ValidationRule
}

func (o *RecipientUpdateTemplateRecipientFieldMetaCheckbox) GetValidationLength() *float64 {
	if o == nil {
		return nil
	}
	return o.ValidationLength
}

type RecipientUpdateTemplateRecipientFieldMetaTypeRadio string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeRadioRadio RecipientUpdateTemplateRecipientFieldMetaTypeRadio = "radio"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeRadio) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeRadio {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeRadio) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radio":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeRadio(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeRadio: %v", v)
	}
}

type RecipientUpdateTemplateRecipientValue1 struct {
	ID      float64 `json:"id"`
	Checked bool    `json:"checked"`
	Value   string  `json:"value"`
}

func (o *RecipientUpdateTemplateRecipientValue1) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientValue1) GetChecked() bool {
	if o == nil {
		return false
	}
	return o.Checked
}

func (o *RecipientUpdateTemplateRecipientValue1) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

type RecipientUpdateTemplateRecipientFieldMetaRadio struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientFieldMetaTypeRadio `json:"type"`
	Values      []RecipientUpdateTemplateRecipientValue1           `json:"values,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaRadio) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaRadio) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaRadio) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaRadio) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaRadio) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeRadio {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeRadio("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaRadio) GetValues() []RecipientUpdateTemplateRecipientValue1 {
	if o == nil {
		return nil
	}
	return o.Values
}

type RecipientUpdateTemplateRecipientFieldMetaTypeNumber string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeNumberNumber RecipientUpdateTemplateRecipientFieldMetaTypeNumber = "number"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeNumber) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeNumber {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeNumber) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "number":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeNumber(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeNumber: %v", v)
	}
}

type RecipientUpdateTemplateRecipientTextAlign6 string

const (
	RecipientUpdateTemplateRecipientTextAlign6Left   RecipientUpdateTemplateRecipientTextAlign6 = "left"
	RecipientUpdateTemplateRecipientTextAlign6Center RecipientUpdateTemplateRecipientTextAlign6 = "center"
	RecipientUpdateTemplateRecipientTextAlign6Right  RecipientUpdateTemplateRecipientTextAlign6 = "right"
)

func (e RecipientUpdateTemplateRecipientTextAlign6) ToPointer() *RecipientUpdateTemplateRecipientTextAlign6 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientTextAlign6) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientTextAlign6(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientTextAlign6: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaNumber struct {
	Label        *string                                             `json:"label,omitempty"`
	Placeholder  *string                                             `json:"placeholder,omitempty"`
	Required     *bool                                               `json:"required,omitempty"`
	ReadOnly     *bool                                               `json:"readOnly,omitempty"`
	Type         RecipientUpdateTemplateRecipientFieldMetaTypeNumber `json:"type"`
	NumberFormat *string                                             `json:"numberFormat,omitempty"`
	Value        *string                                             `json:"value,omitempty"`
	MinValue     *float64                                            `json:"minValue,omitempty"`
	MaxValue     *float64                                            `json:"maxValue,omitempty"`
	FontSize     *float64                                            `json:"fontSize,omitempty"`
	TextAlign    *RecipientUpdateTemplateRecipientTextAlign6         `json:"textAlign,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeNumber {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeNumber("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetNumberFormat() *string {
	if o == nil {
		return nil
	}
	return o.NumberFormat
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetValue() *string {
	if o == nil {
		return nil
	}
	return o.Value
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetMinValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MinValue
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetMaxValue() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxValue
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientUpdateTemplateRecipientFieldMetaNumber) GetTextAlign() *RecipientUpdateTemplateRecipientTextAlign6 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientUpdateTemplateRecipientFieldMetaTypeText string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeTextText RecipientUpdateTemplateRecipientFieldMetaTypeText = "text"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeText) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeText {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeText) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeText(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeText: %v", v)
	}
}

type RecipientUpdateTemplateRecipientTextAlign5 string

const (
	RecipientUpdateTemplateRecipientTextAlign5Left   RecipientUpdateTemplateRecipientTextAlign5 = "left"
	RecipientUpdateTemplateRecipientTextAlign5Center RecipientUpdateTemplateRecipientTextAlign5 = "center"
	RecipientUpdateTemplateRecipientTextAlign5Right  RecipientUpdateTemplateRecipientTextAlign5 = "right"
)

func (e RecipientUpdateTemplateRecipientTextAlign5) ToPointer() *RecipientUpdateTemplateRecipientTextAlign5 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientTextAlign5) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientTextAlign5(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientTextAlign5: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaText struct {
	Label          *string                                           `json:"label,omitempty"`
	Placeholder    *string                                           `json:"placeholder,omitempty"`
	Required       *bool                                             `json:"required,omitempty"`
	ReadOnly       *bool                                             `json:"readOnly,omitempty"`
	Type           RecipientUpdateTemplateRecipientFieldMetaTypeText `json:"type"`
	Text           *string                                           `json:"text,omitempty"`
	CharacterLimit *float64                                          `json:"characterLimit,omitempty"`
	FontSize       *float64                                          `json:"fontSize,omitempty"`
	TextAlign      *RecipientUpdateTemplateRecipientTextAlign5       `json:"textAlign,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeText {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeText("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetCharacterLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.CharacterLimit
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientUpdateTemplateRecipientFieldMetaText) GetTextAlign() *RecipientUpdateTemplateRecipientTextAlign5 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientUpdateTemplateRecipientFieldMetaTypeDate string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeDateDate RecipientUpdateTemplateRecipientFieldMetaTypeDate = "date"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeDate) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeDate {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeDate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "date":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeDate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeDate: %v", v)
	}
}

type RecipientUpdateTemplateRecipientTextAlign4 string

const (
	RecipientUpdateTemplateRecipientTextAlign4Left   RecipientUpdateTemplateRecipientTextAlign4 = "left"
	RecipientUpdateTemplateRecipientTextAlign4Center RecipientUpdateTemplateRecipientTextAlign4 = "center"
	RecipientUpdateTemplateRecipientTextAlign4Right  RecipientUpdateTemplateRecipientTextAlign4 = "right"
)

func (e RecipientUpdateTemplateRecipientTextAlign4) ToPointer() *RecipientUpdateTemplateRecipientTextAlign4 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientTextAlign4) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientTextAlign4(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientTextAlign4: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaDate struct {
	Label       *string                                           `json:"label,omitempty"`
	Placeholder *string                                           `json:"placeholder,omitempty"`
	Required    *bool                                             `json:"required,omitempty"`
	ReadOnly    *bool                                             `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientFieldMetaTypeDate `json:"type"`
	FontSize    *float64                                          `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientTextAlign4       `json:"textAlign,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeDate {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeDate("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientUpdateTemplateRecipientFieldMetaDate) GetTextAlign() *RecipientUpdateTemplateRecipientTextAlign4 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientUpdateTemplateRecipientFieldMetaTypeEmail string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeEmailEmail RecipientUpdateTemplateRecipientFieldMetaTypeEmail = "email"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeEmail) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeEmail {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeEmail) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeEmail(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeEmail: %v", v)
	}
}

type RecipientUpdateTemplateRecipientTextAlign3 string

const (
	RecipientUpdateTemplateRecipientTextAlign3Left   RecipientUpdateTemplateRecipientTextAlign3 = "left"
	RecipientUpdateTemplateRecipientTextAlign3Center RecipientUpdateTemplateRecipientTextAlign3 = "center"
	RecipientUpdateTemplateRecipientTextAlign3Right  RecipientUpdateTemplateRecipientTextAlign3 = "right"
)

func (e RecipientUpdateTemplateRecipientTextAlign3) ToPointer() *RecipientUpdateTemplateRecipientTextAlign3 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientTextAlign3) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientTextAlign3(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientTextAlign3: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaEmail struct {
	Label       *string                                            `json:"label,omitempty"`
	Placeholder *string                                            `json:"placeholder,omitempty"`
	Required    *bool                                              `json:"required,omitempty"`
	ReadOnly    *bool                                              `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientFieldMetaTypeEmail `json:"type"`
	FontSize    *float64                                           `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientTextAlign3        `json:"textAlign,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeEmail {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeEmail("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientUpdateTemplateRecipientFieldMetaEmail) GetTextAlign() *RecipientUpdateTemplateRecipientTextAlign3 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientUpdateTemplateRecipientFieldMetaTypeName string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeNameName RecipientUpdateTemplateRecipientFieldMetaTypeName = "name"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeName) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeName {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeName: %v", v)
	}
}

type RecipientUpdateTemplateRecipientTextAlign2 string

const (
	RecipientUpdateTemplateRecipientTextAlign2Left   RecipientUpdateTemplateRecipientTextAlign2 = "left"
	RecipientUpdateTemplateRecipientTextAlign2Center RecipientUpdateTemplateRecipientTextAlign2 = "center"
	RecipientUpdateTemplateRecipientTextAlign2Right  RecipientUpdateTemplateRecipientTextAlign2 = "right"
)

func (e RecipientUpdateTemplateRecipientTextAlign2) ToPointer() *RecipientUpdateTemplateRecipientTextAlign2 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientTextAlign2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientTextAlign2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientTextAlign2: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaName struct {
	Label       *string                                           `json:"label,omitempty"`
	Placeholder *string                                           `json:"placeholder,omitempty"`
	Required    *bool                                             `json:"required,omitempty"`
	ReadOnly    *bool                                             `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientFieldMetaTypeName `json:"type"`
	FontSize    *float64                                          `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientTextAlign2       `json:"textAlign,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeName {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeName("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientUpdateTemplateRecipientFieldMetaName) GetTextAlign() *RecipientUpdateTemplateRecipientTextAlign2 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientUpdateTemplateRecipientFieldMetaTypeInitials string

const (
	RecipientUpdateTemplateRecipientFieldMetaTypeInitialsInitials RecipientUpdateTemplateRecipientFieldMetaTypeInitials = "initials"
)

func (e RecipientUpdateTemplateRecipientFieldMetaTypeInitials) ToPointer() *RecipientUpdateTemplateRecipientFieldMetaTypeInitials {
	return &e
}
func (e *RecipientUpdateTemplateRecipientFieldMetaTypeInitials) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initials":
		*e = RecipientUpdateTemplateRecipientFieldMetaTypeInitials(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientFieldMetaTypeInitials: %v", v)
	}
}

type RecipientUpdateTemplateRecipientTextAlign1 string

const (
	RecipientUpdateTemplateRecipientTextAlign1Left   RecipientUpdateTemplateRecipientTextAlign1 = "left"
	RecipientUpdateTemplateRecipientTextAlign1Center RecipientUpdateTemplateRecipientTextAlign1 = "center"
	RecipientUpdateTemplateRecipientTextAlign1Right  RecipientUpdateTemplateRecipientTextAlign1 = "right"
)

func (e RecipientUpdateTemplateRecipientTextAlign1) ToPointer() *RecipientUpdateTemplateRecipientTextAlign1 {
	return &e
}
func (e *RecipientUpdateTemplateRecipientTextAlign1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "left":
		fallthrough
	case "center":
		fallthrough
	case "right":
		*e = RecipientUpdateTemplateRecipientTextAlign1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientUpdateTemplateRecipientTextAlign1: %v", v)
	}
}

type RecipientUpdateTemplateRecipientFieldMetaInitials struct {
	Label       *string                                               `json:"label,omitempty"`
	Placeholder *string                                               `json:"placeholder,omitempty"`
	Required    *bool                                                 `json:"required,omitempty"`
	ReadOnly    *bool                                                 `json:"readOnly,omitempty"`
	Type        RecipientUpdateTemplateRecipientFieldMetaTypeInitials `json:"type"`
	FontSize    *float64                                              `json:"fontSize,omitempty"`
	TextAlign   *RecipientUpdateTemplateRecipientTextAlign1           `json:"textAlign,omitempty"`
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetReadOnly() *bool {
	if o == nil {
		return nil
	}
	return o.ReadOnly
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetType() RecipientUpdateTemplateRecipientFieldMetaTypeInitials {
	if o == nil {
		return RecipientUpdateTemplateRecipientFieldMetaTypeInitials("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetFontSize() *float64 {
	if o == nil {
		return nil
	}
	return o.FontSize
}

func (o *RecipientUpdateTemplateRecipientFieldMetaInitials) GetTextAlign() *RecipientUpdateTemplateRecipientTextAlign1 {
	if o == nil {
		return nil
	}
	return o.TextAlign
}

type RecipientUpdateTemplateRecipientFieldMetaUnionType string

const (
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaInitials RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Initials"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaName     RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Name"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaEmail    RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Email"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaDate     RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Date"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaText     RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Text"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaNumber   RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Number"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaRadio    RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Radio"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaCheckbox RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Checkbox"
	RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaDropdown RecipientUpdateTemplateRecipientFieldMetaUnionType = "recipient_updateTemplateRecipient_fieldMeta_Dropdown"
)

type RecipientUpdateTemplateRecipientFieldMetaUnion struct {
	RecipientUpdateTemplateRecipientFieldMetaInitials *RecipientUpdateTemplateRecipientFieldMetaInitials `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaName     *RecipientUpdateTemplateRecipientFieldMetaName     `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaEmail    *RecipientUpdateTemplateRecipientFieldMetaEmail    `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaDate     *RecipientUpdateTemplateRecipientFieldMetaDate     `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaText     *RecipientUpdateTemplateRecipientFieldMetaText     `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaNumber   *RecipientUpdateTemplateRecipientFieldMetaNumber   `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaRadio    *RecipientUpdateTemplateRecipientFieldMetaRadio    `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaCheckbox *RecipientUpdateTemplateRecipientFieldMetaCheckbox `queryParam:"inline"`
	RecipientUpdateTemplateRecipientFieldMetaDropdown *RecipientUpdateTemplateRecipientFieldMetaDropdown `queryParam:"inline"`

	Type RecipientUpdateTemplateRecipientFieldMetaUnionType
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaInitials(recipientUpdateTemplateRecipientFieldMetaInitials RecipientUpdateTemplateRecipientFieldMetaInitials) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaInitials

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaInitials: &recipientUpdateTemplateRecipientFieldMetaInitials,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaName(recipientUpdateTemplateRecipientFieldMetaName RecipientUpdateTemplateRecipientFieldMetaName) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaName

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaName: &recipientUpdateTemplateRecipientFieldMetaName,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaEmail(recipientUpdateTemplateRecipientFieldMetaEmail RecipientUpdateTemplateRecipientFieldMetaEmail) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaEmail

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaEmail: &recipientUpdateTemplateRecipientFieldMetaEmail,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaDate(recipientUpdateTemplateRecipientFieldMetaDate RecipientUpdateTemplateRecipientFieldMetaDate) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaDate

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaDate: &recipientUpdateTemplateRecipientFieldMetaDate,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaText(recipientUpdateTemplateRecipientFieldMetaText RecipientUpdateTemplateRecipientFieldMetaText) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaText

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaText: &recipientUpdateTemplateRecipientFieldMetaText,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaNumber(recipientUpdateTemplateRecipientFieldMetaNumber RecipientUpdateTemplateRecipientFieldMetaNumber) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaNumber

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaNumber: &recipientUpdateTemplateRecipientFieldMetaNumber,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaRadio(recipientUpdateTemplateRecipientFieldMetaRadio RecipientUpdateTemplateRecipientFieldMetaRadio) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaRadio

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaRadio: &recipientUpdateTemplateRecipientFieldMetaRadio,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaCheckbox(recipientUpdateTemplateRecipientFieldMetaCheckbox RecipientUpdateTemplateRecipientFieldMetaCheckbox) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaCheckbox

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaCheckbox: &recipientUpdateTemplateRecipientFieldMetaCheckbox,
		Type: typ,
	}
}

func CreateRecipientUpdateTemplateRecipientFieldMetaUnionRecipientUpdateTemplateRecipientFieldMetaDropdown(recipientUpdateTemplateRecipientFieldMetaDropdown RecipientUpdateTemplateRecipientFieldMetaDropdown) RecipientUpdateTemplateRecipientFieldMetaUnion {
	typ := RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaDropdown

	return RecipientUpdateTemplateRecipientFieldMetaUnion{
		RecipientUpdateTemplateRecipientFieldMetaDropdown: &recipientUpdateTemplateRecipientFieldMetaDropdown,
		Type: typ,
	}
}

func (u *RecipientUpdateTemplateRecipientFieldMetaUnion) UnmarshalJSON(data []byte) error {

	var recipientUpdateTemplateRecipientFieldMetaRadio RecipientUpdateTemplateRecipientFieldMetaRadio = RecipientUpdateTemplateRecipientFieldMetaRadio{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaRadio, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaRadio = &recipientUpdateTemplateRecipientFieldMetaRadio
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaRadio
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaInitials RecipientUpdateTemplateRecipientFieldMetaInitials = RecipientUpdateTemplateRecipientFieldMetaInitials{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaInitials, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaInitials = &recipientUpdateTemplateRecipientFieldMetaInitials
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaInitials
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaName RecipientUpdateTemplateRecipientFieldMetaName = RecipientUpdateTemplateRecipientFieldMetaName{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaName, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaName = &recipientUpdateTemplateRecipientFieldMetaName
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaName
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaEmail RecipientUpdateTemplateRecipientFieldMetaEmail = RecipientUpdateTemplateRecipientFieldMetaEmail{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaEmail, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaEmail = &recipientUpdateTemplateRecipientFieldMetaEmail
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaEmail
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaDate RecipientUpdateTemplateRecipientFieldMetaDate = RecipientUpdateTemplateRecipientFieldMetaDate{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaDate, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaDate = &recipientUpdateTemplateRecipientFieldMetaDate
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaDate
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaDropdown RecipientUpdateTemplateRecipientFieldMetaDropdown = RecipientUpdateTemplateRecipientFieldMetaDropdown{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaDropdown, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaDropdown = &recipientUpdateTemplateRecipientFieldMetaDropdown
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaDropdown
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaCheckbox RecipientUpdateTemplateRecipientFieldMetaCheckbox = RecipientUpdateTemplateRecipientFieldMetaCheckbox{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaCheckbox, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaCheckbox = &recipientUpdateTemplateRecipientFieldMetaCheckbox
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaCheckbox
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaText RecipientUpdateTemplateRecipientFieldMetaText = RecipientUpdateTemplateRecipientFieldMetaText{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaText, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaText = &recipientUpdateTemplateRecipientFieldMetaText
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaText
		return nil
	}

	var recipientUpdateTemplateRecipientFieldMetaNumber RecipientUpdateTemplateRecipientFieldMetaNumber = RecipientUpdateTemplateRecipientFieldMetaNumber{}
	if err := utils.UnmarshalJSON(data, &recipientUpdateTemplateRecipientFieldMetaNumber, "", true, true); err == nil {
		u.RecipientUpdateTemplateRecipientFieldMetaNumber = &recipientUpdateTemplateRecipientFieldMetaNumber
		u.Type = RecipientUpdateTemplateRecipientFieldMetaUnionTypeRecipientUpdateTemplateRecipientFieldMetaNumber
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RecipientUpdateTemplateRecipientFieldMetaUnion", string(data))
}

func (u RecipientUpdateTemplateRecipientFieldMetaUnion) MarshalJSON() ([]byte, error) {
	if u.RecipientUpdateTemplateRecipientFieldMetaInitials != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaInitials, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaName != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaName, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaEmail != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaEmail, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaDate != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaDate, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaText != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaText, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaNumber != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaNumber, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaRadio != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaRadio, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaCheckbox != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaCheckbox, "", true)
	}

	if u.RecipientUpdateTemplateRecipientFieldMetaDropdown != nil {
		return utils.MarshalJSON(u.RecipientUpdateTemplateRecipientFieldMetaDropdown, "", true)
	}

	return nil, errors.New("could not marshal union type RecipientUpdateTemplateRecipientFieldMetaUnion: all fields are null")
}

type RecipientUpdateTemplateRecipientField struct {
	Type        RecipientUpdateTemplateRecipientType `json:"type"`
	ID          float64                              `json:"id"`
	SecondaryID string                               `json:"secondaryId"`
	DocumentID  *float64                             `json:"documentId"`
	TemplateID  *float64                             `json:"templateId"`
	RecipientID float64                              `json:"recipientId"`
	// The page number of the field on the document. Starts from 1.
	Page       float64                                         `json:"page"`
	PositionX  any                                             `json:"positionX,omitempty"`
	PositionY  any                                             `json:"positionY,omitempty"`
	Width      any                                             `json:"width,omitempty"`
	Height     any                                             `json:"height,omitempty"`
	CustomText string                                          `json:"customText"`
	Inserted   bool                                            `json:"inserted"`
	FieldMeta  *RecipientUpdateTemplateRecipientFieldMetaUnion `json:"fieldMeta"`
}

func (o *RecipientUpdateTemplateRecipientField) GetType() RecipientUpdateTemplateRecipientType {
	if o == nil {
		return RecipientUpdateTemplateRecipientType("")
	}
	return o.Type
}

func (o *RecipientUpdateTemplateRecipientField) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientField) GetSecondaryID() string {
	if o == nil {
		return ""
	}
	return o.SecondaryID
}

func (o *RecipientUpdateTemplateRecipientField) GetDocumentID() *float64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateTemplateRecipientField) GetTemplateID() *float64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateTemplateRecipientField) GetRecipientID() float64 {
	if o == nil {
		return 0.0
	}
	return o.RecipientID
}

func (o *RecipientUpdateTemplateRecipientField) GetPage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Page
}

func (o *RecipientUpdateTemplateRecipientField) GetPositionX() any {
	if o == nil {
		return nil
	}
	return o.PositionX
}

func (o *RecipientUpdateTemplateRecipientField) GetPositionY() any {
	if o == nil {
		return nil
	}
	return o.PositionY
}

func (o *RecipientUpdateTemplateRecipientField) GetWidth() any {
	if o == nil {
		return nil
	}
	return o.Width
}

func (o *RecipientUpdateTemplateRecipientField) GetHeight() any {
	if o == nil {
		return nil
	}
	return o.Height
}

func (o *RecipientUpdateTemplateRecipientField) GetCustomText() string {
	if o == nil {
		return ""
	}
	return o.CustomText
}

func (o *RecipientUpdateTemplateRecipientField) GetInserted() bool {
	if o == nil {
		return false
	}
	return o.Inserted
}

func (o *RecipientUpdateTemplateRecipientField) GetFieldMeta() *RecipientUpdateTemplateRecipientFieldMetaUnion {
	if o == nil {
		return nil
	}
	return o.FieldMeta
}

// RecipientUpdateTemplateRecipientResponseBody - Successful response
type RecipientUpdateTemplateRecipientResponseBody struct {
	Role              RecipientUpdateTemplateRecipientRoleResponse  `json:"role"`
	ReadStatus        RecipientUpdateTemplateRecipientReadStatus    `json:"readStatus"`
	SigningStatus     RecipientUpdateTemplateRecipientSigningStatus `json:"signingStatus"`
	SendStatus        RecipientUpdateTemplateRecipientSendStatus    `json:"sendStatus"`
	ID                float64                                       `json:"id"`
	DocumentID        *float64                                      `json:"documentId"`
	TemplateID        *float64                                      `json:"templateId"`
	Email             string                                        `json:"email"`
	Name              string                                        `json:"name"`
	Token             string                                        `json:"token"`
	DocumentDeletedAt *string                                       `json:"documentDeletedAt"`
	Expired           *string                                       `json:"expired"`
	SignedAt          *string                                       `json:"signedAt"`
	AuthOptions       *RecipientUpdateTemplateRecipientAuthOptions  `json:"authOptions"`
	// The order in which the recipient should sign the document. Only works if the document is set to sequential signing.
	SigningOrder    *float64                                `json:"signingOrder"`
	RejectionReason *string                                 `json:"rejectionReason"`
	Fields          []RecipientUpdateTemplateRecipientField `json:"fields"`
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetRole() RecipientUpdateTemplateRecipientRoleResponse {
	if o == nil {
		return RecipientUpdateTemplateRecipientRoleResponse("")
	}
	return o.Role
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetReadStatus() RecipientUpdateTemplateRecipientReadStatus {
	if o == nil {
		return RecipientUpdateTemplateRecipientReadStatus("")
	}
	return o.ReadStatus
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetSigningStatus() RecipientUpdateTemplateRecipientSigningStatus {
	if o == nil {
		return RecipientUpdateTemplateRecipientSigningStatus("")
	}
	return o.SigningStatus
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetSendStatus() RecipientUpdateTemplateRecipientSendStatus {
	if o == nil {
		return RecipientUpdateTemplateRecipientSendStatus("")
	}
	return o.SendStatus
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ID
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetDocumentID() *float64 {
	if o == nil {
		return nil
	}
	return o.DocumentID
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetTemplateID() *float64 {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetDocumentDeletedAt() *string {
	if o == nil {
		return nil
	}
	return o.DocumentDeletedAt
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetExpired() *string {
	if o == nil {
		return nil
	}
	return o.Expired
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetSignedAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedAt
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetAuthOptions() *RecipientUpdateTemplateRecipientAuthOptions {
	if o == nil {
		return nil
	}
	return o.AuthOptions
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetSigningOrder() *float64 {
	if o == nil {
		return nil
	}
	return o.SigningOrder
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetRejectionReason() *string {
	if o == nil {
		return nil
	}
	return o.RejectionReason
}

func (o *RecipientUpdateTemplateRecipientResponseBody) GetFields() []RecipientUpdateTemplateRecipientField {
	if o == nil {
		return []RecipientUpdateTemplateRecipientField{}
	}
	return o.Fields
}

type RecipientUpdateTemplateRecipientResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful response
	Object *RecipientUpdateTemplateRecipientResponseBody
}

func (o *RecipientUpdateTemplateRecipientResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RecipientUpdateTemplateRecipientResponse) GetObject() *RecipientUpdateTemplateRecipientResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
